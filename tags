!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AR	src/lib/Makefile	/^AR	= ar$/;"	m
AR	src/plugins/Makefile	/^AR	= ar$/;"	m
AR	src/widget/Makefile	/^AR	= ar$/;"	m
ARFLAGS	src/lib/Makefile	/^ARFLAGS	= -rc$/;"	m
ARFLAGS	src/plugins/Makefile	/^ARFLAGS	= -rc$/;"	m
ARFLAGS	src/widget/Makefile	/^ARFLAGS	= -rc$/;"	m
BC_COUNT	src/browser/browser.c	/^# define BC_COUNT /;"	d	file:
BC_DATE	src/browser/browser.c	/^	BC_DATE,$/;"	e	enum:_BrowserColumn	file:
BC_DISPLAY_DATE	src/browser/browser.c	/^	BC_DISPLAY_DATE,$/;"	e	enum:_BrowserColumn	file:
BC_DISPLAY_NAME	src/browser/browser.c	/^	BC_DISPLAY_NAME,$/;"	e	enum:_BrowserColumn	file:
BC_DISPLAY_SIZE	src/browser/browser.c	/^	BC_DISPLAY_SIZE,$/;"	e	enum:_BrowserColumn	file:
BC_GROUP	src/browser/browser.c	/^	BC_GROUP,$/;"	e	enum:_BrowserColumn	file:
BC_INODE	src/browser/browser.c	/^	BC_INODE,$/;"	e	enum:_BrowserColumn	file:
BC_IS_DIRECTORY	src/browser/browser.c	/^	BC_IS_DIRECTORY,$/;"	e	enum:_BrowserColumn	file:
BC_IS_EXECUTABLE	src/browser/browser.c	/^	BC_IS_EXECUTABLE,$/;"	e	enum:_BrowserColumn	file:
BC_IS_MOUNT_POINT	src/browser/browser.c	/^	BC_IS_MOUNT_POINT,$/;"	e	enum:_BrowserColumn	file:
BC_LAST	src/browser/browser.c	/^# define BC_LAST /;"	d	file:
BC_MIME_TYPE	src/browser/browser.c	/^	BC_MIME_TYPE$/;"	e	enum:_BrowserColumn	file:
BC_OWNER	src/browser/browser.c	/^	BC_OWNER,$/;"	e	enum:_BrowserColumn	file:
BC_PATH	src/browser/browser.c	/^	BC_PATH,$/;"	e	enum:_BrowserColumn	file:
BC_PIXBUF_24	src/browser/browser.c	/^	BC_PIXBUF_24,$/;"	e	enum:_BrowserColumn	file:
BC_PIXBUF_48	src/browser/browser.c	/^	BC_PIXBUF_48,$/;"	e	enum:_BrowserColumn	file:
BC_PIXBUF_96	src/browser/browser.c	/^	BC_PIXBUF_96,$/;"	e	enum:_BrowserColumn	file:
BC_SIZE	src/browser/browser.c	/^	BC_SIZE,$/;"	e	enum:_BrowserColumn	file:
BC_UPDATED	src/browser/browser.c	/^	BC_UPDATED = 0,$/;"	e	enum:_BrowserColumn	file:
BINDIR	src/Makefile	/^BINDIR	= $(PREFIX)\/bin$/;"	m
BINDIR	src/browser/Makefile	/^BINDIR	= $(PREFIX)\/bin$/;"	m
BINDIR	src/browser/browser.c	/^# define BINDIR	/;"	d	file:
BINDIR	src/desktop/Makefile	/^BINDIR	= $(PREFIX)\/bin$/;"	m
BINDIR	src/desktop/desktopicon.c	/^# define BINDIR	/;"	d	file:
BINDIR	src/plugins/volumes.c	/^# define BINDIR	/;"	d	file:
BINDIR	src/view.c	/^# define BINDIR	/;"	d	file:
BINDIR	tests/Makefile	/^BINDIR	= $(PREFIX)\/bin$/;"	m
BINDIR	tools/Makefile	/^BINDIR	= $(PREFIX)\/bin$/;"	m
BINDIR	tools/dirtree.c	/^# define BINDIR	/;"	d	file:
BMC_COUNT	src/browser/browser.c	/^#define BMC_COUNT /;"	d	file:
BMC_ICON	src/browser/browser.c	/^	BMC_ICON,$/;"	e	enum:_BrowserMimeColumn	file:
BMC_LAST	src/browser/browser.c	/^#define BMC_LAST /;"	d	file:
BMC_NAME	src/browser/browser.c	/^	BMC_NAME$/;"	e	enum:_BrowserMimeColumn	file:
BPC_BROWSERPLUGIN	src/browser/browser.c	/^	BPC_BROWSERPLUGIN,$/;"	e	enum:_BrowserPluginColumn	file:
BPC_BROWSERPLUGINDEFINITION	src/browser/browser.c	/^	BPC_BROWSERPLUGINDEFINITION,$/;"	e	enum:_BrowserPluginColumn	file:
BPC_COUNT	src/browser/browser.c	/^#define BPC_COUNT /;"	d	file:
BPC_ENABLED	src/browser/browser.c	/^	BPC_ENABLED,$/;"	e	enum:_BrowserPluginColumn	file:
BPC_ICON	src/browser/browser.c	/^	BPC_ICON,$/;"	e	enum:_BrowserPluginColumn	file:
BPC_LAST	src/browser/browser.c	/^#define BPC_LAST /;"	d	file:
BPC_NAME	src/browser/browser.c	/^	BPC_NAME = 0,$/;"	e	enum:_BrowserPluginColumn	file:
BPC_NAME_DISPLAY	src/browser/browser.c	/^	BPC_NAME_DISPLAY,$/;"	e	enum:_BrowserPluginColumn	file:
BPC_PLUGIN	src/browser/browser.c	/^	BPC_PLUGIN,$/;"	e	enum:_BrowserPluginColumn	file:
BPC_WIDGET	src/browser/browser.c	/^	BPC_WIDGET$/;"	e	enum:_BrowserPluginColumn	file:
BROWSER_BROWSER_BROWSER_H	include/Browser/browser.h	/^# define BROWSER_BROWSER_BROWSER_H$/;"	d
BROWSER_BROWSER_H	src/browser/browser.h	/^# define BROWSER_BROWSER_H$/;"	d
BROWSER_CALLBACKS_H	src/browser/callbacks.h	/^# define BROWSER_CALLBACKS_H$/;"	d
BROWSER_COMMON_H	src/common.h	/^# define BROWSER_COMMON_H$/;"	d
BROWSER_CONFIG_FILE	src/browser/browser.h	/^# define BROWSER_CONFIG_FILE	/;"	d
BROWSER_CONFIG_VENDOR	src/browser/browser.h	/^# define BROWSER_CONFIG_VENDOR	/;"	d
BROWSER_DESKTOPHANDLER_H	src/desktop/handler.h	/^# define BROWSER_DESKTOPHANDLER_H$/;"	d
BROWSER_DESKTOPICONWINDOW_H	src/desktop/desktopiconwindow.h	/^# define BROWSER_DESKTOPICONWINDOW_H$/;"	d
BROWSER_DESKTOPICON_H	src/desktop/desktopicon.h	/^# define BROWSER_DESKTOPICON_H$/;"	d
BROWSER_DESKTOP_H	src/desktop/desktop.h	/^# define BROWSER_DESKTOP_H$/;"	d
BROWSER_ICON_SIZE_ICONS	src/browser/browser.h	/^# define BROWSER_ICON_SIZE_ICONS	/;"	d
BROWSER_ICON_SIZE_SMALL_ICONS	src/browser/browser.h	/^# define BROWSER_ICON_SIZE_SMALL_ICONS	/;"	d
BROWSER_ICON_SIZE_THUMBNAILS	src/browser/browser.h	/^# define BROWSER_ICON_SIZE_THUMBNAILS	/;"	d
BROWSER_ICON_WRAP_WIDTH	src/browser/browser.h	/^# define BROWSER_ICON_WRAP_WIDTH	/;"	d
BROWSER_LIST_WRAP_WIDTH	src/browser/browser.h	/^# define BROWSER_LIST_WRAP_WIDTH	/;"	d
BROWSER_THUMBNAIL_WRAP_WIDTH	src/browser/browser.h	/^# define BROWSER_THUMBNAIL_WRAP_WIDTH	/;"	d
BROWSER_VIEW_COUNT	include/Browser/browser.h	/^# define BROWSER_VIEW_COUNT	/;"	d
BROWSER_VIEW_DETAILS	include/Browser/browser.h	/^	BROWSER_VIEW_DETAILS = 0,$/;"	e	enum:_BrowserView
BROWSER_VIEW_FIRST	include/Browser/browser.h	/^# define BROWSER_VIEW_FIRST	/;"	d
BROWSER_VIEW_ICONS	include/Browser/browser.h	/^	BROWSER_VIEW_ICONS,$/;"	e	enum:_BrowserView
BROWSER_VIEW_LAST	include/Browser/browser.h	/^#  define BROWSER_VIEW_LAST	/;"	d
BROWSER_VIEW_LIST	include/Browser/browser.h	/^	BROWSER_VIEW_LIST,$/;"	e	enum:_BrowserView
BROWSER_VIEW_THUMBNAILS	include/Browser/browser.h	/^	BROWSER_VIEW_THUMBNAILS$/;"	e	enum:_BrowserView
BROWSER_WINDOW_H	src/browser/window.h	/^# define BROWSER_WINDOW_H$/;"	d
Browser	doc/gtkdoc/html/Browser-plugin.html	/^<a name="Browser"><\/a><h3>Browser<\/h3>$/;"	a
Browser	include/Browser/plugin.h	/^typedef struct _Browser Browser;$/;"	t	typeref:struct:_Browser
Browser	src/properties.c	/^#define Browser /;"	d	file:
Browser	src/view.c	/^#define Browser /;"	d	file:
Browser-desktop	doc/gtkdoc/html/Browser-desktop.html	/^<a name="Browser-desktop"><\/a><div class="titlepage"><\/div>$/;"	a
Browser-desktop.description	doc/gtkdoc/html/Browser-desktop.html	/^<a name="Browser-desktop.description"><\/a><h2>Description<\/h2>$/;"	a
Browser-desktop.functions_details	doc/gtkdoc/html/Browser-desktop.html	/^<a name="Browser-desktop.functions_details"><\/a><h2>Functions<\/h2>$/;"	a
Browser-desktop.other	doc/gtkdoc/html/Browser-desktop.html	/^<a name="Browser-desktop.other"><\/a><h2>Types and Values<\/h2>$/;"	a
Browser-desktop.other_details	doc/gtkdoc/html/Browser-desktop.html	/^<a name="Browser-desktop.other_details"><\/a><h2>Types and Values<\/h2>$/;"	a
Browser-desktop.top_of_page	doc/gtkdoc/html/Browser-desktop.html	/^<h2><span class="refentrytitle"><a name="Browser-desktop.top_of_page"><\/a>desktop<\/span><\/h2>$/;"	a
Browser-plugin	doc/gtkdoc/html/Browser-plugin.html	/^<a name="Browser-plugin"><\/a><div class="titlepage"><\/div>$/;"	a
Browser-plugin.description	doc/gtkdoc/html/Browser-plugin.html	/^<a name="Browser-plugin.description"><\/a><h2>Description<\/h2>$/;"	a
Browser-plugin.functions	doc/gtkdoc/html/Browser-plugin.html	/^<a name="Browser-plugin.functions"><\/a><h2>Functions<\/h2>$/;"	a
Browser-plugin.functions_details	doc/gtkdoc/html/Browser-plugin.html	/^<a name="Browser-plugin.functions_details"><\/a><h2>Functions<\/h2>$/;"	a
Browser-plugin.other	doc/gtkdoc/html/Browser-plugin.html	/^<a name="Browser-plugin.other"><\/a><h2>Types and Values<\/h2>$/;"	a
Browser-plugin.other_details	doc/gtkdoc/html/Browser-plugin.html	/^<a name="Browser-plugin.other_details"><\/a><h2>Types and Values<\/h2>$/;"	a
Browser-plugin.top_of_page	doc/gtkdoc/html/Browser-plugin.html	/^<h2><span class="refentrytitle"><a name="Browser-plugin.top_of_page"><\/a>plugin<\/span><\/h2>$/;"	a
Browser-vfs	doc/gtkdoc/html/Browser-vfs.html	/^<a name="Browser-vfs"><\/a><div class="titlepage"><\/div>$/;"	a
Browser-vfs.description	doc/gtkdoc/html/Browser-vfs.html	/^<a name="Browser-vfs.description"><\/a><h2>Description<\/h2>$/;"	a
Browser-vfs.functions	doc/gtkdoc/html/Browser-vfs.html	/^<a name="Browser-vfs.functions"><\/a><h2>Functions<\/h2>$/;"	a
Browser-vfs.functions_details	doc/gtkdoc/html/Browser-vfs.html	/^<a name="Browser-vfs.functions_details"><\/a><h2>Functions<\/h2>$/;"	a
Browser-vfs.top_of_page	doc/gtkdoc/html/Browser-vfs.html	/^<h2><span class="refentrytitle"><a name="Browser-vfs.top_of_page"><\/a>vfs<\/span><\/h2>$/;"	a
BrowserColumn	src/browser/browser.c	/^} BrowserColumn;$/;"	t	typeref:enum:_BrowserColumn	file:
BrowserMimeColumn	src/browser/browser.c	/^} BrowserMimeColumn;$/;"	t	typeref:enum:_BrowserMimeColumn	file:
BrowserPlugin	doc/gtkdoc/html/Browser-plugin.html	/^<a name="BrowserPlugin"><\/a><h3>BrowserPlugin<\/h3>$/;"	a
BrowserPlugin	include/Browser/plugin.h	/^typedef struct _BrowserPlugin BrowserPlugin;$/;"	t	typeref:struct:_BrowserPlugin
BrowserPluginColumn	src/browser/browser.c	/^} BrowserPluginColumn;$/;"	t	typeref:enum:_BrowserPluginColumn	file:
BrowserPluginDefinition	include/Browser/plugin.h	/^} BrowserPluginDefinition;$/;"	t	typeref:struct:_BrowserPluginDefinition
BrowserPluginHelper	include/Browser/plugin.h	/^} BrowserPluginHelper;$/;"	t	typeref:struct:_BrowserPluginHelper
BrowserPrefs	src/browser/browser.h	/^} BrowserPrefs;$/;"	t	typeref:struct:_BrowserPrefs
BrowserView	include/Browser/browser.h	/^} BrowserView;$/;"	t	typeref:enum:_BrowserView
BrowserWidget	src/widget/widget.c	/^} BrowserWidget;$/;"	t	typeref:struct:_DesktopWidgetPlugin	file:
BrowserWindow	src/browser/window.h	/^typedef struct _BrowserWindow BrowserWindow;$/;"	t	typeref:struct:_BrowserWindow
CC	src/Makefile	/^CC	= cc$/;"	m
CC	src/browser/Makefile	/^CC	= cc$/;"	m
CC	src/desktop/Makefile	/^CC	= cc$/;"	m
CC	src/lib/Makefile	/^CC	= cc$/;"	m
CC	src/plugins/Makefile	/^CC	= cc$/;"	m
CC	src/widget/Makefile	/^CC	= cc$/;"	m
CC	tests/Makefile	/^CC	= cc$/;"	m
CC	tools/Makefile	/^CC	= cc$/;"	m
CCSHARED	src/lib/Makefile	/^CCSHARED= $(CC) -dynamiclib$/;"	m
CCSHARED	src/plugins/Makefile	/^CCSHARED= $(CC) -dynamiclib$/;"	m
CCSHARED	src/widget/Makefile	/^CCSHARED= $(CC) -dynamiclib$/;"	m
CFLAGS	src/Makefile	/^CFLAGS	= -W -Wall -g -O2 -fPIE -D_FORTIFY_SOURCE=2 -fstack-protector$/;"	m
CFLAGS	src/browser/Makefile	/^CFLAGS	= -W -Wall -g -O2 -fPIE -D_FORTIFY_SOURCE=2 -fstack-protector$/;"	m
CFLAGS	src/desktop/Makefile	/^CFLAGS	= -W -Wall -g -O2 -fPIE -D_FORTIFY_SOURCE=2 -fstack-protector$/;"	m
CFLAGS	src/lib/Makefile	/^CFLAGS	= -W -Wall -g -O2 -D_FORTIFY_SOURCE=2 -fstack-protector$/;"	m
CFLAGS	src/plugins/Makefile	/^CFLAGS	= -W -Wall -g -O2 -D_FORTIFY_SOURCE=2 -fstack-protector$/;"	m
CFLAGS	src/widget/Makefile	/^CFLAGS	= -W -Wall -g -O2 -D_FORTIFY_SOURCE=2 -fstack-protector$/;"	m
CFLAGS	tests/Makefile	/^CFLAGS	= -W -Wall -g -O2 -fPIE -D_FORTIFY_SOURCE=2 -fstack-protector$/;"	m
CFLAGS	tools/Makefile	/^CFLAGS	= -W -Wall -g -O2 -fPIE -D_FORTIFY_SOURCE=2 -fstack-protector$/;"	m
CFLAGSF	src/Makefile	/^CFLAGSF	= `pkg-config --cflags libDesktop`$/;"	m
CFLAGSF	src/browser/Makefile	/^CFLAGSF	= `pkg-config --cflags libDesktop`$/;"	m
CFLAGSF	src/desktop/Makefile	/^CFLAGSF	= `pkg-config --cflags libDesktop`$/;"	m
CFLAGSF	src/lib/Makefile	/^CFLAGSF	= `pkg-config --cflags libDesktop` -fPIC$/;"	m
CFLAGSF	src/plugins/Makefile	/^CFLAGSF	= `pkg-config --cflags libDesktop` -fPIC$/;"	m
CFLAGSF	src/widget/Makefile	/^CFLAGSF	= `pkg-config --cflags libDesktop` -fPIC$/;"	m
CFLAGSF	tests/Makefile	/^CFLAGSF	= `pkg-config --cflags libDesktop`$/;"	m
CFLAGSF	tools/Makefile	/^CFLAGSF	= `pkg-config --cflags libDesktop`$/;"	m
COL_COUNT	tools/iconlist.c	/^enum { COL_NAME = 0, COL_PIXBUF, COL_COUNT };$/;"	e	enum:__anon1	file:
COL_NAME	tools/iconlist.c	/^enum { COL_NAME = 0, COL_PIXBUF, COL_COUNT };$/;"	e	enum:__anon1	file:
COL_PIXBUF	tools/iconlist.c	/^enum { COL_NAME = 0, COL_PIXBUF, COL_COUNT };$/;"	e	enum:__anon1	file:
COMMON_DND	src/browser/browser.c	/^#define COMMON_DND$/;"	d	file:
COMMON_DND	src/desktop/desktopicon.c	/^#define COMMON_DND$/;"	d	file:
COMMON_EXEC	src/browser/browser.c	/^#define COMMON_EXEC$/;"	d	file:
COMMON_EXEC	src/desktop/desktopicon.c	/^#define COMMON_EXEC$/;"	d	file:
COMMON_GET_ABSOLUTE_PATH	src/browser/browser.c	/^#define COMMON_GET_ABSOLUTE_PATH$/;"	d	file:
COMMON_GET_ABSOLUTE_PATH	src/properties.c	/^#define COMMON_GET_ABSOLUTE_PATH$/;"	d	file:
COMMON_PROMPT	src/plugins/git.c	/^#define COMMON_PROMPT$/;"	d	file:
COMMON_SIZE	src/browser/browser.c	/^#define COMMON_SIZE$/;"	d	file:
COMMON_SIZE	src/plugins/selection.c	/^#define COMMON_SIZE$/;"	d	file:
COMMON_SYMLINK	src/browser/callbacks.c	/^#define COMMON_SYMLINK$/;"	d	file:
COMMON_SYMLINK	src/desktop/handler.c	/^#define COMMON_SYMLINK$/;"	d	file:
CPPFLAGS	src/Makefile	/^CPPFLAGS=$/;"	m
CPPFLAGS	src/browser/Makefile	/^CPPFLAGS=$/;"	m
CPPFLAGS	src/desktop/Makefile	/^CPPFLAGS=$/;"	m
CPPFLAGS	src/lib/Makefile	/^CPPFLAGS=$/;"	m
CPPFLAGS	src/plugins/Makefile	/^CPPFLAGS=$/;"	m
CPPFLAGS	src/widget/Makefile	/^CPPFLAGS=$/;"	m
CPPFLAGS	tests/Makefile	/^CPPFLAGS=$/;"	m
CPPFLAGS	tools/Makefile	/^CPPFLAGS=$/;"	m
CPPFLAGSF	src/Makefile	/^CPPFLAGSF= -I..\/include$/;"	m
CPPFLAGSF	src/browser/Makefile	/^CPPFLAGSF= -I..\/..\/include$/;"	m
CPPFLAGSF	src/desktop/Makefile	/^CPPFLAGSF= -I..\/..\/include$/;"	m
CPPFLAGSF	src/lib/Makefile	/^CPPFLAGSF=$/;"	m
CPPFLAGSF	src/plugins/Makefile	/^CPPFLAGSF= -I..\/..\/include$/;"	m
CPPFLAGSF	src/widget/Makefile	/^CPPFLAGSF= -I..\/..\/include$/;"	m
CPPFLAGSF	tests/Makefile	/^CPPFLAGSF= -I ..\/include$/;"	m
CPPFLAGSF	tools/Makefile	/^CPPFLAGSF=$/;"	m
CVS	src/plugins/cvs.c	/^} CVS;$/;"	t	typeref:struct:_BrowserPlugin	file:
CVSTask	src/plugins/cvs.c	/^typedef struct _CommonTask CVSTask;$/;"	t	typeref:struct:_CommonTask	file:
CommonTask	src/plugins/common.c	/^typedef struct _CommonTask CommonTask;$/;"	t	typeref:struct:_CommonTask	file:
CommonTaskCallback	src/plugins/common.c	/^typedef void (*CommonTaskCallback)(BrowserPlugin * plugin, CommonTask * task,$/;"	t	file:
Copy	src/copy.c	/^} Copy;$/;"	t	typeref:struct:_Copy	file:
DATADIR	src/browser/main.c	/^# define DATADIR	/;"	d	file:
DATADIR	src/copy.c	/^# define DATADIR	/;"	d	file:
DATADIR	src/delete.c	/^# define DATADIR	/;"	d	file:
DATADIR	src/desktop/desktopctl.c	/^# define DATADIR	/;"	d	file:
DATADIR	src/desktop/desktopicon.c	/^# define DATADIR	/;"	d	file:
DATADIR	src/desktop/handler.c	/^# define DATADIR	/;"	d	file:
DATADIR	src/desktop/main.c	/^# define DATADIR	/;"	d	file:
DATADIR	src/move.c	/^# define DATADIR	/;"	d	file:
DATADIR	src/open.c	/^# define DATADIR	/;"	d	file:
DATADIR	src/properties.c	/^# define DATADIR	/;"	d	file:
DATADIR	src/view.c	/^# define DATADIR	/;"	d	file:
DATA_DELETIONDATE	src/plugins/backup.c	/^#define DATA_DELETIONDATE	/;"	d	file:
DATA_DELETIONDATE	src/plugins/trash.c	/^# define DATA_DELETIONDATE	/;"	d	file:
DATA_EXTENSION	src/plugins/backup.c	/^#define DATA_EXTENSION	/;"	d	file:
DATA_EXTENSION	src/plugins/trash.c	/^# define DATA_EXTENSION	/;"	d	file:
DATA_PATH	src/plugins/backup.c	/^#define DATA_PATH	/;"	d	file:
DATA_PATH	src/plugins/trash.c	/^# define DATA_PATH	/;"	d	file:
DATA_SECTION	src/plugins/backup.c	/^#define DATA_SECTION	/;"	d	file:
DATA_SECTION	src/plugins/trash.c	/^# define DATA_SECTION	/;"	d	file:
DATA_TRASHFILES	src/plugins/trash.c	/^# define DATA_TRASHFILES	/;"	d	file:
DATA_TRASHINFO	src/plugins/backup.c	/^#define DATA_TRASHINFO	/;"	d	file:
DATA_TRASHINFO	src/plugins/trash.c	/^# define DATA_TRASHINFO	/;"	d	file:
DC_COUNT	src/plugins/dirtree.c	/^#define DC_COUNT /;"	d	file:
DC_COUNT	src/plugins/volumes.c	/^#define DC_COUNT /;"	d	file:
DC_DEVICE	src/plugins/volumes.c	/^	DC_DEVICE,$/;"	e	enum:_VolumesColumn	file:
DC_ELLIPSIZE	src/plugins/volumes.c	/^	DC_ELLIPSIZE,$/;"	e	enum:_VolumesColumn	file:
DC_ELLIPSIZE_SET	src/plugins/volumes.c	/^	DC_ELLIPSIZE_SET,$/;"	e	enum:_VolumesColumn	file:
DC_FILESYSTEM	src/plugins/volumes.c	/^	DC_FILESYSTEM,$/;"	e	enum:_VolumesColumn	file:
DC_FLAGS	src/plugins/volumes.c	/^	DC_FLAGS,$/;"	e	enum:_VolumesColumn	file:
DC_FREE	src/plugins/volumes.c	/^	DC_FREE,$/;"	e	enum:_VolumesColumn	file:
DC_FREE_DISPLAY	src/plugins/volumes.c	/^	DC_FREE_DISPLAY,$/;"	e	enum:_VolumesColumn	file:
DC_ICON	src/plugins/dirtree.c	/^	DC_ICON = 0,$/;"	e	enum:_DirtreeColumn	file:
DC_LAST	src/plugins/dirtree.c	/^#define DC_LAST /;"	d	file:
DC_LAST	src/plugins/volumes.c	/^#define DC_LAST /;"	d	file:
DC_MOUNTPOINT	src/plugins/volumes.c	/^	DC_MOUNTPOINT,$/;"	e	enum:_VolumesColumn	file:
DC_NAME	src/plugins/dirtree.c	/^	DC_NAME,$/;"	e	enum:_DirtreeColumn	file:
DC_NAME	src/plugins/volumes.c	/^	DC_NAME,$/;"	e	enum:_VolumesColumn	file:
DC_PATH	src/plugins/dirtree.c	/^	DC_PATH,$/;"	e	enum:_DirtreeColumn	file:
DC_PIXBUF	src/plugins/volumes.c	/^	DC_PIXBUF = 0,$/;"	e	enum:_VolumesColumn	file:
DC_SIZE	src/plugins/volumes.c	/^	DC_SIZE,$/;"	e	enum:_VolumesColumn	file:
DC_SIZE_DISPLAY	src/plugins/volumes.c	/^	DC_SIZE_DISPLAY,$/;"	e	enum:_VolumesColumn	file:
DC_UPDATED	src/plugins/dirtree.c	/^	DC_UPDATED$/;"	e	enum:_DirtreeColumn	file:
DC_UPDATED	src/plugins/volumes.c	/^	DC_UPDATED$/;"	e	enum:_VolumesColumn	file:
DESKTOP	src/desktop/handler.c	/^#define DESKTOP	/;"	d	file:
DESKTOP-ALIGNMENT-HORIZONTAL:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-ALIGNMENT-HORIZONTAL:CAPS"><\/a>DESKTOP_ALIGNMENT_HORIZONTAL<\/p><\/td>$/;"	a
DESKTOP-ALIGNMENT-VERTICAL:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-ALIGNMENT-VERTICAL:CAPS"><\/a>DESKTOP_ALIGNMENT_VERTICAL<\/p><\/td>$/;"	a
DESKTOP-CLIENT-MESSAGE:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DESKTOP-CLIENT-MESSAGE:CAPS"><\/a><h3>DESKTOP_CLIENT_MESSAGE<\/h3>$/;"	a
DESKTOP-ICONS-APPLICATIONS:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-ICONS-APPLICATIONS:CAPS"><\/a>DESKTOP_ICONS_APPLICATIONS<\/p><\/td>$/;"	a
DESKTOP-ICONS-CATEGORIES:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-ICONS-CATEGORIES:CAPS"><\/a>DESKTOP_ICONS_CATEGORIES<\/p><\/td>$/;"	a
DESKTOP-ICONS-COUNT:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DESKTOP-ICONS-COUNT:CAPS"><\/a><h3>DESKTOP_ICONS_COUNT<\/h3>$/;"	a
DESKTOP-ICONS-FILES:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-ICONS-FILES:CAPS"><\/a>DESKTOP_ICONS_FILES<\/p><\/td>$/;"	a
DESKTOP-ICONS-HOMESCREEN:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-ICONS-HOMESCREEN:CAPS"><\/a>DESKTOP_ICONS_HOMESCREEN<\/p><\/td>$/;"	a
DESKTOP-ICONS-LAST:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DESKTOP-ICONS-LAST:CAPS"><\/a><h3>DESKTOP_ICONS_LAST<\/h3>$/;"	a
DESKTOP-ICONS-NONE:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-ICONS-NONE:CAPS"><\/a>DESKTOP_ICONS_NONE<\/p><\/td>$/;"	a
DESKTOP-LAYOUT-LANDSCAPE:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-LAYOUT-LANDSCAPE:CAPS"><\/a>DESKTOP_LAYOUT_LANDSCAPE<\/p><\/td>$/;"	a
DESKTOP-LAYOUT-NORMAL:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-LAYOUT-NORMAL:CAPS"><\/a>DESKTOP_LAYOUT_NORMAL<\/p><\/td>$/;"	a
DESKTOP-LAYOUT-PORTRAIT:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-LAYOUT-PORTRAIT:CAPS"><\/a>DESKTOP_LAYOUT_PORTRAIT<\/p><\/td>$/;"	a
DESKTOP-LAYOUT-ROTATE:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-LAYOUT-ROTATE:CAPS"><\/a>DESKTOP_LAYOUT_ROTATE<\/p><\/td>$/;"	a
DESKTOP-LAYOUT-TOGGLE:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-LAYOUT-TOGGLE:CAPS"><\/a>DESKTOP_LAYOUT_TOGGLE<\/p><\/td>$/;"	a
DESKTOP-MESSAGE-SET-ALIGNMENT:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-MESSAGE-SET-ALIGNMENT:CAPS"><\/a>DESKTOP_MESSAGE_SET_ALIGNMENT<\/p><\/td>$/;"	a
DESKTOP-MESSAGE-SET-ICONS:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-MESSAGE-SET-ICONS:CAPS"><\/a>DESKTOP_MESSAGE_SET_ICONS<\/p><\/td>$/;"	a
DESKTOP-MESSAGE-SET-LAYOUT:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-MESSAGE-SET-LAYOUT:CAPS"><\/a>DESKTOP_MESSAGE_SET_LAYOUT<\/p><\/td>$/;"	a
DESKTOP-MESSAGE-SHOW:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-MESSAGE-SHOW:CAPS"><\/a>DESKTOP_MESSAGE_SHOW<\/p><\/td>$/;"	a
DESKTOP-SHOW-SETTINGS:CAPS	doc/gtkdoc/html/Browser-desktop.html	/^<td class="enum_member_name"><p><a name="DESKTOP-SHOW-SETTINGS:CAPS"><\/a>DESKTOP_SHOW_SETTINGS<\/p><\/td>$/;"	a
DESKTOPICON_ICON_SIZE	src/desktop/desktopicon.h	/^#define DESKTOPICON_ICON_SIZE	/;"	d
DESKTOPRC	src/desktop/desktop.c	/^#define DESKTOPRC	/;"	d	file:
DESKTOP_ALIGNMENT_HORIZONTAL	include/Browser/desktop.h	/^	DESKTOP_ALIGNMENT_HORIZONTAL$/;"	e	enum:_DesktopAlignment
DESKTOP_ALIGNMENT_VERTICAL	include/Browser/desktop.h	/^	DESKTOP_ALIGNMENT_VERTICAL = 0,$/;"	e	enum:_DesktopAlignment
DESKTOP_BROWSER_DESKTOP_H	include/Browser/desktop.h	/^# define DESKTOP_BROWSER_DESKTOP_H$/;"	d
DESKTOP_BROWSER_H	include/Browser.h	/^# define DESKTOP_BROWSER_H$/;"	d
DESKTOP_BROWSER_PLUGIN_H	include/Browser/plugin.h	/^# define DESKTOP_BROWSER_PLUGIN_H$/;"	d
DESKTOP_BROWSER_VFS_H	include/Browser/vfs.h	/^# define DESKTOP_BROWSER_VFS_H$/;"	d
DESKTOP_CLIENT_MESSAGE	include/Browser/desktop.h	/^# define DESKTOP_CLIENT_MESSAGE	/;"	d
DESKTOP_HOW_CENTERED	src/desktop/desktop.c	/^	DESKTOP_HOW_CENTERED,$/;"	e	enum:_DesktopHows	file:
DESKTOP_HOW_COUNT	src/desktop/desktop.c	/^#define DESKTOP_HOW_COUNT	/;"	d	file:
DESKTOP_HOW_LAST	src/desktop/desktop.c	/^#define DESKTOP_HOW_LAST	/;"	d	file:
DESKTOP_HOW_NONE	src/desktop/desktop.c	/^	DESKTOP_HOW_NONE = 0,$/;"	e	enum:_DesktopHows	file:
DESKTOP_HOW_SCALED	src/desktop/desktop.c	/^	DESKTOP_HOW_SCALED,$/;"	e	enum:_DesktopHows	file:
DESKTOP_HOW_SCALED_RATIO	src/desktop/desktop.c	/^	DESKTOP_HOW_SCALED_RATIO,$/;"	e	enum:_DesktopHows	file:
DESKTOP_HOW_TILED	src/desktop/desktop.c	/^	DESKTOP_HOW_TILED$/;"	e	enum:_DesktopHows	file:
DESKTOP_ICONS_APPLICATIONS	include/Browser/desktop.h	/^	DESKTOP_ICONS_APPLICATIONS,$/;"	e	enum:_DesktopIcons
DESKTOP_ICONS_CATEGORIES	include/Browser/desktop.h	/^	DESKTOP_ICONS_CATEGORIES,$/;"	e	enum:_DesktopIcons
DESKTOP_ICONS_COUNT	include/Browser/desktop.h	/^# define DESKTOP_ICONS_COUNT /;"	d
DESKTOP_ICONS_FILES	include/Browser/desktop.h	/^	DESKTOP_ICONS_FILES,$/;"	e	enum:_DesktopIcons
DESKTOP_ICONS_HOMESCREEN	include/Browser/desktop.h	/^	DESKTOP_ICONS_HOMESCREEN$/;"	e	enum:_DesktopIcons
DESKTOP_ICONS_LAST	include/Browser/desktop.h	/^# define DESKTOP_ICONS_LAST /;"	d
DESKTOP_ICONS_NONE	include/Browser/desktop.h	/^	DESKTOP_ICONS_NONE = 0,$/;"	e	enum:_DesktopIcons
DESKTOP_LAYOUT_LANDSCAPE	include/Browser/desktop.h	/^	DESKTOP_LAYOUT_LANDSCAPE,$/;"	e	enum:_DesktopLayout
DESKTOP_LAYOUT_NORMAL	include/Browser/desktop.h	/^	DESKTOP_LAYOUT_NORMAL = 0,$/;"	e	enum:_DesktopLayout
DESKTOP_LAYOUT_PORTRAIT	include/Browser/desktop.h	/^	DESKTOP_LAYOUT_PORTRAIT,$/;"	e	enum:_DesktopLayout
DESKTOP_LAYOUT_ROTATE	include/Browser/desktop.h	/^	DESKTOP_LAYOUT_ROTATE,$/;"	e	enum:_DesktopLayout
DESKTOP_LAYOUT_TOGGLE	include/Browser/desktop.h	/^	DESKTOP_LAYOUT_TOGGLE$/;"	e	enum:_DesktopLayout
DESKTOP_MESSAGE_SET_ALIGNMENT	include/Browser/desktop.h	/^	DESKTOP_MESSAGE_SET_ALIGNMENT = 0,$/;"	e	enum:_DesktopMessage
DESKTOP_MESSAGE_SET_ICONS	include/Browser/desktop.h	/^	DESKTOP_MESSAGE_SET_ICONS,$/;"	e	enum:_DesktopMessage
DESKTOP_MESSAGE_SET_LAYOUT	include/Browser/desktop.h	/^	DESKTOP_MESSAGE_SET_LAYOUT,$/;"	e	enum:_DesktopMessage
DESKTOP_MESSAGE_SHOW	include/Browser/desktop.h	/^	DESKTOP_MESSAGE_SHOW$/;"	e	enum:_DesktopMessage
DESKTOP_SHOW_SETTINGS	include/Browser/desktop.h	/^	DESKTOP_SHOW_SETTINGS = 0$/;"	e	enum:_DesktopShow
DESTDIR	Makefile	/^DESTDIR	=$/;"	m
DESTDIR	data/16x16/Makefile	/^DESTDIR	=$/;"	m
DESTDIR	data/Makefile	/^DESTDIR	=$/;"	m
DESTDIR	doc/Makefile	/^DESTDIR	=$/;"	m
DESTDIR	include/Browser/Makefile	/^DESTDIR	=$/;"	m
DESTDIR	include/Makefile	/^DESTDIR	=$/;"	m
DESTDIR	po/Makefile	/^DESTDIR	=$/;"	m
DESTDIR	src/Makefile	/^DESTDIR	=$/;"	m
DESTDIR	src/browser/Makefile	/^DESTDIR	=$/;"	m
DESTDIR	src/desktop/Makefile	/^DESTDIR	=$/;"	m
DESTDIR	src/lib/Makefile	/^DESTDIR	=$/;"	m
DESTDIR	src/plugins/Makefile	/^DESTDIR	=$/;"	m
DESTDIR	src/widget/Makefile	/^DESTDIR	=$/;"	m
DESTDIR	tests/Makefile	/^DESTDIR	=$/;"	m
DESTDIR	tools/Makefile	/^DESTDIR	=$/;"	m
DF_MOUNTED	src/plugins/volumes.c	/^	DF_MOUNTED	= 0x01,$/;"	e	enum:_VolumesFlag	file:
DF_NETWORK	src/plugins/volumes.c	/^	DF_NETWORK	= 0x02,$/;"	e	enum:_VolumesFlag	file:
DF_READONLY	src/plugins/volumes.c	/^	DF_READONLY	= 0x04,$/;"	e	enum:_VolumesFlag	file:
DF_REMOVABLE	src/plugins/volumes.c	/^	DF_REMOVABLE	= 0x08,$/;"	e	enum:_VolumesFlag	file:
DF_SHARED	src/plugins/volumes.c	/^	DF_SHARED	= 0x10$/;"	e	enum:_VolumesFlag	file:
DM_COUNT	src/delete.c	/^	DM_COUNT = 0,$/;"	e	enum:_DeleteMode	file:
DM_DELETE	src/delete.c	/^	DM_DELETE$/;"	e	enum:_DeleteMode	file:
DP_CDROM	src/plugins/volumes.c	/^	DP_CDROM = 0,$/;"	e	enum:_VolumesPixbuf	file:
DP_COUNT	src/plugins/volumes.c	/^#define DP_COUNT /;"	d	file:
DP_HARDDISK	src/plugins/volumes.c	/^	DP_HARDDISK,$/;"	e	enum:_VolumesPixbuf	file:
DP_LAST	src/plugins/volumes.c	/^#define DP_LAST /;"	d	file:
DP_NETWORK	src/plugins/volumes.c	/^	DP_NETWORK,$/;"	e	enum:_VolumesPixbuf	file:
DP_REMOVABLE	src/plugins/volumes.c	/^	DP_REMOVABLE$/;"	e	enum:_VolumesPixbuf	file:
Delete	src/delete.c	/^} Delete;$/;"	t	typeref:struct:_Delete	file:
DeleteDir	src/delete.c	/^typedef struct _DeleteDir DeleteDir;$/;"	t	typeref:struct:_DeleteDir	file:
DeleteMode	src/delete.c	/^} DeleteMode;$/;"	t	typeref:enum:_DeleteMode	file:
Desktop	doc/gtkdoc/html/Browser-desktop.html	/^<a name="Desktop"><\/a><h3>Desktop<\/h3>$/;"	a
Desktop	include/Browser/desktop.h	/^typedef struct _Desktop Desktop;$/;"	t	typeref:struct:_Desktop
DesktopAlignment	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DesktopAlignment"><\/a><h3>enum DesktopAlignment<\/h3>$/;"	a
DesktopAlignment	include/Browser/desktop.h	/^} DesktopAlignment;$/;"	t	typeref:enum:_DesktopAlignment
DesktopAlignment.members	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DesktopAlignment.members"><\/a><h4>Members<\/h4>$/;"	a
DesktopCategory	src/desktop/handler.c	/^} DesktopCategory;$/;"	t	typeref:struct:_DesktopCategory	file:
DesktopHandler	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DesktopHandler"><\/a><h3>DesktopHandler<\/h3>$/;"	a
DesktopHandler	include/Browser/desktop.h	/^typedef struct _DesktopHandler DesktopHandler;$/;"	t	typeref:struct:_DesktopHandler
DesktopHandlerApplications	src/desktop/handler.c	/^} DesktopHandlerApplications;$/;"	t	typeref:struct:_DesktopHandlerApplications	file:
DesktopHandlerCategories	src/desktop/handler.c	/^} DesktopHandlerCategories;$/;"	t	typeref:struct:_DesktopHandlerCategories	file:
DesktopHandlerFiles	src/desktop/handler.c	/^} DesktopHandlerFiles;$/;"	t	typeref:struct:_DesktopHandlerFiles	file:
DesktopHandlerHelper	include/Browser/desktop.h	/^} DesktopHandlerHelper;$/;"	t	typeref:struct:_DesktopHandlerHelper
DesktopHows	src/desktop/desktop.c	/^} DesktopHows;$/;"	t	typeref:enum:_DesktopHows	file:
DesktopIcon	src/common.h	/^typedef struct _DesktopIcon DesktopIcon;$/;"	t	typeref:struct:_DesktopIcon
DesktopIconCallback	src/desktop/desktopicon.h	/^typedef void (*DesktopIconCallback)(Desktop * desktop, gpointer data);$/;"	t
DesktopIconWindow	src/common.h	/^typedef struct _DesktopIconWindow DesktopIconWindow;$/;"	t	typeref:struct:_DesktopIconWindow
DesktopIcons	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DesktopIcons"><\/a><h3>enum DesktopIcons<\/h3>$/;"	a
DesktopIcons	include/Browser/desktop.h	/^} DesktopIcons;$/;"	t	typeref:enum:_DesktopIcons
DesktopIcons.members	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DesktopIcons.members"><\/a><h4>Members<\/h4>$/;"	a
DesktopLayout	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DesktopLayout"><\/a><h3>enum DesktopLayout<\/h3>$/;"	a
DesktopLayout	include/Browser/desktop.h	/^} DesktopLayout;$/;"	t	typeref:enum:_DesktopLayout
DesktopLayout.members	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DesktopLayout.members"><\/a><h4>Members<\/h4>$/;"	a
DesktopMessage	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DesktopMessage"><\/a><h3>enum DesktopMessage<\/h3>$/;"	a
DesktopMessage	include/Browser/desktop.h	/^} DesktopMessage;$/;"	t	typeref:enum:_DesktopMessage
DesktopMessage.members	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DesktopMessage.members"><\/a><h4>Members<\/h4>$/;"	a
DesktopMessageShow	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DesktopMessageShow"><\/a><h3>enum DesktopMessageShow<\/h3>$/;"	a
DesktopMessageShow	include/Browser/desktop.h	/^} DesktopMessageShow;$/;"	t	typeref:enum:_DesktopShow
DesktopMessageShow.members	doc/gtkdoc/html/Browser-desktop.html	/^<a name="DesktopMessageShow.members"><\/a><h4>Members<\/h4>$/;"	a
DesktopPrefs	src/desktop/desktop.h	/^} DesktopPrefs;$/;"	t	typeref:struct:_DesktopPrefs
Dirtree	src/plugins/dirtree.c	/^} Dirtree;$/;"	t	typeref:struct:_BrowserPlugin	file:
DirtreeColumn	src/plugins/dirtree.c	/^} DirtreeColumn;$/;"	t	typeref:enum:_DirtreeColumn	file:
EXEEXT	src/Makefile	/^EXEEXT	=$/;"	m
EXEEXT	src/browser/Makefile	/^EXEEXT	=$/;"	m
EXEEXT	src/desktop/Makefile	/^EXEEXT	=$/;"	m
EXEEXT	src/lib/Makefile	/^EXEEXT	=$/;"	m
EXEEXT	src/plugins/Makefile	/^EXEEXT	=$/;"	m
EXEEXT	src/widget/Makefile	/^EXEEXT	=$/;"	m
EXEEXT	tests/Makefile	/^EXEEXT	=$/;"	m
EXEEXT	tools/Makefile	/^EXEEXT	=$/;"	m
FC_COUNT	src/plugins/favorites.c	/^#define FC_COUNT /;"	d	file:
FC_ICON	src/plugins/favorites.c	/^	FC_ICON = 0,$/;"	e	enum:_FavoritesColumn	file:
FC_LAST	src/plugins/favorites.c	/^#define FC_LAST /;"	d	file:
FC_NAME	src/plugins/favorites.c	/^	FC_NAME,$/;"	e	enum:_FavoritesColumn	file:
FC_PATH	src/plugins/favorites.c	/^	FC_PATH$/;"	e	enum:_FavoritesColumn	file:
Favorites	src/plugins/favorites.c	/^} Favorites;$/;"	t	typeref:struct:_BrowserPlugin	file:
FavoritesColumn	src/plugins/favorites.c	/^} FavoritesColumn;$/;"	t	typeref:enum:_FavoritesColumn	file:
Git	src/plugins/git.c	/^} Git;$/;"	t	typeref:struct:_BrowserPlugin	file:
GitTask	src/plugins/git.c	/^typedef struct _CommonTask GitTask;$/;"	t	typeref:struct:_CommonTask	file:
ICON_NAME	src/browser/window.c	/^#define ICON_NAME	/;"	d	file:
IDLE_LOOP_ICON_CNT	src/browser/browser.c	/^#define IDLE_LOOP_ICON_CNT	/;"	d	file:
IDLE_LOOP_ICON_CNT	src/desktop/handler.c	/^#define IDLE_LOOP_ICON_CNT	/;"	d	file:
INCLUDEDIR	include/Browser/Makefile	/^INCLUDEDIR= $(PREFIX)\/include$/;"	m
INCLUDEDIR	include/Makefile	/^INCLUDEDIR= $(PREFIX)\/include$/;"	m
INSTALL	Makefile	/^INSTALL	= install$/;"	m
INSTALL	data/16x16/Makefile	/^INSTALL	= install$/;"	m
INSTALL	data/Makefile	/^INSTALL	= install$/;"	m
INSTALL	doc/Makefile	/^INSTALL	= install$/;"	m
INSTALL	include/Browser/Makefile	/^INSTALL	= install$/;"	m
INSTALL	include/Makefile	/^INSTALL	= install$/;"	m
INSTALL	po/Makefile	/^INSTALL	= install$/;"	m
INSTALL	src/Makefile	/^INSTALL	= install$/;"	m
INSTALL	src/browser/Makefile	/^INSTALL	= install$/;"	m
INSTALL	src/desktop/Makefile	/^INSTALL	= install$/;"	m
INSTALL	src/lib/Makefile	/^INSTALL	= install$/;"	m
INSTALL	src/plugins/Makefile	/^INSTALL	= install$/;"	m
INSTALL	src/widget/Makefile	/^INSTALL	= install$/;"	m
INSTALL	tests/Makefile	/^INSTALL	= install$/;"	m
INSTALL	tools/Makefile	/^INSTALL	= install$/;"	m
IconCallback	src/browser/browser.c	/^} IconCallback;$/;"	t	typeref:struct:_IconCallback	file:
LDFLAGS	src/Makefile	/^LDFLAGS	= -pie -Wl,-z,relro -Wl,-z,now$/;"	m
LDFLAGS	src/browser/Makefile	/^LDFLAGS	= -pie -Wl,-z,relro -Wl,-z,now$/;"	m
LDFLAGS	src/desktop/Makefile	/^LDFLAGS	= -pie -Wl,-z,relro -Wl,-z,now$/;"	m
LDFLAGS	src/lib/Makefile	/^LDFLAGS	= -Wl,-z,relro -Wl,-z,now$/;"	m
LDFLAGS	src/plugins/Makefile	/^LDFLAGS	= -Wl,-z,relro -Wl,-z,now$/;"	m
LDFLAGS	src/widget/Makefile	/^LDFLAGS	= -Wl,-z,relro -Wl,-z,now$/;"	m
LDFLAGS	tests/Makefile	/^LDFLAGS	= -pie -Wl,-z,relro -Wl,-z,now$/;"	m
LDFLAGS	tools/Makefile	/^LDFLAGS	= -pie -Wl,-z,relro -Wl,-z,now$/;"	m
LDFLAGSF	src/Makefile	/^LDFLAGSF= `pkg-config --libs libDesktop` -lintl$/;"	m
LDFLAGSF	src/browser/Makefile	/^LDFLAGSF= `pkg-config --libs libDesktop` -lintl -L$(OBJDIR)..\/lib -Wl,-rpath,$(PREFIX)\/lib -lBrowser$/;"	m
LDFLAGSF	src/desktop/Makefile	/^LDFLAGSF= `pkg-config --libs libDesktop` -lintl$/;"	m
LDFLAGSF	src/lib/Makefile	/^LDFLAGSF= `pkg-config --libs libDesktop` -lintl$/;"	m
LDFLAGSF	src/plugins/Makefile	/^LDFLAGSF= `pkg-config --libs libDesktop`$/;"	m
LDFLAGSF	src/widget/Makefile	/^LDFLAGSF= `pkg-config --libs libDesktop` -lintl -L$(OBJDIR)..\/lib -Wl,-rpath,$(LIBDIR) -lBrowser$/;"	m
LDFLAGSF	tests/Makefile	/^LDFLAGSF= `pkg-config --libs libDesktop`$/;"	m
LDFLAGSF	tools/Makefile	/^LDFLAGSF= `pkg-config --libs libDesktop`$/;"	m
LIBDIR	config.h	/^# define LIBDIR /;"	d
LIBDIR	src/browser/browser.c	/^# define LIBDIR	/;"	d	file:
LIBDIR	src/lib/Makefile	/^LIBDIR	= $(PREFIX)\/lib$/;"	m
LIBDIR	src/plugins/Makefile	/^LIBDIR	= $(PREFIX)\/lib$/;"	m
LIBDIR	src/widget/Makefile	/^LIBDIR	= $(PREFIX)\/lib$/;"	m
LN	Makefile	/^LN	= ln -f$/;"	m
LN	data/Makefile	/^LN	= ln -f$/;"	m
LN	doc/Makefile	/^LN	= ln -f$/;"	m
LN	include/Browser/Makefile	/^LN	= ln -f$/;"	m
LN	include/Makefile	/^LN	= ln -f$/;"	m
LN	po/Makefile	/^LN	= ln -f$/;"	m
LN	src/Makefile	/^LN	= ln -f$/;"	m
LN	src/browser/Makefile	/^LN	= ln -f$/;"	m
LN	src/desktop/Makefile	/^LN	= ln -f$/;"	m
LN	src/lib/Makefile	/^LN	= ln -f$/;"	m
LN	src/plugins/Makefile	/^LN	= ln -f$/;"	m
LN	src/widget/Makefile	/^LN	= ln -f$/;"	m
LN	tests/Makefile	/^LN	= ln -f$/;"	m
LN	tools/Makefile	/^LN	= ln -f$/;"	m
LOCALEDIR	src/browser/main.c	/^# define LOCALEDIR	/;"	d	file:
LOCALEDIR	src/copy.c	/^# define LOCALEDIR	/;"	d	file:
LOCALEDIR	src/delete.c	/^# define LOCALEDIR	/;"	d	file:
LOCALEDIR	src/desktop/desktopctl.c	/^# define LOCALEDIR	/;"	d	file:
LOCALEDIR	src/desktop/main.c	/^# define LOCALEDIR	/;"	d	file:
LOCALEDIR	src/move.c	/^# define LOCALEDIR	/;"	d	file:
LOCALEDIR	src/open.c	/^# define LOCALEDIR	/;"	d	file:
LOCALEDIR	src/properties.c	/^# define LOCALEDIR	/;"	d	file:
LOCALEDIR	src/view.c	/^# define LOCALEDIR	/;"	d	file:
MAKE_CONFIGURE	src/plugins/make.c	/^#define MAKE_CONFIGURE	/;"	d	file:
MAKE_MAKE	src/plugins/make.c	/^#define MAKE_MAKE	/;"	d	file:
MIMEAPP_H	src/desktop/handler/mimeapp.h	/^# define MIMEAPP_H$/;"	d
MKDIR	Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	data/16x16/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	data/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	doc/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	include/Browser/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	include/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	po/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	src/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	src/browser/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	src/desktop/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	src/lib/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	src/plugins/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	src/widget/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	tests/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
MKDIR	tools/Makefile	/^MKDIR	= mkdir -m 0755 -p$/;"	m
Make	src/plugins/make.c	/^} Make;$/;"	t	typeref:struct:_BrowserPlugin	file:
MakeTask	src/plugins/make.c	/^typedef struct _CommonTask MakeTask;$/;"	t	typeref:struct:_CommonTask	file:
MimeApp	src/desktop/handler/mimeapp.h	/^typedef struct _MimeApp MimeApp;$/;"	t	typeref:struct:_MimeApp
Move	src/move.c	/^} Move;$/;"	t	typeref:struct:_Move	file:
N_	src/browser/browser.c	/^#define N_(/;"	d	file:
N_	src/browser/callbacks.c	/^#define N_(/;"	d	file:
N_	src/browser/window.c	/^#define N_(/;"	d	file:
N_	src/desktop/desktop.c	/^#define N_(/;"	d	file:
N_	src/desktop/handler.c	/^#define N_(/;"	d	file:
N_	src/plugins/common.c	/^#define N_(/;"	d	file:
N_	src/plugins/dirtree.c	/^#define N_(/;"	d	file:
N_	src/plugins/favorites.c	/^#define N_(/;"	d	file:
N_	src/plugins/places.c	/^#define N_(/;"	d	file:
N_	src/plugins/preview.c	/^#define N_(/;"	d	file:
N_	src/plugins/properties.c	/^#define N_(/;"	d	file:
N_	src/plugins/selection.c	/^#define N_(/;"	d	file:
N_	src/plugins/template.c	/^#define N_(/;"	d	file:
N_	src/plugins/trash.c	/^#define N_(/;"	d	file:
N_	src/plugins/undelete.c	/^#define N_(/;"	d	file:
N_	src/plugins/volumes.c	/^#define N_(/;"	d	file:
N_	src/properties.c	/^#define N_(/;"	d	file:
N_	src/view.c	/^#define N_(/;"	d	file:
OBJDIR	Makefile	/^OBJDIR	=$/;"	m
OBJDIR	data/16x16/Makefile	/^OBJDIR	=$/;"	m
OBJDIR	data/Makefile	/^OBJDIR	=$/;"	m
OBJDIR	doc/Makefile	/^OBJDIR	=$/;"	m
OBJDIR	include/Browser/Makefile	/^OBJDIR	=$/;"	m
OBJDIR	include/Makefile	/^OBJDIR	=$/;"	m
OBJDIR	po/Makefile	/^OBJDIR	=$/;"	m
OBJDIR	src/Makefile	/^OBJDIR	=$/;"	m
OBJDIR	src/browser/Makefile	/^OBJDIR	=$/;"	m
OBJDIR	src/desktop/Makefile	/^OBJDIR	=$/;"	m
OBJDIR	src/lib/Makefile	/^OBJDIR	=$/;"	m
OBJDIR	src/plugins/Makefile	/^OBJDIR	=$/;"	m
OBJDIR	src/widget/Makefile	/^OBJDIR	=$/;"	m
OBJDIR	tests/Makefile	/^OBJDIR	=$/;"	m
OBJDIR	tools/Makefile	/^OBJDIR	=$/;"	m
PACKAGE	Makefile	/^PACKAGE	= Browser$/;"	m
PACKAGE	config.h	/^#define PACKAGE /;"	d
PLUGIN_DESCRIPTION	src/plugins/backup.c	/^#define PLUGIN_DESCRIPTION	/;"	d	file:
PLUGIN_DESCRIPTION	src/plugins/trash.c	/^# define PLUGIN_DESCRIPTION	/;"	d	file:
PLUGIN_ICON	src/plugins/backup.c	/^#define PLUGIN_ICON	/;"	d	file:
PLUGIN_ICON	src/plugins/trash.c	/^# define PLUGIN_ICON	/;"	d	file:
PLUGIN_NAME	src/plugins/backup.c	/^#define PLUGIN_NAME	/;"	d	file:
PLUGIN_NAME	src/plugins/trash.c	/^# define PLUGIN_NAME	/;"	d	file:
PREFIX	Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	config.h	/^# define PREFIX /;"	d
PREFIX	data/16x16/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	data/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	doc/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	include/Browser/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	include/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	po/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	src/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	src/browser/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	src/browser/browser.c	/^# define PREFIX	/;"	d	file:
PREFIX	src/browser/main.c	/^# define PREFIX	/;"	d	file:
PREFIX	src/copy.c	/^# define PREFIX	/;"	d	file:
PREFIX	src/delete.c	/^# define PREFIX	/;"	d	file:
PREFIX	src/desktop/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	src/desktop/desktopctl.c	/^# define PREFIX	/;"	d	file:
PREFIX	src/desktop/desktopicon.c	/^# define PREFIX	/;"	d	file:
PREFIX	src/desktop/handler.c	/^# define PREFIX	/;"	d	file:
PREFIX	src/desktop/main.c	/^# define PREFIX	/;"	d	file:
PREFIX	src/lib/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	src/move.c	/^# define PREFIX	/;"	d	file:
PREFIX	src/open.c	/^# define PREFIX	/;"	d	file:
PREFIX	src/plugins/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	src/plugins/volumes.c	/^# define PREFIX	/;"	d	file:
PREFIX	src/properties.c	/^# define PREFIX	/;"	d	file:
PREFIX	src/view.c	/^# define PREFIX	/;"	d	file:
PREFIX	src/widget/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	tests/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	tools/Makefile	/^PREFIX	= \/Users\/khorben\/opt\/DeforaOS$/;"	m
PREFIX	tools/dirtree.c	/^# define PREFIX	/;"	d	file:
PREFS_H	src/copy.c	/^#define PREFS_H /;"	d	file:
PREFS_L	src/copy.c	/^#define PREFS_L /;"	d	file:
PREFS_P	src/copy.c	/^#define PREFS_P /;"	d	file:
PREFS_R	src/copy.c	/^#define PREFS_R /;"	d	file:
PREFS_R	src/delete.c	/^#define PREFS_R /;"	d	file:
PREFS_f	src/copy.c	/^#define PREFS_f /;"	d	file:
PREFS_f	src/delete.c	/^#define PREFS_f /;"	d	file:
PREFS_f	src/move.c	/^#define PREFS_f /;"	d	file:
PREFS_i	src/copy.c	/^#define PREFS_i /;"	d	file:
PREFS_i	src/delete.c	/^#define PREFS_i /;"	d	file:
PREFS_i	src/move.c	/^#define PREFS_i /;"	d	file:
PREFS_l	tools/iconlist.c	/^#define PREFS_l /;"	d	file:
PREFS_p	src/copy.c	/^#define PREFS_p /;"	d	file:
PREFS_p	tools/dirtree.c	/^#define PREFS_p	/;"	d	file:
PREFS_u	tools/dirtree.c	/^#define PREFS_u	/;"	d	file:
PREVIEW_IMAGE_HOW_FIT	src/plugins/preview.c	/^	PREVIEW_IMAGE_HOW_FIT = 0,$/;"	e	enum:_PreviewImageHow	file:
PREVIEW_IMAGE_HOW_ORIGINAL	src/plugins/preview.c	/^	PREVIEW_IMAGE_HOW_ORIGINAL,$/;"	e	enum:_PreviewImageHow	file:
PREVIEW_IMAGE_HOW_SCALE	src/plugins/preview.c	/^	PREVIEW_IMAGE_HOW_SCALE$/;"	e	enum:_PreviewImageHow	file:
PREVIEW_IMAGE_SIZE_DEFAULT	src/plugins/preview.c	/^#define PREVIEW_IMAGE_SIZE_DEFAULT	/;"	d	file:
PROGNAME	src/browser/main.c	/^# define PROGNAME	/;"	d	file:
PROGNAME	src/desktop/main.c	/^# define PROGNAME	/;"	d	file:
PROGNAME	tests/plugins.c	/^# define PROGNAME	/;"	d	file:
PROGNAME	tests/vfs.c	/^# define PROGNAME	/;"	d	file:
PROGNAME	tools/dirtree.c	/^# define PROGNAME	/;"	d	file:
PROGNAME_BROWSER	src/browser/browser.c	/^# define PROGNAME_BROWSER /;"	d	file:
PROGNAME_BROWSER	src/browser/window.c	/^# define PROGNAME_BROWSER	/;"	d	file:
PROGNAME_BROWSER	src/desktop/desktopicon.c	/^# define PROGNAME_BROWSER	/;"	d	file:
PROGNAME_BROWSER	src/plugins/volumes.c	/^# define PROGNAME_BROWSER	/;"	d	file:
PROGNAME_BROWSER	tools/dirtree.c	/^# define PROGNAME_BROWSER	/;"	d	file:
PROGNAME_COPY	src/browser/browser.c	/^# define PROGNAME_COPY /;"	d	file:
PROGNAME_COPY	src/copy.c	/^# define PROGNAME_COPY	/;"	d	file:
PROGNAME_CVS	src/plugins/cvs.c	/^#define PROGNAME_CVS	/;"	d	file:
PROGNAME_DELETE	src/browser/browser.c	/^# define PROGNAME_DELETE /;"	d	file:
PROGNAME_DELETE	src/delete.c	/^# define PROGNAME_DELETE	/;"	d	file:
PROGNAME_DELETE	src/desktop/desktopicon.c	/^# define PROGNAME_DELETE	/;"	d	file:
PROGNAME_DESKTOP	src/desktop/desktop.c	/^# define PROGNAME_DESKTOP	/;"	d	file:
PROGNAME_DESKTOP	src/desktop/desktopicon.c	/^# define PROGNAME_DESKTOP	/;"	d	file:
PROGNAME_DESKTOPCTL	src/desktop/desktopctl.c	/^# define PROGNAME_DESKTOPCTL	/;"	d	file:
PROGNAME_EJECT	src/lib/vfs.c	/^# define PROGNAME_EJECT	/;"	d	file:
PROGNAME_GIT	src/plugins/git.c	/^#define PROGNAME_GIT	/;"	d	file:
PROGNAME_HTMLAPP	src/desktop/desktopicon.c	/^# define PROGNAME_HTMLAPP	/;"	d	file:
PROGNAME_ICONLIST	tools/iconlist.c	/^# define PROGNAME_ICONLIST	/;"	d	file:
PROGNAME_MOUNT	src/lib/vfs.c	/^# define PROGNAME_MOUNT	/;"	d	file:
PROGNAME_MOVE	src/browser/browser.c	/^# define PROGNAME_MOVE /;"	d	file:
PROGNAME_MOVE	src/move.c	/^# define PROGNAME_MOVE	/;"	d	file:
PROGNAME_OPEN	src/open.c	/^# define PROGNAME_OPEN	/;"	d	file:
PROGNAME_PROPERTIES	src/browser/browser.c	/^# define PROGNAME_PROPERTIES /;"	d	file:
PROGNAME_PROPERTIES	src/desktop/desktopicon.c	/^# define PROGNAME_PROPERTIES	/;"	d	file:
PROGNAME_PROPERTIES	src/plugins/volumes.c	/^# define PROGNAME_PROPERTIES	/;"	d	file:
PROGNAME_PROPERTIES	src/properties.c	/^# define PROGNAME_PROPERTIES	/;"	d	file:
PROGNAME_PROPERTIES	src/view.c	/^# define PROGNAME_PROPERTIES	/;"	d	file:
PROGNAME_SUDO	src/lib/vfs.c	/^# define PROGNAME_SUDO	/;"	d	file:
PROGNAME_SVN	src/plugins/subversion.c	/^#define PROGNAME_SVN	/;"	d	file:
PROGNAME_UMOUNT	src/lib/vfs.c	/^# define PROGNAME_UMOUNT	/;"	d	file:
PROGNAME_VIEW	src/view.c	/^# define PROGNAME_VIEW	/;"	d	file:
Places	src/plugins/places.c	/^} Places;$/;"	t	typeref:struct:_BrowserPlugin	file:
Prefs	src/copy.c	/^typedef int Prefs;$/;"	t	file:
Prefs	src/delete.c	/^typedef int Prefs;$/;"	t	file:
Prefs	src/move.c	/^typedef int Prefs;$/;"	t	file:
Prefs	tools/dirtree.c	/^typedef int Prefs;$/;"	t	file:
Prefs	tools/iconlist.c	/^} Prefs;$/;"	t	typeref:struct:_Prefs	file:
Preview	src/plugins/preview.c	/^} Preview;$/;"	t	typeref:struct:_BrowserPlugin	file:
PreviewImageHow	src/plugins/preview.c	/^} PreviewImageHow;$/;"	t	typeref:enum:_PreviewImageHow	file:
Properties	src/plugins/properties.c	/^} Properties;$/;"	t	typeref:struct:_BrowserPlugin	file:
RANLIB	src/lib/Makefile	/^RANLIB	= ranlib$/;"	m
RANLIB	src/plugins/Makefile	/^RANLIB	= ranlib$/;"	m
RANLIB	src/widget/Makefile	/^RANLIB	= ranlib$/;"	m
RM	Makefile	/^RM	= rm -f$/;"	m
RM	data/16x16/Makefile	/^RM	= rm -f$/;"	m
RM	data/Makefile	/^RM	= rm -f$/;"	m
RM	doc/Makefile	/^RM	= rm -f$/;"	m
RM	include/Browser/Makefile	/^RM	= rm -f$/;"	m
RM	include/Makefile	/^RM	= rm -f$/;"	m
RM	po/Makefile	/^RM	= rm -f$/;"	m
RM	src/Makefile	/^RM	= rm -f$/;"	m
RM	src/browser/Makefile	/^RM	= rm -f$/;"	m
RM	src/desktop/Makefile	/^RM	= rm -f$/;"	m
RM	src/lib/Makefile	/^RM	= rm -f$/;"	m
RM	src/plugins/Makefile	/^RM	= rm -f$/;"	m
RM	src/widget/Makefile	/^RM	= rm -f$/;"	m
RM	tests/Makefile	/^RM	= rm -f$/;"	m
RM	tools/Makefile	/^RM	= rm -f$/;"	m
SBINDIR	src/Makefile	/^SBINDIR	= $(PREFIX)\/sbin$/;"	m
SBINDIR	src/browser/Makefile	/^SBINDIR	= $(PREFIX)\/sbin$/;"	m
SBINDIR	src/desktop/Makefile	/^SBINDIR	= $(PREFIX)\/sbin$/;"	m
SBINDIR	tests/Makefile	/^SBINDIR	= $(PREFIX)\/sbin$/;"	m
SBINDIR	tools/Makefile	/^SBINDIR	= $(PREFIX)\/sbin$/;"	m
SC_COUNT	src/plugins/selection.c	/^#define SC_COUNT /;"	d	file:
SC_ELLIPSIZE	src/plugins/selection.c	/^	SC_ELLIPSIZE$/;"	e	enum:_SelectionCount	file:
SC_FILENAME	src/plugins/selection.c	/^	SC_ICON = 0, SC_FILENAME, SC_FILENAME_DISPLAY, SC_SIZE, SC_SIZE_DISPLAY,$/;"	e	enum:_SelectionCount	file:
SC_FILENAME_DISPLAY	src/plugins/selection.c	/^	SC_ICON = 0, SC_FILENAME, SC_FILENAME_DISPLAY, SC_SIZE, SC_SIZE_DISPLAY,$/;"	e	enum:_SelectionCount	file:
SC_ICON	src/plugins/selection.c	/^	SC_ICON = 0, SC_FILENAME, SC_FILENAME_DISPLAY, SC_SIZE, SC_SIZE_DISPLAY,$/;"	e	enum:_SelectionCount	file:
SC_LAST	src/plugins/selection.c	/^#define SC_LAST /;"	d	file:
SC_SIZE	src/plugins/selection.c	/^	SC_ICON = 0, SC_FILENAME, SC_FILENAME_DISPLAY, SC_SIZE, SC_SIZE_DISPLAY,$/;"	e	enum:_SelectionCount	file:
SC_SIZE_DISPLAY	src/plugins/selection.c	/^	SC_ICON = 0, SC_FILENAME, SC_FILENAME_DISPLAY, SC_SIZE, SC_SIZE_DISPLAY,$/;"	e	enum:_SelectionCount	file:
SOEXT	src/lib/Makefile	/^SOEXT	= .dylib$/;"	m
SOEXT	src/plugins/Makefile	/^SOEXT	= .dylib$/;"	m
SOEXT	src/widget/Makefile	/^SOEXT	= .dylib$/;"	m
SUBDIRS	Makefile	/^SUBDIRS	= data doc include po src\/lib src src\/plugins src\/widget tests tools$/;"	m
SUBDIRS	data/Makefile	/^SUBDIRS	= 16x16$/;"	m
SUBDIRS	doc/Makefile	/^SUBDIRS	= gtkdoc$/;"	m
SUBDIRS	include/Makefile	/^SUBDIRS	= Browser$/;"	m
SUBDIRS	src/Makefile	/^SUBDIRS	= browser desktop$/;"	m
SVN	src/plugins/subversion.c	/^} SVN;$/;"	t	typeref:struct:_BrowserPlugin	file:
SVNTask	src/plugins/subversion.c	/^typedef struct _CommonTask SVNTask;$/;"	t	typeref:struct:_CommonTask	file:
Selection	src/plugins/selection.c	/^} Selection;$/;"	t	typeref:struct:_BrowserPlugin	file:
SelectionCount	src/plugins/selection.c	/^} SelectionCount;$/;"	t	typeref:enum:_SelectionCount	file:
TAR	Makefile	/^TAR	= tar$/;"	m
TARGETS	Makefile	/^TARGETS	= tests$/;"	m
TARGETS	data/Makefile	/^TARGETS	= $(OBJDIR)Browser.pc$/;"	m
TARGETS	doc/Makefile	/^TARGETS	= $(OBJDIR)browser.1 $(OBJDIR)browser.html $(OBJDIR)browser.xml $(OBJDIR)copy.1 $(OBJDIR)copy.html $(OBJDIR)copy.xml $(OBJDIR)delete.1 $(OBJDIR)delete.html $(OBJDIR)delete.xml $(OBJDIR)desktop.1 $(OBJDIR)desktop.html $(OBJDIR)desktop.xml $(OBJDIR)desktopctl.1 $(OBJDIR)desktopctl.html $(OBJDIR)desktopctl.xml $(OBJDIR)gtkdoc\/Browser.types $(OBJDIR)gtkdoc\/html.stamp $(OBJDIR)gtkdoc\/tmpl.stamp $(OBJDIR)gtkdoc\/xml.stamp $(OBJDIR)move.1 $(OBJDIR)move.html $(OBJDIR)move.xml $(OBJDIR)open.1 $(OBJDIR)open.html $(OBJDIR)open.xml $(OBJDIR)pinentry-sudo-askpass $(OBJDIR)properties.1 $(OBJDIR)properties.html $(OBJDIR)properties.xml $(OBJDIR)view.1 $(OBJDIR)view.html $(OBJDIR)view.xml $(OBJDIR)zenity-sudo-askpass$/;"	m
TARGETS	po/Makefile	/^TARGETS	= $(OBJDIR)Browser.pot $(OBJDIR)de.mo $(OBJDIR)es.mo $(OBJDIR)fr.mo $(OBJDIR)it.mo$/;"	m
TARGETS	src/Makefile	/^TARGETS	= $(OBJDIR)copy$(EXEEXT) $(OBJDIR)delete$(EXEEXT) $(OBJDIR)move$(EXEEXT) $(OBJDIR)open$(EXEEXT) $(OBJDIR)properties$(EXEEXT) $(OBJDIR)view$(EXEEXT)$/;"	m
TARGETS	src/browser/Makefile	/^TARGETS	= $(OBJDIR)browser$(EXEEXT)$/;"	m
TARGETS	src/desktop/Makefile	/^TARGETS	= $(OBJDIR)desktop$(EXEEXT) $(OBJDIR)desktopctl$(EXEEXT) $(OBJDIR)handler\/mimeapp.o$/;"	m
TARGETS	src/lib/Makefile	/^TARGETS	= $(OBJDIR)libBrowser.a $(OBJDIR)libBrowser.0.0$(SOEXT) $(OBJDIR)libBrowser.0$(SOEXT) $(OBJDIR)libBrowser$(SOEXT)$/;"	m
TARGETS	src/plugins/Makefile	/^TARGETS	= $(OBJDIR)backup$(SOEXT) $(OBJDIR)cvs$(SOEXT) $(OBJDIR)dirtree$(SOEXT) $(OBJDIR)favorites$(SOEXT) $(OBJDIR)git$(SOEXT) $(OBJDIR)make$(SOEXT) $(OBJDIR)places$(SOEXT) $(OBJDIR)preview$(SOEXT) $(OBJDIR)properties$(SOEXT) $(OBJDIR)selection$(SOEXT) $(OBJDIR)subversion$(SOEXT) $(OBJDIR)template$(SOEXT) $(OBJDIR)trash$(SOEXT) $(OBJDIR)undelete$(SOEXT) $(OBJDIR)volumes$(SOEXT)$/;"	m
TARGETS	src/widget/Makefile	/^TARGETS	= $(OBJDIR)browser$(SOEXT)$/;"	m
TARGETS	tests/Makefile	/^TARGETS	= $(OBJDIR)clint.log $(OBJDIR)fixme.log $(OBJDIR)htmllint.log $(OBJDIR)plugins$(EXEEXT) $(OBJDIR)tests.log $(OBJDIR)vfs$(EXEEXT) $(OBJDIR)xmllint.log$/;"	m
TARGETS	tools/Makefile	/^TARGETS	= $(OBJDIR)dirtree$(EXEEXT) $(OBJDIR)iconlist$(EXEEXT)$/;"	m
TC_COUNT	src/plugins/trash.c	/^#define TC_COUNT /;"	d	file:
TC_DELETED	src/plugins/trash.c	/^	TC_DELETED,$/;"	e	enum:_TrashColumn	file:
TC_DELETED_DISPLAY	src/plugins/trash.c	/^	TC_DELETED_DISPLAY,$/;"	e	enum:_TrashColumn	file:
TC_FILENAME	src/plugins/trash.c	/^	TC_FILENAME,$/;"	e	enum:_TrashColumn	file:
TC_LAST	src/plugins/trash.c	/^#define TC_LAST /;"	d	file:
TC_PATH	src/plugins/trash.c	/^	TC_PATH,$/;"	e	enum:_TrashColumn	file:
TC_PATH_ORIGINAL	src/plugins/trash.c	/^	TC_PATH_ORIGINAL,$/;"	e	enum:_TrashColumn	file:
TC_PIXBUF	src/plugins/trash.c	/^	TC_PIXBUF = 0,$/;"	e	enum:_TrashColumn	file:
TC_UPDATED	src/plugins/trash.c	/^	TC_UPDATED$/;"	e	enum:_TrashColumn	file:
TEXT_DELETE	src/plugins/backup.c	/^#define TEXT_DELETE	/;"	d	file:
TEXT_DELETE	src/plugins/trash.c	/^# define TEXT_DELETE	/;"	d	file:
TEXT_DELETED	src/plugins/backup.c	/^#define TEXT_DELETED	/;"	d	file:
TEXT_DELETED	src/plugins/trash.c	/^# define TEXT_DELETED	/;"	d	file:
TEXT_MOVETOTRASH	src/plugins/backup.c	/^#define TEXT_MOVETOTRASH	/;"	d	file:
TEXT_MOVETOTRASH	src/plugins/trash.c	/^# define TEXT_MOVETOTRASH	/;"	d	file:
TEXT_RESTORE	src/plugins/trash.c	/^# define TEXT_RESTORE	/;"	d	file:
TEXT_SELECTALL	src/plugins/trash.c	/^# define TEXT_SELECTALL	/;"	d	file:
TGZEXT	Makefile	/^TGZEXT	= .tar.gz$/;"	m
Template	src/plugins/template.c	/^} Template;$/;"	t	typeref:struct:_BrowserPlugin	file:
Trash	src/plugins/backup.c	/^#define Trash	/;"	d	file:
Trash	src/plugins/trash.c	/^} Trash;$/;"	t	typeref:struct:_BrowserPlugin	file:
TrashColumn	src/plugins/trash.c	/^} TrashColumn;$/;"	t	typeref:enum:_TrashColumn	file:
UC_COUNT	src/plugins/undelete.c	/^#define UC_COUNT /;"	d	file:
UC_FILENAME	src/plugins/undelete.c	/^	UC_FILENAME$/;"	e	enum:_UndeleteColumn	file:
UC_ICON	src/plugins/undelete.c	/^	UC_ICON,$/;"	e	enum:_UndeleteColumn	file:
UC_LAST	src/plugins/undelete.c	/^#define UC_LAST /;"	d	file:
Undelete	src/plugins/undelete.c	/^} Undelete;$/;"	t	typeref:struct:_BrowserPlugin	file:
UndeleteDirent	src/plugins/undelete.c	/^typedef struct dirent UndeleteDirent;$/;"	t	typeref:struct:dirent	file:
UndeleteDirent	src/plugins/undelete.c	/^} UndeleteDirent;$/;"	t	typeref:struct:_UndeleteDirent	file:
VENDOR	Makefile	/^VENDOR	= Desktop$/;"	m
VENDOR	config.h	/^#define VENDOR /;"	d
VERSION	Makefile	/^VERSION	= 0.5.5$/;"	m
VERSION	config.h	/^#define VERSION /;"	d
VFSFlag	src/lib/vfs.c	/^} VFSFlag;$/;"	t	typeref:enum:_VFSFlag	file:
VF_MOUNTED	src/lib/vfs.c	/^	VF_MOUNTED	= 0x01,$/;"	e	enum:_VFSFlag	file:
VF_NETWORK	src/lib/vfs.c	/^	VF_NETWORK	= 0x02,$/;"	e	enum:_VFSFlag	file:
VF_READONLY	src/lib/vfs.c	/^	VF_READONLY	= 0x04,$/;"	e	enum:_VFSFlag	file:
VF_REMOVABLE	src/lib/vfs.c	/^	VF_REMOVABLE	= 0x08,$/;"	e	enum:_VFSFlag	file:
VF_SHARED	src/lib/vfs.c	/^	VF_SHARED	= 0x10$/;"	e	enum:_VFSFlag	file:
Volumes	src/plugins/volumes.c	/^} Volumes;$/;"	t	typeref:struct:_BrowserPlugin	file:
VolumesFlag	src/plugins/volumes.c	/^} VolumesFlag;$/;"	t	typeref:enum:_VolumesFlag	file:
VolumesPixbuf	src/plugins/volumes.c	/^} VolumesPixbuf;$/;"	t	typeref:enum:_VolumesPixbuf	file:
_	src/browser/browser.c	/^#define _(/;"	d	file:
_	src/browser/callbacks.c	/^#define _(/;"	d	file:
_	src/browser/main.c	/^#define _(/;"	d	file:
_	src/browser/window.c	/^#define _(/;"	d	file:
_	src/common.c	/^# define _(/;"	d	file:
_	src/copy.c	/^#define _(/;"	d	file:
_	src/delete.c	/^#define _(/;"	d	file:
_	src/desktop/desktop.c	/^#define _(/;"	d	file:
_	src/desktop/desktopctl.c	/^#define _(/;"	d	file:
_	src/desktop/desktopicon.c	/^#define _(/;"	d	file:
_	src/desktop/handler.c	/^#define _(/;"	d	file:
_	src/desktop/main.c	/^#define _(/;"	d	file:
_	src/move.c	/^#define _(/;"	d	file:
_	src/open.c	/^#define _(/;"	d	file:
_	src/plugins/common.c	/^#define _(/;"	d	file:
_	src/plugins/dirtree.c	/^#define _(/;"	d	file:
_	src/plugins/favorites.c	/^#define _(/;"	d	file:
_	src/plugins/preview.c	/^#define _(/;"	d	file:
_	src/plugins/properties.c	/^#define _(/;"	d	file:
_	src/plugins/selection.c	/^#define _(/;"	d	file:
_	src/plugins/template.c	/^#define _(/;"	d	file:
_	src/plugins/trash.c	/^#define _(/;"	d	file:
_	src/plugins/undelete.c	/^#define _(/;"	d	file:
_	src/plugins/volumes.c	/^#define _(/;"	d	file:
_	src/properties.c	/^#define _(/;"	d	file:
_	src/view.c	/^#define _(/;"	d	file:
_Browser	src/browser/browser.c	/^struct _Browser$/;"	s	file:
_Browser	src/properties.c	/^struct _Browser$/;"	s	file:
_Browser	src/view.c	/^struct _Browser$/;"	s	file:
_BrowserColumn	src/browser/browser.c	/^typedef enum _BrowserColumn$/;"	g	file:
_BrowserMimeColumn	src/browser/browser.c	/^typedef enum _BrowserMimeColumn$/;"	g	file:
_BrowserPlugin	src/plugins/cvs.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPlugin	src/plugins/dirtree.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPlugin	src/plugins/favorites.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPlugin	src/plugins/git.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPlugin	src/plugins/make.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPlugin	src/plugins/places.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPlugin	src/plugins/preview.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPlugin	src/plugins/properties.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPlugin	src/plugins/selection.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPlugin	src/plugins/subversion.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPlugin	src/plugins/template.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPlugin	src/plugins/trash.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPlugin	src/plugins/undelete.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPlugin	src/plugins/volumes.c	/^typedef struct _BrowserPlugin$/;"	s	file:
_BrowserPluginColumn	src/browser/browser.c	/^typedef enum _BrowserPluginColumn$/;"	g	file:
_BrowserPluginDefinition	include/Browser/plugin.h	/^typedef const struct _BrowserPluginDefinition$/;"	s
_BrowserPluginHelper	include/Browser/plugin.h	/^typedef struct _BrowserPluginHelper$/;"	s
_BrowserPrefs	src/browser/browser.h	/^typedef struct _BrowserPrefs$/;"	s
_BrowserView	include/Browser/browser.h	/^typedef enum _BrowserView$/;"	g
_BrowserWindow	src/browser/window.c	/^struct _BrowserWindow$/;"	s	file:
_CommonTask	src/plugins/common.c	/^struct _CommonTask$/;"	s	file:
_Copy	src/copy.c	/^typedef struct _Copy$/;"	s	file:
_Delete	src/delete.c	/^typedef struct _Delete$/;"	s	file:
_DeleteDir	src/delete.c	/^struct _DeleteDir$/;"	s	file:
_DeleteMode	src/delete.c	/^typedef enum _DeleteMode$/;"	g	file:
_Desktop	src/desktop/desktop.c	/^struct _Desktop$/;"	s	file:
_DesktopAlignment	include/Browser/desktop.h	/^typedef enum _DesktopAlignment$/;"	g
_DesktopCategory	src/desktop/handler.c	/^typedef struct _DesktopCategory$/;"	s	file:
_DesktopHandler	src/desktop/handler.c	/^struct _DesktopHandler$/;"	s	file:
_DesktopHandlerApplications	src/desktop/handler.c	/^typedef struct _DesktopHandlerApplications$/;"	s	file:
_DesktopHandlerCategories	src/desktop/handler.c	/^typedef struct _DesktopHandlerCategories$/;"	s	file:
_DesktopHandlerFiles	src/desktop/handler.c	/^typedef struct _DesktopHandlerFiles$/;"	s	file:
_DesktopHandlerHelper	include/Browser/desktop.h	/^typedef struct _DesktopHandlerHelper$/;"	s
_DesktopHows	src/desktop/desktop.c	/^typedef enum _DesktopHows$/;"	g	file:
_DesktopIcon	src/desktop/desktopicon.c	/^struct _DesktopIcon$/;"	s	file:
_DesktopIconWindow	src/desktop/desktopiconwindow.c	/^struct _DesktopIconWindow$/;"	s	file:
_DesktopIcons	include/Browser/desktop.h	/^typedef enum _DesktopIcons$/;"	g
_DesktopLayout	include/Browser/desktop.h	/^typedef enum _DesktopLayout$/;"	g
_DesktopMessage	include/Browser/desktop.h	/^typedef enum _DesktopMessage$/;"	g
_DesktopPrefs	src/desktop/desktop.h	/^typedef struct _DesktopPrefs$/;"	s
_DesktopShow	include/Browser/desktop.h	/^typedef enum _DesktopShow$/;"	g
_DesktopWidgetPlugin	src/widget/widget.c	/^typedef struct _DesktopWidgetPlugin$/;"	s	file:
_DirtreeColumn	src/plugins/dirtree.c	/^typedef enum _DirtreeColumn$/;"	g	file:
_FavoritesColumn	src/plugins/favorites.c	/^typedef enum _FavoritesColumn$/;"	g	file:
_IconCallback	src/browser/browser.c	/^typedef struct _IconCallback$/;"	s	file:
_MimeApp	src/desktop/handler/mimeapp.c	/^struct _MimeApp$/;"	s	file:
_Move	src/move.c	/^typedef struct _Move$/;"	s	file:
_Prefs	tools/iconlist.c	/^typedef struct _Prefs$/;"	s	file:
_PreviewImageHow	src/plugins/preview.c	/^typedef enum _PreviewImageHow$/;"	g	file:
_SelectionCount	src/plugins/selection.c	/^typedef enum _SelectionCount$/;"	g	file:
_TrashColumn	src/plugins/trash.c	/^typedef enum _TrashColumn$/;"	g	file:
_UndeleteColumn	src/plugins/undelete.c	/^enum _UndeleteColumn$/;"	g	file:
_UndeleteDirent	src/plugins/undelete.c	/^typedef struct _UndeleteDirent$/;"	s	file:
_VFSFlag	src/lib/vfs.c	/^typedef enum _VFSFlag$/;"	g	file:
_VolumesColumn	src/plugins/volumes.c	/^enum _VolumesColumn$/;"	g	file:
_VolumesFlag	src/plugins/volumes.c	/^typedef enum _VolumesFlag$/;"	g	file:
_VolumesPixbuf	src/plugins/volumes.c	/^typedef enum _VolumesPixbuf$/;"	g	file:
_about_on_closex	src/browser/browser.c	/^static gboolean _about_on_closex(gpointer data)$/;"	f	file:
_about_on_closex	src/view.c	/^static gboolean _about_on_closex(gpointer data)$/;"	f	file:
_add_is_binary	src/plugins/cvs.c	/^static gboolean _add_is_binary(char const * type)$/;"	f	file:
_add_on_callback	src/plugins/cvs.c	/^static void _add_on_callback(CVS * cvs, CommonTask * task, int ret)$/;"	f	file:
_align_compare	src/desktop/desktop.c	/^static int _align_compare(const void * a, const void * b)$/;"	f	file:
_align_horizontal	src/desktop/desktop.c	/^static void _align_horizontal(Desktop * desktop)$/;"	f	file:
_align_vertical	src/desktop/desktop.c	/^static void _align_vertical(Desktop * desktop)$/;"	f	file:
_applications_apps_compare	src/desktop/handler/applications.c	/^static gint _applications_apps_compare(gconstpointer a, gconstpointer b)$/;"	f	file:
_applications_init_on_back	src/desktop/handler/applications.c	/^static void _applications_init_on_back(Desktop * desktop, gpointer data)$/;"	f	file:
_applications_on_refresh_done	src/desktop/handler/applications.c	/^static gboolean _applications_on_refresh_done(DesktopHandler * handler)$/;"	f	file:
_applications_on_refresh_done_applications	src/desktop/handler/applications.c	/^static void _applications_on_refresh_done_applications(DesktopHandler * handler)$/;"	f	file:
_applications_on_refresh_loop	src/desktop/handler/applications.c	/^static int _applications_on_refresh_loop(DesktopHandler * handler)$/;"	f	file:
_applications_on_refresh_loop_path	src/desktop/handler/applications.c	/^static void _applications_on_refresh_loop_path(DesktopHandler * handler,$/;"	f	file:
_applications_on_refresh_loop_xdg	src/desktop/handler/applications.c	/^static void _applications_on_refresh_loop_xdg(DesktopHandler * handler,$/;"	f	file:
_applications_on_refresh_loop_xdg_home	src/desktop/handler/applications.c	/^static void _applications_on_refresh_loop_xdg_home(DesktopHandler * handler,$/;"	f	file:
_applications_on_refresh_loop_xdg_path	src/desktop/handler/applications.c	/^static void _applications_on_refresh_loop_xdg_path(DesktopHandler * handler,$/;"	f	file:
_authors	src/browser/browser.c	/^static char const * _authors[] =$/;"	v	file:
_background_how_centered	src/desktop/desktop.c	/^static gboolean _background_how_centered(Desktop * desktop,$/;"	f	file:
_background_how_scaled	src/desktop/desktop.c	/^static gboolean _background_how_scaled(Desktop * desktop, GdkRectangle * window,$/;"	f	file:
_background_how_scaled_ratio	src/desktop/desktop.c	/^static gboolean _background_how_scaled_ratio(Desktop * desktop,$/;"	f	file:
_background_how_tiled	src/desktop/desktop.c	/^static gboolean _background_how_tiled(Desktop * desktop, GdkRectangle * window,$/;"	f	file:
_background_monitor	src/desktop/desktop.c	/^static void _background_monitor(Desktop * desktop, char const * filename,$/;"	f	file:
_background_monitors	src/desktop/desktop.c	/^static void _background_monitors(Desktop * desktop, char const * filename,$/;"	f	file:
_blame_on_callback	src/plugins/git.c	/^static void _blame_on_callback(Git * git, CommonTask * task, int ret)$/;"	f	file:
_browser	src/browser/main.c	/^static int _browser(char const * filename, int view)$/;"	f	file:
_browser_config_get	src/browser/browser.c	/^static char const * _browser_config_get(Browser * browser, char const * section,$/;"	f	file:
_browser_config_set	src/browser/browser.c	/^static int _browser_config_set(Browser * browser, char const * section,$/;"	f	file:
_browser_confirm	src/browser/browser.c	/^static int _browser_confirm(Browser * browser, char const * message, ...)$/;"	f	file:
_browser_destroy	src/widget/widget.c	/^static void _browser_destroy(BrowserWidget * browser)$/;"	f	file:
_browser_error	src/browser/browser.c	/^static int _browser_error(char const * message, int ret)$/;"	f	file:
_browser_get_icon	src/browser/browser.c	/^static GdkPixbuf * _browser_get_icon(Browser * browser, char const * filename,$/;"	f	file:
_browser_get_icon_size	src/browser/browser.c	/^static int _browser_get_icon_size(Browser * browser, BrowserView view)$/;"	f	file:
_browser_get_mime	src/browser/browser.c	/^static Mime * _browser_get_mime(Browser * browser)$/;"	f	file:
_browser_get_selection	src/browser/browser.c	/^static GList * _browser_get_selection(Browser * browser)$/;"	f	file:
_browser_get_type	src/browser/browser.c	/^static char const * _browser_get_type(Browser * browser, char const * filename,$/;"	f	file:
_browser_get_widget	src/widget/widget.c	/^static GtkWidget * _browser_get_widget(BrowserWidget * browser)$/;"	f	file:
_browser_init	src/widget/widget.c	/^static BrowserWidget * _browser_init(char const * name)$/;"	f	file:
_browser_on_plugin_combo_change	src/browser/browser.c	/^static void _browser_on_plugin_combo_change(gpointer data)$/;"	f	file:
_browser_on_selection_changed	src/browser/browser.c	/^static void _browser_on_selection_changed(gpointer data)$/;"	f	file:
_browser_plugin_is_enabled	src/browser/browser.c	/^static gboolean _browser_plugin_is_enabled(Browser * browser,$/;"	f	file:
_browser_plugin_refresh	src/browser/browser.c	/^static void _browser_plugin_refresh(Browser * browser)$/;"	f	file:
_browser_refresh_do	src/browser/browser.c	/^static void _browser_refresh_do(Browser * browser, DIR * dir, struct stat * st)$/;"	f	file:
_browser_set_property	src/widget/widget.c	/^static int _browser_set_property(BrowserWidget * browser, va_list ap)$/;"	f	file:
_browser_set_status	src/browser/browser.c	/^static void _browser_set_status(Browser * browser, char const * status)$/;"	f	file:
_browser_toolbar	src/browser/browser.c	/^static DesktopToolbar _browser_toolbar[] =$/;"	v	file:
_browser_vfs_get_device	src/lib/vfs.c	/^static String * _browser_vfs_get_device(char const * mountpoint)$/;"	f	file:
_browser_vfs_get_flags_mountpoint	src/lib/vfs.c	/^static unsigned int _browser_vfs_get_flags_mountpoint(char const * mountpoint)$/;"	f	file:
_browserwindow_accel	src/browser/window.c	/^static const DesktopAccel _browserwindow_accel[] =$/;"	v	file:
_browserwindow_menu_edit	src/browser/window.c	/^static const DesktopMenu _browserwindow_menu_edit[] =$/;"	v	file:
_browserwindow_menu_file	src/browser/window.c	/^static const DesktopMenu _browserwindow_menu_file[] =$/;"	v	file:
_browserwindow_menu_help	src/browser/window.c	/^static const DesktopMenu _browserwindow_menu_help[] =$/;"	v	file:
_browserwindow_menu_view	src/browser/window.c	/^static const DesktopMenu _browserwindow_menu_view[] =$/;"	v	file:
_browserwindow_menubar	src/browser/window.c	/^static const DesktopMenubar _browserwindow_menubar[] =$/;"	v	file:
_browserwindow_on_close	src/browser/window.c	/^static void _browserwindow_on_close(gpointer data)$/;"	f	file:
_browserwindow_on_closex	src/browser/window.c	/^static gboolean _browserwindow_on_closex(gpointer data)$/;"	f	file:
_browserwindow_on_copy	src/browser/window.c	/^static void _browserwindow_on_copy(gpointer data)$/;"	f	file:
_browserwindow_on_cut	src/browser/window.c	/^static void _browserwindow_on_cut(gpointer data)$/;"	f	file:
_browserwindow_on_edit_copy	src/browser/window.c	/^static void _browserwindow_on_edit_copy(gpointer data)$/;"	f	file:
_browserwindow_on_edit_cut	src/browser/window.c	/^static void _browserwindow_on_edit_cut(gpointer data)$/;"	f	file:
_browserwindow_on_edit_delete	src/browser/window.c	/^static void _browserwindow_on_edit_delete(gpointer data)$/;"	f	file:
_browserwindow_on_edit_paste	src/browser/window.c	/^static void _browserwindow_on_edit_paste(gpointer data)$/;"	f	file:
_browserwindow_on_edit_preferences	src/browser/window.c	/^static void _browserwindow_on_edit_preferences(gpointer data)$/;"	f	file:
_browserwindow_on_edit_select_all	src/browser/window.c	/^static void _browserwindow_on_edit_select_all(gpointer data)$/;"	f	file:
_browserwindow_on_edit_unselect_all	src/browser/window.c	/^static void _browserwindow_on_edit_unselect_all(gpointer data)$/;"	f	file:
_browserwindow_on_file_close	src/browser/window.c	/^static void _browserwindow_on_file_close(gpointer data)$/;"	f	file:
_browserwindow_on_file_new_folder	src/browser/window.c	/^static void _browserwindow_on_file_new_folder(gpointer data)$/;"	f	file:
_browserwindow_on_file_new_symlink	src/browser/window.c	/^static void _browserwindow_on_file_new_symlink(gpointer data)$/;"	f	file:
_browserwindow_on_file_new_window	src/browser/window.c	/^static void _browserwindow_on_file_new_window(gpointer data)$/;"	f	file:
_browserwindow_on_file_open_file	src/browser/window.c	/^static void _browserwindow_on_file_open_file(gpointer data)$/;"	f	file:
_browserwindow_on_file_properties	src/browser/window.c	/^static void _browserwindow_on_file_properties(gpointer data)$/;"	f	file:
_browserwindow_on_help_about	src/browser/window.c	/^static void _browserwindow_on_help_about(gpointer data)$/;"	f	file:
_browserwindow_on_help_contents	src/browser/window.c	/^static void _browserwindow_on_help_contents(gpointer data)$/;"	f	file:
_browserwindow_on_location	src/browser/window.c	/^static void _browserwindow_on_location(gpointer data)$/;"	f	file:
_browserwindow_on_new_window	src/browser/window.c	/^static void _browserwindow_on_new_window(gpointer data)$/;"	f	file:
_browserwindow_on_open_file	src/browser/window.c	/^static void _browserwindow_on_open_file(gpointer data)$/;"	f	file:
_browserwindow_on_paste	src/browser/window.c	/^static void _browserwindow_on_paste(gpointer data)$/;"	f	file:
_browserwindow_on_properties	src/browser/window.c	/^static void _browserwindow_on_properties(gpointer data)$/;"	f	file:
_browserwindow_on_refresh	src/browser/window.c	/^static void _browserwindow_on_refresh(gpointer data)$/;"	f	file:
_browserwindow_on_view_details	src/browser/window.c	/^static void _browserwindow_on_view_details(gpointer data)$/;"	f	file:
_browserwindow_on_view_home	src/browser/window.c	/^static void _browserwindow_on_view_home(gpointer data)$/;"	f	file:
_browserwindow_on_view_icons	src/browser/window.c	/^static void _browserwindow_on_view_icons(gpointer data)$/;"	f	file:
_browserwindow_on_view_list	src/browser/window.c	/^static void _browserwindow_on_view_list(gpointer data)$/;"	f	file:
_browserwindow_on_view_refresh	src/browser/window.c	/^static void _browserwindow_on_view_refresh(gpointer data)$/;"	f	file:
_browserwindow_on_view_thumbnails	src/browser/window.c	/^static void _browserwindow_on_view_thumbnails(gpointer data)$/;"	f	file:
_categories_apps_compare	src/desktop/handler/categories.c	/^static gint _categories_apps_compare(gconstpointer a, gconstpointer b)$/;"	f	file:
_categories_init_on_back	src/desktop/handler/categories.c	/^static void _categories_init_on_back(Desktop * desktop, gpointer data)$/;"	f	file:
_categories_on_refresh_done	src/desktop/handler/categories.c	/^static gboolean _categories_on_refresh_done(DesktopHandler * handler)$/;"	f	file:
_categories_on_refresh_done_categories	src/desktop/handler/categories.c	/^static void _categories_on_refresh_done_categories(DesktopHandler * handler)$/;"	f	file:
_categories_on_refresh_done_categories_open	src/desktop/handler/categories.c	/^static void _categories_on_refresh_done_categories_open(Desktop * desktop,$/;"	f	file:
_categories_on_refresh_loop	src/desktop/handler/categories.c	/^static int _categories_on_refresh_loop(DesktopHandler * handler)$/;"	f	file:
_categories_on_refresh_loop_path	src/desktop/handler/categories.c	/^static void _categories_on_refresh_loop_path(DesktopHandler * handler,$/;"	f	file:
_categories_on_refresh_loop_xdg	src/desktop/handler/categories.c	/^static void _categories_on_refresh_loop_xdg(DesktopHandler * handler,$/;"	f	file:
_categories_on_refresh_loop_xdg_home	src/desktop/handler/categories.c	/^static void _categories_on_refresh_loop_xdg_home(DesktopHandler * handler,$/;"	f	file:
_categories_on_refresh_loop_xdg_path	src/desktop/handler/categories.c	/^static void _categories_on_refresh_loop_xdg_path(DesktopHandler * handler,$/;"	f	file:
_channel_in	src/copy.c	/^static gboolean _channel_in(Copy * copy, GIOChannel * source)$/;"	f	file:
_channel_in_error	src/copy.c	/^static gboolean _channel_in_error(Copy * copy, GIOChannel * source,$/;"	f	file:
_channel_out	src/copy.c	/^static gboolean _channel_out(Copy * copy, GIOChannel * source)$/;"	f	file:
_channel_out_error	src/copy.c	/^static gboolean _channel_out_error(Copy * copy, GIOChannel * source,$/;"	f	file:
_clint	tests/clint.sh	/^_clint()$/;"	f
_clint_lint	tests/clint.sh	/^_clint_lint()$/;"	f
_clint_rtrim	tests/clint.sh	/^_clint_rtrim()$/;"	f
_clone_on_callback	src/plugins/git.c	/^static void _clone_on_callback(Git * git, CommonTask * task, int ret)$/;"	f	file:
_commit_on_callback	src/plugins/cvs.c	/^static void _commit_on_callback(CVS * cvs, CommonTask * task, int ret)$/;"	f	file:
_commit_on_callback	src/plugins/git.c	/^static void _commit_on_callback(Git * git, CommonTask * task, int ret)$/;"	f	file:
_common_drag_data_received	src/common.c	/^static int _common_drag_data_received(GdkDragContext * context,$/;"	f	file:
_common_exec	src/common.c	/^static int _common_exec(char const * program, char const * flags, GList * args)$/;"	f	file:
_common_get_absolute_path	src/common.c	/^static char * _common_get_absolute_path(char const * path)$/;"	f	file:
_common_prompt	src/plugins/common.c	/^static GtkResponseType _common_prompt(char const * message, char ** entry)$/;"	f	file:
_common_size	src/common.c	/^static char const * _common_size(off_t size)$/;"	f	file:
_common_symlink	src/common.c	/^static int _common_symlink(GtkWidget * window, char const * cur)$/;"	f	file:
_common_task_accel	src/plugins/common.c	/^static const DesktopAccel _common_task_accel[] =$/;"	v	file:
_common_task_close	src/plugins/common.c	/^static void _common_task_close(CommonTask * task)$/;"	f	file:
_common_task_close_channel	src/plugins/common.c	/^static void _common_task_close_channel(CommonTask * task, GIOChannel * channel)$/;"	f	file:
_common_task_copy	src/plugins/common.c	/^static void _common_task_copy(CommonTask * task)$/;"	f	file:
_common_task_delete	src/plugins/common.c	/^static void _common_task_delete(CommonTask * task)$/;"	f	file:
_common_task_get_buffer	src/plugins/common.c	/^static GtkTextBuffer * _common_task_get_buffer(CommonTask * task)$/;"	f	file:
_common_task_message	src/plugins/common.c	/^static int _common_task_message(CommonTask * task, GtkMessageType type,$/;"	f	file:
_common_task_new	src/plugins/common.c	/^static CommonTask * _common_task_new(BrowserPluginHelper * helper,$/;"	f	file:
_common_task_on_child_watch	src/plugins/common.c	/^static void _common_task_on_child_watch(GPid pid, gint status, gpointer data)$/;"	f	file:
_common_task_on_close	src/plugins/common.c	/^static void _common_task_on_close(gpointer data)$/;"	f	file:
_common_task_on_closex	src/plugins/common.c	/^static gboolean _common_task_on_closex(gpointer data)$/;"	f	file:
_common_task_on_copy	src/plugins/common.c	/^static void _common_task_on_copy(gpointer data)$/;"	f	file:
_common_task_on_io_can_read	src/plugins/common.c	/^static gboolean _common_task_on_io_can_read(GIOChannel * channel,$/;"	f	file:
_common_task_on_save	src/plugins/common.c	/^static void _common_task_on_save(gpointer data)$/;"	f	file:
_common_task_on_select_all	src/plugins/common.c	/^static void _common_task_on_select_all(gpointer data)$/;"	f	file:
_common_task_save_buffer_as	src/plugins/common.c	/^static int _common_task_save_buffer_as(CommonTask * task, char const * filename)$/;"	f	file:
_common_task_save_buffer_as_dialog	src/plugins/common.c	/^static int _common_task_save_buffer_as_dialog(CommonTask * task)$/;"	f	file:
_common_task_set_status	src/plugins/common.c	/^static void _common_task_set_status(CommonTask * task, char const * status)$/;"	f	file:
_common_task_toolbar	src/plugins/common.c	/^static DesktopToolbar _common_task_toolbar[] =$/;"	v	file:
_config_load_boolean	src/browser/browser.c	/^static int _config_load_boolean(Config * config, char const * variable,$/;"	f	file:
_config_load_string	src/browser/browser.c	/^static int _config_load_string(Config * config, String const * variable,$/;"	f	file:
_config_save_boolean	src/browser/browser.c	/^static int _config_save_boolean(Config * config, char const * variable,$/;"	f	file:
_copy	src/copy.c	/^static int _copy(Prefs * prefs, unsigned int filec, char * filev[])$/;"	f	file:
_copy_error	src/copy.c	/^static int _copy_error(Copy * copy, char const * message, int ret)$/;"	f	file:
_copy_filename_confirm	src/copy.c	/^static int _copy_filename_confirm(Copy * copy, char const * filename)$/;"	f	file:
_copy_filename_error	src/copy.c	/^static int _copy_filename_error(Copy * copy, char const * filename, int ret)$/;"	f	file:
_copy_filename_info	src/copy.c	/^static void _copy_filename_info(Copy * copy, char const * filename,$/;"	f	file:
_copy_idle_first	src/copy.c	/^static gboolean _copy_idle_first(gpointer data)$/;"	f	file:
_copy_idle_multiple	src/copy.c	/^static gboolean _copy_idle_multiple(gpointer data)$/;"	f	file:
_copy_info	src/copy.c	/^static void _copy_info(Copy * copy, char const * message, char const * info)$/;"	f	file:
_copy_multiple	src/copy.c	/^static int _copy_multiple(Copy * copy, char const * src, char const * dst)$/;"	f	file:
_copy_on_cancel	src/copy.c	/^static void _copy_on_cancel(void)$/;"	f	file:
_copy_on_closex	src/copy.c	/^static void _copy_on_closex(void)$/;"	f	file:
_copy_refresh	src/copy.c	/^static void _copy_refresh(Copy * copy)$/;"	f	file:
_copy_single	src/copy.c	/^static int _copy_single(Copy * copy, char const * src, char const * dst)$/;"	f	file:
_copyright	src/browser/browser.c	/^static char const _copyright[] =$/;"	v	file:
_copyright	src/view.c	/^static char const _copyright[] =$/;"	v	file:
_create_store	src/browser/browser.c	/^static GtkListStore * _create_store(Browser * browser)$/;"	f	file:
_current_deleted	src/browser/browser.c	/^static void _current_deleted(Browser * browser)$/;"	f	file:
_current_idle	src/browser/browser.c	/^static gboolean _current_idle(gpointer data)$/;"	f	file:
_current_loop	src/browser/browser.c	/^static int _current_loop(Browser * browser)$/;"	f	file:
_cvs_add_task	src/plugins/cvs.c	/^static int _cvs_add_task(CVS * cvs, char const * title, char const * directory,$/;"	f	file:
_cvs_confirm_delete	src/plugins/cvs.c	/^static int _cvs_confirm_delete(char const * filename)$/;"	f	file:
_cvs_destroy	src/plugins/cvs.c	/^static void _cvs_destroy(CVS * cvs)$/;"	f	file:
_cvs_get_entries	src/plugins/cvs.c	/^static char * _cvs_get_entries(char const * pathname)$/;"	f	file:
_cvs_get_repository	src/plugins/cvs.c	/^static char * _cvs_get_repository(char const * pathname)$/;"	f	file:
_cvs_get_root	src/plugins/cvs.c	/^static char * _cvs_get_root(char const * pathname)$/;"	f	file:
_cvs_get_tag	src/plugins/cvs.c	/^static char * _cvs_get_tag(char const * pathname)$/;"	f	file:
_cvs_get_widget	src/plugins/cvs.c	/^static GtkWidget * _cvs_get_widget(CVS * cvs)$/;"	f	file:
_cvs_init	src/plugins/cvs.c	/^static CVS * _cvs_init(BrowserPluginHelper * helper)$/;"	f	file:
_cvs_is_managed	src/plugins/cvs.c	/^static gboolean _cvs_is_managed(char const * pathname, char ** revision)$/;"	f	file:
_cvs_on_add	src/plugins/cvs.c	/^static void _cvs_on_add(gpointer data)$/;"	f	file:
_cvs_on_annotate	src/plugins/cvs.c	/^static void _cvs_on_annotate(gpointer data)$/;"	f	file:
_cvs_on_checkout	src/plugins/cvs.c	/^static void _cvs_on_checkout(gpointer data)$/;"	f	file:
_cvs_on_commit	src/plugins/cvs.c	/^static void _cvs_on_commit(gpointer data)$/;"	f	file:
_cvs_on_delete	src/plugins/cvs.c	/^static void _cvs_on_delete(gpointer data)$/;"	f	file:
_cvs_on_diff	src/plugins/cvs.c	/^static void _cvs_on_diff(gpointer data)$/;"	f	file:
_cvs_on_log	src/plugins/cvs.c	/^static void _cvs_on_log(gpointer data)$/;"	f	file:
_cvs_on_status	src/plugins/cvs.c	/^static void _cvs_on_status(gpointer data)$/;"	f	file:
_cvs_on_update	src/plugins/cvs.c	/^static void _cvs_on_update(gpointer data)$/;"	f	file:
_cvs_prompt_checkout	src/plugins/cvs.c	/^static GtkResponseType _cvs_prompt_checkout(char const * message, char ** path,$/;"	f	file:
_cvs_refresh	src/plugins/cvs.c	/^static void _cvs_refresh(CVS * cvs, GList * selection)$/;"	f	file:
_debug	data/pkgconfig.sh	/^_debug()$/;"	f
_debug	doc/docbook.sh	/^_debug()$/;"	f
_debug	doc/gtkdoc.sh	/^_debug()$/;"	f
_debug	po/gettext.sh	/^_debug()$/;"	f
_debug	tests/clint.sh	/^_debug()$/;"	f
_debug	tests/fixme.sh	/^_debug()$/;"	f
_debug	tests/htmllint.sh	/^_debug()$/;"	f
_debug	tests/xmllint.sh	/^_debug()$/;"	f
_debug	tools/subst.sh	/^_debug()$/;"	f
_delete	src/delete.c	/^static int _delete(Prefs * prefs, unsigned int filec, char * filev[])$/;"	f	file:
_delete_error	src/delete.c	/^static int _delete_error(Delete * delete, char const * message, int ret)$/;"	f	file:
_delete_filename_error	src/delete.c	/^static int _delete_filename_error(Delete * delete, char const * filename,$/;"	f	file:
_delete_idle	src/delete.c	/^static gboolean _delete_idle(gpointer data)$/;"	f	file:
_delete_on_cancel	src/delete.c	/^static void _delete_on_cancel(gpointer data)$/;"	f	file:
_delete_on_closex	src/delete.c	/^static gboolean _delete_on_closex(gpointer data)$/;"	f	file:
_delete_path	src/plugins/trash.c	/^static int _delete_path(Trash * trash, GtkTreeModel * model, GtkTreePath * path)$/;"	f	file:
_delete_plugins	src/browser/browser.c	/^static void _delete_plugins(Browser * browser)$/;"	f	file:
_delete_refresh	src/delete.c	/^static void _delete_refresh(Delete * delete, char const * filename)$/;"	f	file:
_delete_timeout	src/delete.c	/^static gboolean _delete_timeout(gpointer data)$/;"	f	file:
_desktop_categories	src/desktop/handler/categories.c	/^static DesktopCategory _desktop_categories[] =$/;"	v	file:
_desktop_categories_cnt	src/desktop/handler/categories.c	/^static const size_t _desktop_categories_cnt = sizeof(_desktop_categories)$/;"	v	file:
_desktop_draw_background	src/desktop/desktop.c	/^static void _desktop_draw_background(Desktop * desktop, GdkRGBA * color,$/;"	f	file:
_desktop_error	src/desktop/desktop.c	/^static int _desktop_error(Desktop * desktop, char const * message,$/;"	f	file:
_desktop_get_config	src/desktop/desktop.c	/^static Config * _desktop_get_config(Desktop * desktop)$/;"	f	file:
_desktop_get_monitor_properties	src/desktop/desktop.c	/^static int _desktop_get_monitor_properties(Desktop * desktop, int monitor,$/;"	f	file:
_desktop_get_properties	src/desktop/desktop.c	/^static int _desktop_get_properties(Desktop * desktop, GdkRectangle * geometry,$/;"	f	file:
_desktop_get_workarea	src/desktop/desktop.c	/^static int _desktop_get_workarea(Desktop * desktop)$/;"	f	file:
_desktop_hows	src/desktop/desktop.c	/^static const char * _desktop_hows[DESKTOP_HOW_COUNT] =$/;"	v	file:
_desktop_icons	src/desktop/desktop.c	/^static const char * _desktop_icons[DESKTOP_ICONS_COUNT] =$/;"	v	file:
_desktop_icons_config	src/desktop/desktop.c	/^static const char * _desktop_icons_config[DESKTOP_ICONS_COUNT] =$/;"	v	file:
_desktop_on_preferences_closex	src/desktop/desktop.c	/^static gboolean _desktop_on_preferences_closex(gpointer data)$/;"	f	file:
_desktop_on_preferences_monitors_changed	src/desktop/desktop.c	/^static void _desktop_on_preferences_monitors_changed(gpointer data)$/;"	f	file:
_desktop_on_preferences_monitors_refresh	src/desktop/desktop.c	/^static void _desktop_on_preferences_monitors_refresh(gpointer data)$/;"	f	file:
_desktop_on_preferences_response	src/desktop/desktop.c	/^static void _desktop_on_preferences_response(GtkWidget * widget, gint response,$/;"	f	file:
_desktop_on_preferences_response_apply	src/desktop/desktop.c	/^static void _desktop_on_preferences_response_apply(gpointer data)$/;"	f	file:
_desktop_on_preferences_response_cancel	src/desktop/desktop.c	/^static void _desktop_on_preferences_response_cancel(gpointer data)$/;"	f	file:
_desktop_on_preferences_response_ok	src/desktop/desktop.c	/^static void _desktop_on_preferences_response_ok(gpointer data)$/;"	f	file:
_desktop_on_preferences_update_preview	src/desktop/desktop.c	/^static void _desktop_on_preferences_update_preview(gpointer data)$/;"	f	file:
_desktop_on_refresh	src/desktop/desktop.c	/^static gboolean _desktop_on_refresh(gpointer data)$/;"	f	file:
_desktopctl	src/desktop/desktopctl.c	/^static int _desktopctl(int action, int what)$/;"	f	file:
_desktopctl_error	src/desktop/desktopctl.c	/^static int _desktopctl_error(char const * message, int ret)$/;"	f	file:
_desktophandler_applications_destroy	src/desktop/handler/applications.c	/^static void _desktophandler_applications_destroy(DesktopHandler * handler)$/;"	f	file:
_desktophandler_applications_init	src/desktop/handler/applications.c	/^static void _desktophandler_applications_init(DesktopHandler * handler)$/;"	f	file:
_desktophandler_applications_on_refresh	src/desktop/handler/applications.c	/^static gboolean _desktophandler_applications_on_refresh(gpointer data)$/;"	f	file:
_desktophandler_applications_popup	src/desktop/handler/applications.c	/^static void _desktophandler_applications_popup(DesktopHandler * handler,$/;"	f	file:
_desktophandler_applications_refresh	src/desktop/handler/applications.c	/^static void _desktophandler_applications_refresh(DesktopHandler * handler)$/;"	f	file:
_desktophandler_categories_destroy	src/desktop/handler/categories.c	/^static void _desktophandler_categories_destroy(DesktopHandler * handler)$/;"	f	file:
_desktophandler_categories_init	src/desktop/handler/categories.c	/^static void _desktophandler_categories_init(DesktopHandler * handler)$/;"	f	file:
_desktophandler_categories_on_refresh	src/desktop/handler/categories.c	/^static gboolean _desktophandler_categories_on_refresh(gpointer data)$/;"	f	file:
_desktophandler_categories_popup	src/desktop/handler/categories.c	/^static void _desktophandler_categories_popup(DesktopHandler * handler,$/;"	f	file:
_desktophandler_categories_refresh	src/desktop/handler/categories.c	/^static void _desktophandler_categories_refresh(DesktopHandler * handler)$/;"	f	file:
_desktophandler_files_destroy	src/desktop/handler/files.c	/^static void _desktophandler_files_destroy(DesktopHandler * handler)$/;"	f	file:
_desktophandler_files_init	src/desktop/handler/files.c	/^static void _desktophandler_files_init(DesktopHandler * handler)$/;"	f	file:
_desktophandler_files_on_refresh	src/desktop/handler/files.c	/^static gboolean _desktophandler_files_on_refresh(gpointer data)$/;"	f	file:
_desktophandler_files_popup	src/desktop/handler/files.c	/^static void _desktophandler_files_popup(DesktopHandler * handler,$/;"	f	file:
_desktophandler_files_refresh	src/desktop/handler/files.c	/^static void _desktophandler_files_refresh(DesktopHandler * handler)$/;"	f	file:
_desktophandler_homescreen_destroy	src/desktop/handler/homescreen.c	/^static void _desktophandler_homescreen_destroy(DesktopHandler * handler)$/;"	f	file:
_desktophandler_homescreen_init	src/desktop/handler/homescreen.c	/^static void _desktophandler_homescreen_init(DesktopHandler * handler)$/;"	f	file:
_desktophandler_homescreen_popup	src/desktop/handler/homescreen.c	/^static void _desktophandler_homescreen_popup(DesktopHandler * handler,$/;"	f	file:
_desktophandler_homescreen_refresh	src/desktop/handler/homescreen.c	/^static void _desktophandler_homescreen_refresh(DesktopHandler * handler)$/;"	f	file:
_desktopicon_new_do	src/desktop/desktopicon.c	/^static DesktopIcon * _desktopicon_new_do(Desktop * desktop, GdkPixbuf * image,$/;"	f	file:
_desktopicon_set_icon	src/desktop/desktopicon.c	/^static void _desktopicon_set_icon(DesktopIcon * desktopicon, GdkPixbuf * icon)$/;"	f	file:
_desktopicon_set_name	src/desktop/desktopicon.c	/^static int _desktopicon_set_name(DesktopIcon * desktopicon, char const * name)$/;"	f	file:
_desktopicon_update_transparency	src/desktop/desktopicon.c	/^static void _desktopicon_update_transparency(DesktopIcon * desktopicon)$/;"	f	file:
_diff_on_callback	src/plugins/git.c	/^static void _diff_on_callback(Git * git, CommonTask * task, int ret)$/;"	f	file:
_dirtree_add	tools/dirtree.c	/^static int _dirtree_add(GtkTreeStore * store, GtkTreeIter * iter)$/;"	f	file:
_dirtree_destroy	src/plugins/dirtree.c	/^static void _dirtree_destroy(Dirtree * dirtree)$/;"	f	file:
_dirtree_error	tools/dirtree.c	/^static int _dirtree_error(char const * message, int ret)$/;"	f	file:
_dirtree_get_widget	src/plugins/dirtree.c	/^static GtkWidget * _dirtree_get_widget(Dirtree * dirtree)$/;"	f	file:
_dirtree_init	src/plugins/dirtree.c	/^static Dirtree * _dirtree_init(BrowserPluginHelper * helper)$/;"	f	file:
_dirtree_new	tools/dirtree.c	/^static int _dirtree_new(Prefs * prefs, char const * pathname)$/;"	f	file:
_dirtree_on_idle	src/plugins/dirtree.c	/^static gboolean _dirtree_on_idle(gpointer data)$/;"	f	file:
_dirtree_on_row_activated	src/plugins/dirtree.c	/^static void _dirtree_on_row_activated(GtkTreeView * view, GtkTreePath * path,$/;"	f	file:
_dirtree_on_row_expanded	src/plugins/dirtree.c	/^static void _dirtree_on_row_expanded(GtkTreeView * view, GtkTreeIter * iter,$/;"	f	file:
_dirtree_refresh	src/plugins/dirtree.c	/^static void _dirtree_refresh(Dirtree * dirtree, GList * selection)$/;"	f	file:
_dirtree_refresh_folder	src/plugins/dirtree.c	/^static gboolean _dirtree_refresh_folder(Dirtree * dirtree, GtkTreeIter * parent,$/;"	f	file:
_dlerror	tests/plugins.c	/^static int _dlerror(char const * message, int ret)$/;"	f	file:
_do_iconview	tools/iconlist.c	/^static void _do_iconview(GtkWidget * iconview, GtkIconTheme * icontheme)$/;"	f	file:
_docbook	doc/docbook.sh	/^_docbook()$/;"	f
_done_thumbnails	src/browser/browser.c	/^static gboolean _done_thumbnails(gpointer data)$/;"	f	file:
_done_timeout	src/browser/browser.c	/^static gboolean _done_timeout(gpointer data)$/;"	f	file:
_embedded	tests/embedded.sh	/^_embedded()$/;"	f
_error	data/pkgconfig.sh	/^_error()$/;"	f
_error	doc/docbook.sh	/^_error()$/;"	f
_error	doc/gtkdoc.sh	/^_error()$/;"	f
_error	po/gettext.sh	/^_error()$/;"	f
_error	src/browser/main.c	/^static int _error(char const * message, int ret)$/;"	f	file:
_error	src/desktop/main.c	/^static int _error(char const * message, int ret)$/;"	f	file:
_error	tests/clint.sh	/^_error()$/;"	f
_error	tests/fixme.sh	/^_error()$/;"	f
_error	tests/htmllint.sh	/^_error()$/;"	f
_error	tests/plugins.c	/^static int _error(char const * message, char const * error, int ret)$/;"	f	file:
_error	tests/xmllint.sh	/^_error()$/;"	f
_error	tools/subst.sh	/^_error()$/;"	f
_error_response	src/browser/browser.c	/^static void _error_response(gpointer data)$/;"	f	file:
_error_response	src/properties.c	/^static void _error_response(GtkWidget * widget, gint arg, gpointer data)$/;"	f	file:
_error_response	src/view.c	/^static void _error_response(GtkWidget * widget, gint arg, gpointer data)$/;"	f	file:
_error_text	src/copy.c	/^static int _error_text(char const * message, int ret)$/;"	f	file:
_error_text	src/delete.c	/^static int _error_text(char const * message, int ret)$/;"	f	file:
_error_text	src/desktop/desktop.c	/^static int _error_text(char const * message, char const * error, int ret)$/;"	f	file:
_error_text	src/move.c	/^static int _error_text(char const * message, int ret)$/;"	f	file:
_error_text	src/properties.c	/^static int _error_text(char const * message, int ret)$/;"	f	file:
_error_text	src/view.c	/^static int _error_text(char const * message, int ret)$/;"	f	file:
_event_button_press	src/desktop/desktop.c	/^static GdkFilterReturn _event_button_press(XButtonEvent * xbev,$/;"	f	file:
_event_configure	src/desktop/desktop.c	/^static GdkFilterReturn _event_configure(XConfigureEvent * xevent,$/;"	f	file:
_event_property	src/desktop/desktop.c	/^static GdkFilterReturn _event_property(XPropertyEvent * xevent,$/;"	f	file:
_fail	tests/tests.sh	/^_fail()$/;"	f
_favorites_destroy	src/plugins/favorites.c	/^static void _favorites_destroy(Favorites * favorites)$/;"	f	file:
_favorites_get_filename	src/plugins/favorites.c	/^static gchar * _favorites_get_filename(void)$/;"	f	file:
_favorites_get_widget	src/plugins/favorites.c	/^static GtkWidget * _favorites_get_widget(Favorites * favorites)$/;"	f	file:
_favorites_init	src/plugins/favorites.c	/^static Favorites * _favorites_init(BrowserPluginHelper * helper)$/;"	f	file:
_favorites_on_add	src/plugins/favorites.c	/^static void _favorites_on_add(gpointer data)$/;"	f	file:
_favorites_on_filter_visible	src/plugins/favorites.c	/^static gboolean _favorites_on_filter_visible(GtkTreeModel * model,$/;"	f	file:
_favorites_on_remove	src/plugins/favorites.c	/^static void _favorites_on_remove(gpointer data)$/;"	f	file:
_favorites_on_row_activated	src/plugins/favorites.c	/^static void _favorites_on_row_activated(GtkTreeView * view, GtkTreePath * path,$/;"	f	file:
_favorites_refresh	src/plugins/favorites.c	/^static void _favorites_refresh(Favorites * favorites, GList * selection)$/;"	f	file:
_favorites_save	src/plugins/favorites.c	/^static int _favorites_save(Favorites * favorites)$/;"	f	file:
_files_init_add_home	src/desktop/handler/files.c	/^static int _files_init_add_home(DesktopHandler * handler)$/;"	f	file:
_files_on_refresh_done	src/desktop/handler/files.c	/^static gboolean _files_on_refresh_done(DesktopHandler * handler)$/;"	f	file:
_files_on_refresh_done_timeout	src/desktop/handler/files.c	/^static gboolean _files_on_refresh_done_timeout(gpointer data)$/;"	f	file:
_files_on_refresh_loop	src/desktop/handler/files.c	/^static int _files_on_refresh_loop(DesktopHandler * handler)$/;"	f	file:
_files_on_refresh_loop_lookup	src/desktop/handler/files.c	/^static int _files_on_refresh_loop_lookup(DesktopHandler * handler,$/;"	f	file:
_files_on_refresh_loop_opendir	src/desktop/handler/files.c	/^static int _files_on_refresh_loop_opendir(DesktopHandler * handler)$/;"	f	file:
_fixme	tests/fixme.sh	/^_fixme()$/;"	f
_fixme_callback	tests/fixme.sh	/^_fixme_callback()$/;"	f
_fixme_callback_asm	tests/fixme.sh	/^_fixme_callback_asm()$/;"	f
_fixme_callback_c	tests/fixme.sh	/^_fixme_callback_c()$/;"	f
_fixme_callback_python	tests/fixme.sh	/^_fixme_callback_python()$/;"	f
_fixme_callback_sh	tests/fixme.sh	/^_fixme_callback_sh()$/;"	f
_fixme_callback_xml	tests/fixme.sh	/^_fixme_callback_xml()$/;"	f
_folder	tools/dirtree.c	/^static GdkPixbuf * _folder = NULL;$/;"	v	file:
_gettext_mo	po/gettext.sh	/^_gettext_mo()$/;"	f
_gettext_po	po/gettext.sh	/^_gettext_po()$/;"	f
_gettext_pot	po/gettext.sh	/^_gettext_pot()$/;"	f
_git_add_task	src/plugins/git.c	/^static int _git_add_task(Git * git, char const * title,$/;"	f	file:
_git_destroy	src/plugins/git.c	/^static void _git_destroy(Git * git)$/;"	f	file:
_git_get_base	src/plugins/git.c	/^static String * _git_get_base(Git * git, char const * filename)$/;"	f	file:
_git_get_head	src/plugins/git.c	/^static String * _git_get_head(Git * git, char const * filename)$/;"	f	file:
_git_get_widget	src/plugins/git.c	/^static GtkWidget * _git_get_widget(Git * git)$/;"	f	file:
_git_init	src/plugins/git.c	/^static Git * _git_init(BrowserPluginHelper * helper)$/;"	f	file:
_git_is_managed	src/plugins/git.c	/^static gboolean _git_is_managed(Git * git, char const * filename)$/;"	f	file:
_git_on_add	src/plugins/git.c	/^static void _git_on_add(gpointer data)$/;"	f	file:
_git_on_blame	src/plugins/git.c	/^static void _git_on_blame(gpointer data)$/;"	f	file:
_git_on_clone	src/plugins/git.c	/^static void _git_on_clone(gpointer data)$/;"	f	file:
_git_on_commit	src/plugins/git.c	/^static void _git_on_commit(gpointer data)$/;"	f	file:
_git_on_diff	src/plugins/git.c	/^static void _git_on_diff(gpointer data)$/;"	f	file:
_git_on_init	src/plugins/git.c	/^static void _git_on_init(gpointer data)$/;"	f	file:
_git_on_log	src/plugins/git.c	/^static void _git_on_log(gpointer data)$/;"	f	file:
_git_on_pull	src/plugins/git.c	/^static void _git_on_pull(gpointer data)$/;"	f	file:
_git_on_push	src/plugins/git.c	/^static void _git_on_push(gpointer data)$/;"	f	file:
_git_on_reset	src/plugins/git.c	/^static void _git_on_reset(gpointer data)$/;"	f	file:
_git_on_status	src/plugins/git.c	/^static void _git_on_status(gpointer data)$/;"	f	file:
_git_refresh	src/plugins/git.c	/^static void _git_refresh(Git * git, GList * selection)$/;"	f	file:
_git_set_status	src/plugins/git.c	/^static void _git_set_status(Git * git, char const * status)$/;"	f	file:
_gtkdoc_fixxref	doc/gtkdoc.sh	/^_gtkdoc_fixxref()$/;"	f
_gtkdoc_mkdb	doc/gtkdoc.sh	/^_gtkdoc_mkdb()$/;"	f
_gtkdoc_mkhtml	doc/gtkdoc.sh	/^_gtkdoc_mkhtml()$/;"	f
_gtkdoc_mktmpl	doc/gtkdoc.sh	/^_gtkdoc_mktmpl()$/;"	f
_gtkdoc_scan	doc/gtkdoc.sh	/^_gtkdoc_scan()$/;"	f
_homescreen_init_on_applications	src/desktop/handler/homescreen.c	/^static void _homescreen_init_on_applications(Desktop * desktop, gpointer data)$/;"	f	file:
_homescreen_init_subdir	src/desktop/handler/homescreen.c	/^static int _homescreen_init_subdir(DesktopHandler * handler,$/;"	f	file:
_htmllint	tests/htmllint.sh	/^_htmllint()$/;"	f
_iconlist	tools/iconlist.c	/^static int _iconlist(Prefs * prefs)$/;"	f	file:
_iconlist_do	tools/iconlist.c	/^static int _iconlist_do(GtkIconTheme * icontheme)$/;"	f	file:
_iconlist_list	tools/iconlist.c	/^static int _iconlist_list(GtkIconTheme * icontheme)$/;"	f	file:
_idle_ask	src/delete.c	/^static int _idle_ask(Delete * delete, char const * filename)$/;"	f	file:
_idle_ask_recursive	src/delete.c	/^static int _idle_ask_recursive(Delete * delete, char const * filename)$/;"	f	file:
_idle_count	src/delete.c	/^static gboolean _idle_count(Delete * delete)$/;"	f	file:
_idle_delete	src/delete.c	/^static gboolean _idle_delete(Delete * delete)$/;"	f	file:
_idle_do	src/delete.c	/^static int _idle_do(Delete * delete)$/;"	f	file:
_idle_do_closedir	src/delete.c	/^static int _idle_do_closedir(Delete * delete)$/;"	f	file:
_idle_do_closedir_count	src/delete.c	/^static int _idle_do_closedir_count(Delete * delete)$/;"	f	file:
_idle_do_closedir_delete	src/delete.c	/^static int _idle_do_closedir_delete(Delete * delete, DeleteDir * dd)$/;"	f	file:
_idle_do_file	src/delete.c	/^static int _idle_do_file(Delete * delete, char const * filename)$/;"	f	file:
_idle_do_file_count	src/delete.c	/^static int _idle_do_file_count(Delete * delete)$/;"	f	file:
_idle_do_file_delete	src/delete.c	/^static int _idle_do_file_delete(Delete * delete, char const * filename)$/;"	f	file:
_idle_do_opendir	src/delete.c	/^static int _idle_do_opendir(Delete * delete, char const * filename)$/;"	f	file:
_idle_do_readdir	src/delete.c	/^static int _idle_do_readdir(Delete * delete)$/;"	f	file:
_idle_image_100	src/plugins/preview.c	/^static void _idle_image_100(Preview * preview)$/;"	f	file:
_idle_image_fit	src/plugins/preview.c	/^static void _idle_image_fit(Preview * preview)$/;"	f	file:
_idle_image_load	src/plugins/preview.c	/^static void _idle_image_load(Preview * preview, gint height, gint width)$/;"	f	file:
_idle_image_load_animation	src/plugins/preview.c	/^static void _idle_image_load_animation(Preview * preview)$/;"	f	file:
_idle_image_load_pixbuf	src/plugins/preview.c	/^static void _idle_image_load_pixbuf(Preview * preview, gint width, gint height)$/;"	f	file:
_idle_image_scale	src/plugins/preview.c	/^static void _idle_image_scale(Preview * preview)$/;"	f	file:
_idle_load_plugins	src/browser/browser.c	/^static void _idle_load_plugins(Browser * browser)$/;"	f	file:
_init_button	src/plugins/cvs.c	/^static GtkWidget * _init_button(GtkSizeGroup * group, char const * icon,$/;"	f	file:
_init_button	src/plugins/git.c	/^static GtkWidget * _init_button(GtkSizeGroup * group, char const * icon,$/;"	f	file:
_init_button	src/plugins/make.c	/^static GtkWidget * _init_button(GtkSizeGroup * group, char const * icon,$/;"	f	file:
_init_button	src/plugins/subversion.c	/^static GtkWidget * _init_button(GtkSizeGroup * group, char const * icon,$/;"	f	file:
_init_label	src/plugins/cvs.c	/^static GtkWidget * _init_label(GtkSizeGroup * group, char const * label,$/;"	f	file:
_init_on_callback	src/plugins/git.c	/^static void _init_on_callback(Git * git, CommonTask * task, int ret)$/;"	f	file:
_init_sort	src/plugins/volumes.c	/^static int _init_sort(GtkTreeModel * model, GtkTreeIter * a, GtkTreeIter * b,$/;"	f	file:
_insert_all	src/browser/browser.c	/^static void _insert_all(Browser * browser, struct stat * lst, struct stat * st,$/;"	f	file:
_insert_date	src/browser/browser.c	/^static char const * _insert_date(time_t date)$/;"	f	file:
_license	src/browser/browser.c	/^static char const _license[] =$/;"	v	file:
_license	src/view.c	/^static char const _license[] =$/;"	v	file:
_list_add	src/plugins/trash.c	/^static void _list_add(Trash * trash, Config * config, char const * path,$/;"	f	file:
_list_add	src/plugins/volumes.c	/^static void _list_add(Volumes * volumes, char const * name, char const * device,$/;"	f	file:
_list_add_size	src/plugins/volumes.c	/^static void _list_add_size(char * buf, size_t len, unsigned long bsize,$/;"	f	file:
_list_get_icon	src/plugins/volumes.c	/^static GdkPixbuf * _list_get_icon(Volumes * volumes, VolumesPixbuf dp,$/;"	f	file:
_list_get_icon_emblem	src/plugins/volumes.c	/^static GdkPixbuf * _list_get_icon_emblem(GdkPixbuf * pixbuf, int size,$/;"	f	file:
_list_get_icon_removable	src/plugins/volumes.c	/^static GdkPixbuf * _list_get_icon_removable(Volumes * volumes, VolumesPixbuf dp,$/;"	f	file:
_list_get_iter	src/plugins/trash.c	/^static void _list_get_iter(Trash * trash, GtkTreeIter * iter, char const * path)$/;"	f	file:
_list_get_iter	src/plugins/volumes.c	/^static void _list_get_iter(Volumes * volumes, GtkTreeIter * iter,$/;"	f	file:
_list_loop_mounted	src/plugins/volumes.c	/^static void _list_loop_mounted(Volumes * volumes, int reset)$/;"	f	file:
_list_loop_unmounted	src/plugins/volumes.c	/^static int _list_loop_unmounted(Volumes * volumes)$/;"	f	file:
_list_purge	src/plugins/trash.c	/^static void _list_purge(Trash * trash)$/;"	f	file:
_list_purge	src/plugins/volumes.c	/^static void _list_purge(Volumes * volumes)$/;"	f	file:
_list_reset	src/plugins/trash.c	/^static void _list_reset(Trash * trash)$/;"	f	file:
_list_reset	src/plugins/volumes.c	/^static void _list_reset(Volumes * volumes)$/;"	f	file:
_location_directory	src/browser/browser.c	/^static int _location_directory(Browser * browser, char const * path, DIR * dir,$/;"	f	file:
_log_on_callback	src/plugins/git.c	/^static void _log_on_callback(Git * git, CommonTask * task, int ret)$/;"	f	file:
_loop_insert	src/browser/browser.c	/^static void _loop_insert(Browser * browser, GtkTreeIter * iter,$/;"	f	file:
_loop_status	src/browser/browser.c	/^static int _loop_status(Browser * browser, char const * prefix)$/;"	f	file:
_loop_update	src/browser/browser.c	/^static void _loop_update(Browser * browser, GtkTreeIter * iter,$/;"	f	file:
_make_add_task	src/plugins/make.c	/^static int _make_add_task(Make * make, char const * title,$/;"	f	file:
_make_can_autogensh	src/plugins/make.c	/^static gboolean _make_can_autogensh(char const * pathname)$/;"	f	file:
_make_can_configure	src/plugins/make.c	/^static gboolean _make_can_configure(char const * pathname)$/;"	f	file:
_make_can_gnu_configure	src/plugins/make.c	/^static gboolean _make_can_gnu_configure(char const * pathname)$/;"	f	file:
_make_destroy	src/plugins/make.c	/^static void _make_destroy(Make * make)$/;"	f	file:
_make_find	src/plugins/make.c	/^static gboolean _make_find(char const * directory, char const * filename,$/;"	f	file:
_make_get_widget	src/plugins/make.c	/^static GtkWidget * _make_get_widget(Make * make)$/;"	f	file:
_make_init	src/plugins/make.c	/^static Make * _make_init(BrowserPluginHelper * helper)$/;"	f	file:
_make_is_managed	src/plugins/make.c	/^static gboolean _make_is_managed(char const * pathname)$/;"	f	file:
_make_on_all	src/plugins/make.c	/^static void _make_on_all(gpointer data)$/;"	f	file:
_make_on_autogensh	src/plugins/make.c	/^static void _make_on_autogensh(gpointer data)$/;"	f	file:
_make_on_clean	src/plugins/make.c	/^static void _make_on_clean(gpointer data)$/;"	f	file:
_make_on_configure	src/plugins/make.c	/^static void _make_on_configure(gpointer data)$/;"	f	file:
_make_on_dist	src/plugins/make.c	/^static void _make_on_dist(gpointer data)$/;"	f	file:
_make_on_distclean	src/plugins/make.c	/^static void _make_on_distclean(gpointer data)$/;"	f	file:
_make_on_gnu_configure	src/plugins/make.c	/^static void _make_on_gnu_configure(gpointer data)$/;"	f	file:
_make_on_install	src/plugins/make.c	/^static void _make_on_install(gpointer data)$/;"	f	file:
_make_on_target	src/plugins/make.c	/^static void _make_on_target(gpointer data)$/;"	f	file:
_make_on_uninstall	src/plugins/make.c	/^static void _make_on_uninstall(gpointer data)$/;"	f	file:
_make_refresh	src/plugins/make.c	/^static void _make_refresh(Make * make, GList * selection)$/;"	f	file:
_make_target	src/plugins/make.c	/^static int _make_target(Make * make, char const * filename, char const * target)$/;"	f	file:
_mime	src/view.c	/^static Mime * _mime = NULL;$/;"	v	file:
_mime_icon_emblem	src/lib/vfs.c	/^static GdkPixbuf * _mime_icon_emblem(GdkPixbuf * pixbuf, int size,$/;"	f	file:
_mime_icon_folder	src/lib/vfs.c	/^static GdkPixbuf * _mime_icon_folder(Mime * mime, char const * filename,$/;"	f	file:
_mime_icon_folder_in_home	src/lib/vfs.c	/^static gboolean _mime_icon_folder_in_home(struct stat * pst)$/;"	f	file:
_mime_icon_folder_is_home	src/lib/vfs.c	/^static gboolean _mime_icon_folder_is_home(struct stat * st)$/;"	f	file:
_monitor_properties_workarea	src/desktop/desktop.c	/^static void _monitor_properties_workarea(Desktop * desktop, int monitor,$/;"	f	file:
_move	src/move.c	/^static int _move(Prefs * prefs, unsigned int filec, char * filev[])$/;"	f	file:
_move_error	src/move.c	/^static int _move_error(Move * move, char const * message, int ret)$/;"	f	file:
_move_filename_confirm	src/move.c	/^static int _move_filename_confirm(Move * move, char const * filename)$/;"	f	file:
_move_filename_error	src/move.c	/^static int _move_filename_error(Move * move, char const * filename, int ret)$/;"	f	file:
_move_idle_first	src/move.c	/^static gboolean _move_idle_first(gpointer data)$/;"	f	file:
_move_idle_multiple	src/move.c	/^static gboolean _move_idle_multiple(gpointer data)$/;"	f	file:
_move_multiple	src/move.c	/^static int _move_multiple(Move * move, char const * src, char const * dst)$/;"	f	file:
_move_on_cancel	src/move.c	/^static void _move_on_cancel(void)$/;"	f	file:
_move_on_closex	src/move.c	/^static void _move_on_closex(void)$/;"	f	file:
_move_refresh	src/move.c	/^static void _move_refresh(Move * move)$/;"	f	file:
_move_single	src/move.c	/^static int _move_single(Move * move, char const * src, char const * dst)$/;"	f	file:
_new_application_icon	src/desktop/desktopicon.c	/^static GdkPixbuf * _new_application_icon(Desktop * desktop, String const * icon,$/;"	f	file:
_new_events	src/desktop/desktop.c	/^static void _new_events(Desktop * desktop, GdkWindow * window,$/;"	f	file:
_new_filter	src/desktop/desktop.c	/^static void _new_filter(Desktop * desktop, GdkWindow * window)$/;"	f	file:
_new_icons	src/desktop/desktop.c	/^static void _new_icons(Desktop * desktop)$/;"	f	file:
_new_idle	src/browser/browser.c	/^static gboolean _new_idle(gpointer data)$/;"	f	file:
_new_label_left	src/plugins/properties.c	/^static GtkWidget * _new_label_left(GtkSizeGroup * group, char const * text)$/;"	f	file:
_new_load	src/properties.c	/^static int _new_load(Properties * properties, char const * plugin)$/;"	f	file:
_new_load	src/view.c	/^static GtkWidget * _new_load(View * view)$/;"	f	file:
_new_pack	src/plugins/properties.c	/^static void _new_pack(GtkWidget * vbox, GtkWidget * label, GtkWidget * widget)$/;"	f	file:
_new_window	src/desktop/desktop.c	/^static void _new_window(Desktop * desktop, GdkEventMask * mask)$/;"	f	file:
_on_add_filename	src/plugins/favorites.c	/^static void _on_add_filename(gchar const * pathname, gpointer data)$/;"	f	file:
_on_closex	tools/iconlist.c	/^static gboolean _on_closex(GtkWidget * widget)$/;"	f	file:
_on_desktop_button_press	src/desktop/desktop.c	/^static gboolean _on_desktop_button_press(GtkWidget * widget,$/;"	f	file:
_on_desktop_key_press	src/desktop/desktop.c	/^static gboolean _on_desktop_key_press(GtkWidget * widget, GdkEventKey * event,$/;"	f	file:
_on_desktopiconwindow_closex	src/desktop/desktopiconwindow.c	/^static gboolean _on_desktopiconwindow_closex(void)$/;"	f	file:
_on_dirtree_closex	tools/dirtree.c	/^static gboolean _on_dirtree_closex(gpointer data)$/;"	f	file:
_on_dirtree_default	tools/dirtree.c	/^static void _on_dirtree_default(GtkTreeView * view, GtkTreePath * path,$/;"	f	file:
_on_icon_button_press	src/desktop/desktopicon.c	/^static gboolean _on_icon_button_press(GtkWidget * widget,$/;"	f	file:
_on_icon_delete	src/desktop/desktopicon.c	/^static void _on_icon_delete(gpointer data)$/;"	f	file:
_on_icon_drag_data_get	src/desktop/desktopicon.c	/^static void _on_icon_drag_data_get(GtkWidget * widget, GdkDragContext * context,$/;"	f	file:
_on_icon_drag_data_received	src/desktop/desktopicon.c	/^static void _on_icon_drag_data_received(GtkWidget * widget,$/;"	f	file:
_on_icon_edit	src/desktop/desktopicon.c	/^static void _on_icon_edit(gpointer data)$/;"	f	file:
_on_icon_key_press	src/desktop/desktopicon.c	/^static gboolean _on_icon_key_press(GtkWidget * widget, GdkEventKey * event,$/;"	f	file:
_on_icon_open	src/desktop/desktopicon.c	/^static void _on_icon_open(gpointer data)$/;"	f	file:
_on_icon_open_with	src/desktop/desktopicon.c	/^static void _on_icon_open_with(gpointer data)$/;"	f	file:
_on_icon_properties	src/desktop/desktopicon.c	/^static void _on_icon_properties(gpointer data)$/;"	f	file:
_on_icon_rename	src/desktop/desktopicon.c	/^static void _on_icon_rename(gpointer data)$/;"	f	file:
_on_icon_run	src/desktop/desktopicon.c	/^static void _on_icon_run(gpointer data)$/;"	f	file:
_on_message	src/desktop/desktop.c	/^static int _on_message(void * data, uint32_t value1, uint32_t value2,$/;"	f	file:
_on_monitor_added	src/desktop/desktop.c	/^static void _on_monitor_added(GdkDisplay * display, GdkMonitor * monitor,$/;"	f	file:
_on_monitor_removed	src/desktop/desktop.c	/^static void _on_monitor_removed(GdkDisplay * display, GdkMonitor * monitor,$/;"	f	file:
_on_popup	src/desktop/desktop.c	/^static void _on_popup(gpointer data)$/;"	f	file:
_on_popup_event	src/desktop/desktop.c	/^static void _on_popup_event(gpointer data, XButtonEvent * xbev)$/;"	f	file:
_on_popup_new_folder	src/desktop/handler/files.c	/^static void _on_popup_new_folder(gpointer data)$/;"	f	file:
_on_popup_new_text_file	src/desktop/handler/files.c	/^static void _on_popup_new_text_file(gpointer data)$/;"	f	file:
_on_popup_paste	src/desktop/handler/files.c	/^static void _on_popup_paste(gpointer data)$/;"	f	file:
_on_popup_preferences	src/desktop/handler/files.c	/^static void _on_popup_preferences(gpointer data)$/;"	f	file:
_on_popup_symlink	src/desktop/handler/files.c	/^static void _on_popup_symlink(gpointer data)$/;"	f	file:
_on_realize	src/desktop/desktop.c	/^static void _on_realize(gpointer data)$/;"	f	file:
_on_root_event	src/desktop/desktop.c	/^static GdkFilterReturn _on_root_event(GdkXEvent * xevent, GdkEvent * event,$/;"	f	file:
_on_theme_activate	tools/iconlist.c	/^static void _on_theme_activate(GtkWidget * widget, gpointer data)$/;"	f	file:
_open	src/open.c	/^static int _open(char const * type, char const * action, int filec,$/;"	f	file:
_open_detect	src/open.c	/^static int _open_detect(int filec, char * filev[])$/;"	f	file:
_open_error	src/open.c	/^static int _open_error(char const * message, int ret)$/;"	f	file:
_open_with_default	src/browser/browser.c	/^static void _open_with_default(Browser * browser, char const * path,$/;"	f	file:
_out_rate	src/copy.c	/^static void _out_rate(Copy * copy)$/;"	f	file:
_perror	tests/plugins.c	/^static int _perror(char const * message, int ret)$/;"	f	file:
_pkgconfig	data/pkgconfig.sh	/^_pkgconfig()$/;"	f
_pkgconfig	tests/pkgconfig.sh	/^_pkgconfig()$/;"	f
_places_destroy	src/plugins/places.c	/^static void _places_destroy(Places * places)$/;"	f	file:
_places_get_widget	src/plugins/places.c	/^static GtkWidget * _places_get_widget(Places * places)$/;"	f	file:
_places_init	src/plugins/places.c	/^static Places * _places_init(BrowserPluginHelper * helper)$/;"	f	file:
_places_on_open_location	src/plugins/places.c	/^static void _places_on_open_location(GtkWidget * widget, GObject * location,$/;"	f	file:
_plugin_refresh_do	src/browser/browser.c	/^static void _plugin_refresh_do(Browser * browser, char const * path)$/;"	f	file:
_plugin_refresh_do_list	src/browser/browser.c	/^static void _plugin_refresh_do_list(Browser * browser, GList * list)$/;"	f	file:
_plugins	tests/plugins.c	/^static int _plugins(void)$/;"	f	file:
_popup_callback	src/desktop/desktopicon.c	/^static void _popup_callback(GtkWidget * menu, DesktopIcon * desktopicon)$/;"	f	file:
_popup_directory	src/desktop/desktopicon.c	/^static void _popup_directory(GtkWidget * menu, DesktopIcon * desktopicon)$/;"	f	file:
_popup_file	src/desktop/desktopicon.c	/^static void _popup_file(GtkWidget * menu, DesktopIcon * desktopicon)$/;"	f	file:
_popup_mime	src/desktop/desktopicon.c	/^static void _popup_mime(Mime * mime, char const * mimetype, char const * action,$/;"	f	file:
_preferences_background	src/desktop/desktop.c	/^static void _preferences_background(Desktop * desktop, GtkWidget * notebook)$/;"	f	file:
_preferences_icons	src/desktop/desktop.c	/^static void _preferences_icons(Desktop * desktop, GtkWidget * notebook)$/;"	f	file:
_preferences_monitors	src/desktop/desktop.c	/^static void _preferences_monitors(Desktop * desktop, GtkWidget * notebook)$/;"	f	file:
_preferences_on_apply	src/browser/browser.c	/^static void _preferences_on_apply(gpointer data)$/;"	f	file:
_preferences_on_cancel	src/browser/browser.c	/^static void _preferences_on_cancel(gpointer data)$/;"	f	file:
_preferences_on_closex	src/browser/browser.c	/^static gboolean _preferences_on_closex(gpointer data)$/;"	f	file:
_preferences_on_mime_edit	src/browser/browser.c	/^static void _preferences_on_mime_edit(gpointer data)$/;"	f	file:
_preferences_on_mime_foreach	src/browser/browser.c	/^static void _preferences_on_mime_foreach(void * data, char const * name,$/;"	f	file:
_preferences_on_ok	src/browser/browser.c	/^static void _preferences_on_ok(gpointer data)$/;"	f	file:
_preferences_on_plugin_toggled	src/browser/browser.c	/^static void _preferences_on_plugin_toggled(GtkCellRendererToggle * renderer,$/;"	f	file:
_preferences_on_response	src/browser/browser.c	/^static void _preferences_on_response(GtkWidget * widget, gint response,$/;"	f	file:
_preferences_set	src/browser/browser.c	/^static void _preferences_set(Browser * browser)$/;"	f	file:
_preferences_set	src/desktop/desktop.c	/^static void _preferences_set(Desktop * desktop)$/;"	f	file:
_preferences_set_color	src/desktop/desktop.c	/^static void _preferences_set_color(Config * config, char const * section,$/;"	f	file:
_preferences_set_plugins	src/browser/browser.c	/^static void _preferences_set_plugins(Browser * browser)$/;"	f	file:
_preview_destroy	src/plugins/preview.c	/^static void _preview_destroy(Preview * preview)$/;"	f	file:
_preview_get_image_size	src/plugins/preview.c	/^static void _preview_get_image_size(Preview * preview, gint * width,$/;"	f	file:
_preview_get_widget	src/plugins/preview.c	/^static GtkWidget * _preview_get_widget(Preview * preview)$/;"	f	file:
_preview_get_widget_size	src/plugins/preview.c	/^static void _preview_get_widget_size(Preview * preview, gint * width,$/;"	f	file:
_preview_init	src/plugins/preview.c	/^static Preview * _preview_init(BrowserPluginHelper * helper)$/;"	f	file:
_preview_on_copy	src/plugins/preview.c	/^static void _preview_on_copy(gpointer data)$/;"	f	file:
_preview_on_edit	src/plugins/preview.c	/^static void _preview_on_edit(gpointer data)$/;"	f	file:
_preview_on_idle_image	src/plugins/preview.c	/^static gboolean _preview_on_idle_image(gpointer data)$/;"	f	file:
_preview_on_idle_text	src/plugins/preview.c	/^static gboolean _preview_on_idle_text(gpointer data)$/;"	f	file:
_preview_on_open	src/plugins/preview.c	/^static void _preview_on_open(gpointer data)$/;"	f	file:
_preview_on_select_all	src/plugins/preview.c	/^static void _preview_on_select_all(gpointer data)$/;"	f	file:
_preview_on_zoom_100	src/plugins/preview.c	/^static void _preview_on_zoom_100(gpointer data)$/;"	f	file:
_preview_on_zoom_fit	src/plugins/preview.c	/^static void _preview_on_zoom_fit(gpointer data)$/;"	f	file:
_preview_on_zoom_in	src/plugins/preview.c	/^static void _preview_on_zoom_in(gpointer data)$/;"	f	file:
_preview_on_zoom_out	src/plugins/preview.c	/^static void _preview_on_zoom_out(gpointer data)$/;"	f	file:
_preview_refresh	src/plugins/preview.c	/^static void _preview_refresh(Preview * preview, GList * selection)$/;"	f	file:
_properties	src/properties.c	/^static int _properties(Mime * mime, char const * plugin,$/;"	f	file:
_properties_cnt	src/properties.c	/^static unsigned int _properties_cnt = 0; \/* XXX set as static in _properties *\/$/;"	v	file:
_properties_config_get	src/properties.c	/^static char const * _properties_config_get(Properties * properties,$/;"	f	file:
_properties_config_set	src/properties.c	/^static int _properties_config_set(Properties * properties, char const * section,$/;"	f	file:
_properties_delete	src/plugins/properties.c	/^static void _properties_delete(Properties * properties)$/;"	f	file:
_properties_delete	src/properties.c	/^static void _properties_delete(Properties * properties)$/;"	f	file:
_properties_destroy	src/plugins/properties.c	/^static void _properties_destroy(Properties * properties)$/;"	f	file:
_properties_do_refresh	src/plugins/properties.c	/^static int _properties_do_refresh(Properties * properties)$/;"	f	file:
_properties_error	src/plugins/properties.c	/^static int _properties_error(Properties * properties, char const * message,$/;"	f	file:
_properties_error	src/properties.c	/^static int _properties_error(Properties * properties, char const * message,$/;"	f	file:
_properties_get_icon	src/properties.c	/^static GdkPixbuf * _properties_get_icon(Properties * properties,$/;"	f	file:
_properties_get_mime	src/properties.c	/^static Mime * _properties_get_mime(Properties * properties)$/;"	f	file:
_properties_get_type	src/properties.c	/^static char const * _properties_get_type(Properties * properties,$/;"	f	file:
_properties_get_widget	src/plugins/properties.c	/^static GtkWidget * _properties_get_widget(Properties * properties)$/;"	f	file:
_properties_helper_set_location	src/properties.c	/^static int _properties_helper_set_location(Properties * properties,$/;"	f	file:
_properties_init	src/plugins/properties.c	/^static Properties * _properties_init(BrowserPluginHelper * helper)$/;"	f	file:
_properties_load	src/properties.c	/^static int _properties_load(Properties * properties, char const * name)$/;"	f	file:
_properties_new	src/plugins/properties.c	/^static Properties * _properties_new(BrowserPluginHelper * helper,$/;"	f	file:
_properties_new	src/properties.c	/^static Properties * _properties_new(Mime * mime, char const * plugin,$/;"	f	file:
_properties_on_apply	src/plugins/properties.c	/^static void _properties_on_apply(gpointer data)$/;"	f	file:
_properties_on_close	src/properties.c	/^static void _properties_on_close(gpointer data)$/;"	f	file:
_properties_on_closex	src/properties.c	/^static gboolean _properties_on_closex(gpointer data)$/;"	f	file:
_properties_on_refresh	src/plugins/properties.c	/^static void _properties_on_refresh(gpointer data)$/;"	f	file:
_properties_refresh	src/plugins/properties.c	/^static void _properties_refresh(Properties * properties, GList * selection)$/;"	f	file:
_properties_set_filename	src/plugins/properties.c	/^static int _properties_set_filename(Properties * properties,$/;"	f	file:
_properties_set_location	src/properties.c	/^static int _properties_set_location(Properties * properties,$/;"	f	file:
_properties_workarea	src/desktop/desktop.c	/^static void _properties_workarea(Desktop * desktop, GdkRectangle * workarea)$/;"	f	file:
_refresh_add	src/plugins/favorites.c	/^static void _refresh_add(Favorites * favorites, char const * buf)$/;"	f	file:
_refresh_add_file	src/plugins/favorites.c	/^static void _refresh_add_file(Favorites * favorites, gint size,$/;"	f	file:
_refresh_apply	src/plugins/properties.c	/^static void _refresh_apply(GtkWidget * widget, gboolean sensitive)$/;"	f	file:
_refresh_copy	src/plugins/favorites.c	/^static void _refresh_copy(gchar const * pathname, gpointer data)$/;"	f	file:
_refresh_current	src/browser/browser.c	/^static void _refresh_current(Browser * browser)$/;"	f	file:
_refresh_delete	src/delete.c	/^static void _refresh_delete(Delete * delete, char const * filename)$/;"	f	file:
_refresh_dir	src/plugins/cvs.c	/^static void _refresh_dir(CVS * cvs)$/;"	f	file:
_refresh_dir	src/plugins/git.c	/^static void _refresh_dir(Git * git)$/;"	f	file:
_refresh_dir	src/plugins/make.c	/^static void _refresh_dir(Make * make)$/;"	f	file:
_refresh_dir	src/plugins/subversion.c	/^static void _refresh_dir(SVN * svn)$/;"	f	file:
_refresh_done	src/browser/browser.c	/^static void _refresh_done(Browser * browser)$/;"	f	file:
_refresh_error	src/plugins/cvs.c	/^static void _refresh_error(CVS * cvs, char const * message)$/;"	f	file:
_refresh_error	src/plugins/git.c	/^static void _refresh_error(Git * git, char const * message)$/;"	f	file:
_refresh_error	src/plugins/make.c	/^static void _refresh_error(Make * make, char const * message)$/;"	f	file:
_refresh_error	src/plugins/subversion.c	/^static void _refresh_error(SVN * svn, char const * message)$/;"	f	file:
_refresh_file	src/plugins/cvs.c	/^static void _refresh_file(CVS * cvs)$/;"	f	file:
_refresh_file	src/plugins/git.c	/^static void _refresh_file(Git * git)$/;"	f	file:
_refresh_file	src/plugins/make.c	/^static void _refresh_file(Make * make)$/;"	f	file:
_refresh_group	src/plugins/properties.c	/^static int _refresh_group(Properties * properties, gid_t gid,$/;"	f	file:
_refresh_hide	src/plugins/cvs.c	/^static void _refresh_hide(CVS * cvs, gboolean name)$/;"	f	file:
_refresh_hide	src/plugins/git.c	/^static void _refresh_hide(Git * git, gboolean name)$/;"	f	file:
_refresh_hide	src/plugins/make.c	/^static void _refresh_hide(Make * make, gboolean name)$/;"	f	file:
_refresh_hide	src/plugins/subversion.c	/^static void _refresh_hide(SVN * svn, gboolean name)$/;"	f	file:
_refresh_mime	src/plugins/preview.c	/^static void _refresh_mime(Preview * preview, Mime * mime, char const * type)$/;"	f	file:
_refresh_mode	src/plugins/properties.c	/^static void _refresh_mode(GtkWidget ** widget, mode_t mode, gboolean sensitive)$/;"	f	file:
_refresh_name	src/plugins/preview.c	/^static int _refresh_name(Preview * preview, char const * path)$/;"	f	file:
_refresh_name	src/plugins/properties.c	/^static void _refresh_name(GtkWidget * widget, char const * filename)$/;"	f	file:
_refresh_new	src/browser/browser.c	/^static void _refresh_new(Browser * browser)$/;"	f	file:
_refresh_new_idle	src/browser/browser.c	/^static gboolean _refresh_new_idle(gpointer data)$/;"	f	file:
_refresh_new_loop	src/browser/browser.c	/^static int _refresh_new_loop(Browser * browser)$/;"	f	file:
_refresh_on_idle	src/desktop/desktop.c	/^static gboolean _refresh_on_idle(gpointer data)$/;"	f	file:
_refresh_owner	src/plugins/properties.c	/^static void _refresh_owner(Properties * properties, uid_t uid)$/;"	f	file:
_refresh_path	src/browser/browser.c	/^static void _refresh_path(Browser * browser)$/;"	f	file:
_refresh_reset	src/plugins/preview.c	/^static void _refresh_reset(Preview * preview)$/;"	f	file:
_refresh_size	src/plugins/properties.c	/^static void _refresh_size(Properties * properties, size_t size)$/;"	f	file:
_refresh_status	src/plugins/cvs.c	/^static void _refresh_status(CVS * cvs, char const * status)$/;"	f	file:
_refresh_status	src/plugins/make.c	/^static void _refresh_status(Make * make, char const * status)$/;"	f	file:
_refresh_status	src/plugins/subversion.c	/^static void _refresh_status(SVN * svn, char const * status)$/;"	f	file:
_refresh_time	src/plugins/properties.c	/^static void _refresh_time(GtkWidget * widget, time_t t)$/;"	f	file:
_refresh_title	src/browser/browser.c	/^static void _refresh_title(Browser * browser)$/;"	f	file:
_refresh_type	src/plugins/properties.c	/^static void _refresh_type(Properties * properties, struct stat * lst,$/;"	f	file:
_regular_channel	src/copy.c	/^static gboolean _regular_channel(GIOChannel * source, GIOCondition condition,$/;"	f	file:
_regular_idle_in	src/copy.c	/^static gboolean _regular_idle_in(gpointer data)$/;"	f	file:
_regular_idle_out	src/copy.c	/^static gboolean _regular_idle_out(gpointer data)$/;"	f	file:
_reset_background	src/desktop/desktop.c	/^static void _reset_background(Desktop * desktop, Config * config)$/;"	f	file:
_reset_icons	src/desktop/desktop.c	/^static void _reset_icons(Desktop * desktop, Config * config)$/;"	f	file:
_reset_icons_colors	src/desktop/desktop.c	/^static void _reset_icons_colors(Desktop * desktop, Config * config)$/;"	f	file:
_reset_icons_font	src/desktop/desktop.c	/^static void _reset_icons_font(Desktop * desktop, Config * config)$/;"	f	file:
_reset_icons_monitor	src/desktop/desktop.c	/^static void _reset_icons_monitor(Desktop * desktop, Config * config)$/;"	f	file:
_reset_icons_size	src/desktop/desktop.c	/^static void _reset_icons_size(Desktop * desktop, Config * config)$/;"	f	file:
_reset_on_idle	src/desktop/desktop.c	/^static gboolean _reset_on_idle(gpointer data)$/;"	f	file:
_restore_path	src/plugins/trash.c	/^static int _restore_path(Trash * trash, GtkTreeModel * model,$/;"	f	file:
_run	tests/tests.sh	/^_run()$/;"	f
_run_application	src/desktop/desktopicon.c	/^static void _run_application(DesktopIcon * desktopicon)$/;"	f	file:
_run_binary	src/desktop/desktopicon.c	/^static void _run_binary(DesktopIcon * desktopicon)$/;"	f	file:
_run_confirm	src/desktop/desktopicon.c	/^static gboolean _run_confirm(void)$/;"	f	file:
_run_directory	src/desktop/desktopicon.c	/^static void _run_directory(DesktopIcon * desktopicon)$/;"	f	file:
_run_link	src/desktop/desktopicon.c	/^static void _run_link(DesktopIcon * desktopicon)$/;"	f	file:
_selection_destroy	src/plugins/selection.c	/^static void _selection_destroy(Selection * selection)$/;"	f	file:
_selection_get_widget	src/plugins/selection.c	/^static GtkWidget * _selection_get_widget(Selection * selection)$/;"	f	file:
_selection_init	src/plugins/selection.c	/^static Selection * _selection_init(BrowserPluginHelper * helper)$/;"	f	file:
_selection_refresh	src/plugins/selection.c	/^static void _selection_refresh(Selection * selection, GList * selected)$/;"	f	file:
_set_icons_destroy	src/desktop/handler.c	/^static void _set_icons_destroy(DesktopHandler * handler)$/;"	f	file:
_set_icons_init	src/desktop/handler.c	/^static void _set_icons_init(DesktopHandler * handler)$/;"	f	file:
_single_dir	src/copy.c	/^static int _single_dir(Copy * copy, char const * src, char const * dst,$/;"	f	file:
_single_dir	src/move.c	/^static int _single_dir(Move * move, char const * src, char const * dst,$/;"	f	file:
_single_fifo	src/copy.c	/^static int _single_fifo(Copy * copy, char const * dst, mode_t mode)$/;"	f	file:
_single_fifo	src/move.c	/^static int _single_fifo(Move * move, char const * src, char const * dst,$/;"	f	file:
_single_nod	src/copy.c	/^static int _single_nod(Copy * copy, char const * src, char const * dst,$/;"	f	file:
_single_nod	src/move.c	/^static int _single_nod(Move * move, char const * src, char const * dst,$/;"	f	file:
_single_p	src/copy.c	/^static int _single_p(Copy * copy, char const * dst, struct stat const * st)$/;"	f	file:
_single_p	src/move.c	/^static int _single_p(Move * move, char const * dst, struct stat const * st)$/;"	f	file:
_single_recurse	src/copy.c	/^static int _single_recurse(Copy * copy, char const * src, char const * dst,$/;"	f	file:
_single_recurse	src/move.c	/^static int _single_recurse(Move * move, char const * src, char const * dst,$/;"	f	file:
_single_regular	src/copy.c	/^static int _single_regular(Copy * copy, char const * src, char const * dst,$/;"	f	file:
_single_regular	src/move.c	/^static int _single_regular(Move * move, char const * src, char const * dst,$/;"	f	file:
_single_remaining	src/copy.c	/^static void _single_remaining(Copy * copy, guint64 rate)$/;"	f	file:
_single_symlink	src/copy.c	/^static int _single_symlink(Copy * copy, char const * src, char const * dst)$/;"	f	file:
_single_symlink	src/move.c	/^static int _single_symlink(Move * move, char const * src, char const * dst)$/;"	f	file:
_single_timeout	src/copy.c	/^static gboolean _single_timeout(gpointer data)$/;"	f	file:
_single_unit	src/copy.c	/^static void _single_unit(guint64 size, double * fraction, char const ** unit,$/;"	f	file:
_sort_func	src/browser/browser.c	/^static int _sort_func(GtkTreeModel * model, GtkTreeIter * a, GtkTreeIter * b,$/;"	f	file:
_subst	tools/subst.sh	/^_subst()$/;"	f
_subversion_add_task	src/plugins/subversion.c	/^static int _subversion_add_task(SVN * svn, char const * title,$/;"	f	file:
_subversion_destroy	src/plugins/subversion.c	/^static void _subversion_destroy(SVN * svn)$/;"	f	file:
_subversion_get_base	src/plugins/subversion.c	/^static String * _subversion_get_base(SVN * svn, char const * filename)$/;"	f	file:
_subversion_get_widget	src/plugins/subversion.c	/^static GtkWidget * _subversion_get_widget(SVN * svn)$/;"	f	file:
_subversion_init	src/plugins/subversion.c	/^static SVN * _subversion_init(BrowserPluginHelper * helper)$/;"	f	file:
_subversion_is_managed	src/plugins/subversion.c	/^static gboolean _subversion_is_managed(SVN * svn, char const * filename)$/;"	f	file:
_subversion_on_add	src/plugins/subversion.c	/^static void _subversion_on_add(gpointer data)$/;"	f	file:
_subversion_on_blame	src/plugins/subversion.c	/^static void _subversion_on_blame(gpointer data)$/;"	f	file:
_subversion_on_commit	src/plugins/subversion.c	/^static void _subversion_on_commit(gpointer data)$/;"	f	file:
_subversion_on_diff	src/plugins/subversion.c	/^static void _subversion_on_diff(gpointer data)$/;"	f	file:
_subversion_on_log	src/plugins/subversion.c	/^static void _subversion_on_log(gpointer data)$/;"	f	file:
_subversion_on_status	src/plugins/subversion.c	/^static void _subversion_on_status(gpointer data)$/;"	f	file:
_subversion_on_update	src/plugins/subversion.c	/^static void _subversion_on_update(gpointer data)$/;"	f	file:
_subversion_refresh	src/plugins/subversion.c	/^static void _subversion_refresh(SVN * svn, GList * selection)$/;"	f	file:
_template_destroy	src/plugins/template.c	/^static void _template_destroy(Template * template)$/;"	f	file:
_template_get_widget	src/plugins/template.c	/^static GtkWidget * _template_get_widget(Template * template)$/;"	f	file:
_template_init	src/plugins/template.c	/^static Template * _template_init(BrowserPluginHelper * helper)$/;"	f	file:
_template_refresh	src/plugins/template.c	/^static void _template_refresh(Template * template, GList * selection)$/;"	f	file:
_test	tests/tests.sh	/^_test()$/;"	f
_trash_confirm	src/plugins/trash.c	/^static gboolean _trash_confirm(Trash * trash, char const * message)$/;"	f	file:
_trash_delete_selection	src/plugins/trash.c	/^static int _trash_delete_selection(Trash * trash)$/;"	f	file:
_trash_destroy	src/plugins/trash.c	/^static void _trash_destroy(Trash * trash)$/;"	f	file:
_trash_get_path	src/plugins/trash.c	/^static char * _trash_get_path(char const * subdir)$/;"	f	file:
_trash_get_widget	src/plugins/trash.c	/^static GtkWidget * _trash_get_widget(Trash * trash)$/;"	f	file:
_trash_init	src/plugins/trash.c	/^static Trash * _trash_init(BrowserPluginHelper * helper)$/;"	f	file:
_trash_list	src/plugins/trash.c	/^static void _trash_list(Trash * trash)$/;"	f	file:
_trash_on_delete	src/plugins/trash.c	/^static void _trash_on_delete(gpointer data)$/;"	f	file:
_trash_on_move_to_trash	src/plugins/trash.c	/^static void _trash_on_move_to_trash(gpointer data)$/;"	f	file:
_trash_on_restore	src/plugins/trash.c	/^static void _trash_on_restore(gpointer data)$/;"	f	file:
_trash_on_select_all	src/plugins/trash.c	/^static void _trash_on_select_all(gpointer data)$/;"	f	file:
_trash_on_selection_changed	src/plugins/trash.c	/^static void _trash_on_selection_changed(GtkTreeSelection * treesel,$/;"	f	file:
_trash_on_timeout	src/plugins/trash.c	/^static gboolean _trash_on_timeout(gpointer data)$/;"	f	file:
_trash_refresh	src/plugins/trash.c	/^static void _trash_refresh(Trash * trash, GList * selection)$/;"	f	file:
_trash_restore_selection	src/plugins/trash.c	/^static int _trash_restore_selection(Trash * trash)$/;"	f	file:
_undelete_destroy	src/plugins/undelete.c	/^static void _undelete_destroy(Undelete * undelete)$/;"	f	file:
_undelete_get_widget	src/plugins/undelete.c	/^static GtkWidget * _undelete_get_widget(Undelete * undelete)$/;"	f	file:
_undelete_init	src/plugins/undelete.c	/^static Undelete * _undelete_init(BrowserPluginHelper * helper)$/;"	f	file:
_undelete_on_idle	src/plugins/undelete.c	/^static gboolean _undelete_on_idle(gpointer data)$/;"	f	file:
_undelete_refresh	src/plugins/undelete.c	/^static void _undelete_refresh(Undelete * undelete, GList * selection)$/;"	f	file:
_usage	data/pkgconfig.sh	/^_usage()$/;"	f
_usage	doc/docbook.sh	/^_usage()$/;"	f
_usage	doc/gtkdoc.sh	/^_usage()$/;"	f
_usage	po/gettext.sh	/^_usage()$/;"	f
_usage	src/browser/main.c	/^static int _usage(void)$/;"	f	file:
_usage	src/copy.c	/^static int _usage(void)$/;"	f	file:
_usage	src/delete.c	/^static int _usage(void)$/;"	f	file:
_usage	src/desktop/desktopctl.c	/^static int _usage(void)$/;"	f	file:
_usage	src/desktop/main.c	/^static int _usage(void)$/;"	f	file:
_usage	src/move.c	/^static int _usage(void)$/;"	f	file:
_usage	src/open.c	/^static int _usage(void)$/;"	f	file:
_usage	src/properties.c	/^static int _usage(void)$/;"	f	file:
_usage	src/view.c	/^static int _usage(void)$/;"	f	file:
_usage	tests/clint.sh	/^_usage()$/;"	f
_usage	tests/fixme.sh	/^_usage()$/;"	f
_usage	tests/htmllint.sh	/^_usage()$/;"	f
_usage	tests/tests.sh	/^_usage()$/;"	f
_usage	tests/vfs.c	/^static int _usage(void)$/;"	f	file:
_usage	tests/xmllint.sh	/^_usage()$/;"	f
_usage	tools/dirtree.c	/^static int _usage(void)$/;"	f	file:
_usage	tools/iconlist.c	/^static int _usage(void)$/;"	f	file:
_usage	tools/subst.sh	/^_usage()$/;"	f
_vfs	tests/vfs.c	/^static int _vfs(void)$/;"	f	file:
_view_accel	src/view.c	/^static DesktopAccel _view_accel[] =$/;"	v	file:
_view_authors	src/view.c	/^static char const * _view_authors[] =$/;"	v	file:
_view_cnt	src/view.c	/^static unsigned int _view_cnt = 0;$/;"	v	file:
_view_config_get	src/view.c	/^static String const * _view_config_get(View * view, String const * section,$/;"	f	file:
_view_config_set	src/view.c	/^static int _view_config_set(View * view, String const * section,$/;"	f	file:
_view_delete	src/view.c	/^static void _view_delete(View * view)$/;"	f	file:
_view_details	src/browser/browser.c	/^static void _view_details(Browser * browser)$/;"	f	file:
_view_details_column_text	src/browser/browser.c	/^static void _view_details_column_text(GtkTreeView * view,$/;"	f	file:
_view_error	src/view.c	/^static int _view_error(View * view, char const * message, int ret)$/;"	f	file:
_view_get_icon	src/view.c	/^static GdkPixbuf * _view_get_icon(View * view, char const * filename,$/;"	f	file:
_view_get_mime	src/view.c	/^static Mime * _view_get_mime(View * view)$/;"	f	file:
_view_get_type	src/view.c	/^static char const * _view_get_type(View * view,$/;"	f	file:
_view_helper_set_location	src/view.c	/^static int _view_helper_set_location(View * view, char const * filename)$/;"	f	file:
_view_icons	src/browser/browser.c	/^static void _view_icons(Browser * browser)$/;"	f	file:
_view_icons_on_icon_default	src/browser/browser.c	/^static void _view_icons_on_icon_default(GtkIconView * view, GtkTreePath * path,$/;"	f	file:
_view_icons_on_icon_drag_data_get	src/browser/browser.c	/^static void _view_icons_on_icon_drag_data_get(GtkWidget * widget,$/;"	f	file:
_view_icons_on_icon_drag_data_received	src/browser/browser.c	/^static void _view_icons_on_icon_drag_data_received(GtkWidget * widget,$/;"	f	file:
_view_icons_selection	src/browser/browser.c	/^static void _view_icons_selection(Browser * browser, GList * sel)$/;"	f	file:
_view_icons_view	src/browser/browser.c	/^static void _view_icons_view(Browser * browser)$/;"	f	file:
_view_list	src/browser/browser.c	/^static void _view_list(Browser * browser)$/;"	f	file:
_view_menu_file	src/view.c	/^static DesktopMenu _view_menu_file[] =$/;"	v	file:
_view_menu_file_edit	src/view.c	/^static DesktopMenu _view_menu_file_edit[] =$/;"	v	file:
_view_menu_help	src/view.c	/^static DesktopMenu _view_menu_help[] =$/;"	v	file:
_view_menubar	src/view.c	/^static DesktopMenubar _view_menubar[] =$/;"	v	file:
_view_menubar_edit	src/view.c	/^static DesktopMenubar _view_menubar_edit[] =$/;"	v	file:
_view_new	src/view.c	/^static View * _view_new(Mime * mime, char const * filename)$/;"	f	file:
_view_new_open	src/view.c	/^static View * _view_new_open(Mime * mime)$/;"	f	file:
_view_on_button_press	src/browser/browser.c	/^static gboolean _view_on_button_press(GtkWidget * widget,$/;"	f	file:
_view_on_button_press_directory	src/browser/browser.c	/^static void _view_on_button_press_directory(GtkWidget * menu, IconCallback * ic)$/;"	f	file:
_view_on_button_press_file	src/browser/browser.c	/^static void _view_on_button_press_file(Browser * browser, GtkWidget * menu,$/;"	f	file:
_view_on_button_press_icon_delete	src/browser/browser.c	/^static void _view_on_button_press_icon_delete(gpointer data)$/;"	f	file:
_view_on_button_press_icon_edit	src/browser/browser.c	/^static void _view_on_button_press_icon_edit(gpointer data)$/;"	f	file:
_view_on_button_press_icon_open	src/browser/browser.c	/^static void _view_on_button_press_icon_open(gpointer data)$/;"	f	file:
_view_on_button_press_icon_open_new_window	src/browser/browser.c	/^static void _view_on_button_press_icon_open_new_window(gpointer data)$/;"	f	file:
_view_on_button_press_icon_open_with	src/browser/browser.c	/^static void _view_on_button_press_icon_open_with(gpointer data)$/;"	f	file:
_view_on_button_press_icon_paste	src/browser/browser.c	/^static void _view_on_button_press_icon_paste(gpointer data)$/;"	f	file:
_view_on_button_press_icon_run	src/browser/browser.c	/^static void _view_on_button_press_icon_run(gpointer data)$/;"	f	file:
_view_on_button_press_icon_unmount	src/browser/browser.c	/^static void _view_on_button_press_icon_unmount(gpointer data)$/;"	f	file:
_view_on_button_press_mime	src/browser/browser.c	/^static void _view_on_button_press_mime(Mime * mime, char const * mimetype,$/;"	f	file:
_view_on_button_press_path	src/browser/browser.c	/^static GtkTreePath * _view_on_button_press_path(Browser * browser,$/;"	f	file:
_view_on_button_press_popup	src/browser/browser.c	/^static gboolean _view_on_button_press_popup(Browser * browser,$/;"	f	file:
_view_on_button_press_popup_new_folder	src/browser/browser.c	/^static void _view_on_button_press_popup_new_folder(gpointer data)$/;"	f	file:
_view_on_button_press_popup_new_symlink	src/browser/browser.c	/^static void _view_on_button_press_popup_new_symlink(gpointer data)$/;"	f	file:
_view_on_button_press_popup_new_text_file	src/browser/browser.c	/^static void _view_on_button_press_popup_new_text_file(gpointer data)$/;"	f	file:
_view_on_button_press_show	src/browser/browser.c	/^static gboolean _view_on_button_press_show(Browser * browser, GdkEventButton * event,$/;"	f	file:
_view_on_close	src/view.c	/^static void _view_on_close(gpointer data)$/;"	f	file:
_view_on_closex	src/view.c	/^static gboolean _view_on_closex(gpointer data)$/;"	f	file:
_view_on_detail_default	src/browser/browser.c	/^static void _view_on_detail_default(GtkTreeView * view, GtkTreePath * path,$/;"	f	file:
_view_on_detail_default_do	src/browser/browser.c	/^static void _view_on_detail_default_do(Browser * browser, GtkTreePath * path)$/;"	f	file:
_view_on_file_close	src/view.c	/^static void _view_on_file_close(gpointer data)$/;"	f	file:
_view_on_file_edit	src/view.c	/^static void _view_on_file_edit(gpointer data)$/;"	f	file:
_view_on_file_open_with	src/view.c	/^static void _view_on_file_open_with(gpointer data)$/;"	f	file:
_view_on_file_properties	src/view.c	/^static void _view_on_file_properties(gpointer data)$/;"	f	file:
_view_on_filename_edited	src/browser/browser.c	/^static void _view_on_filename_edited(GtkCellRendererText * renderer,$/;"	f	file:
_view_on_help_about	src/view.c	/^static void _view_on_help_about(gpointer data)$/;"	f	file:
_view_on_help_contents	src/view.c	/^static void _view_on_help_contents(gpointer data)$/;"	f	file:
_view_on_open_with	src/view.c	/^static void _view_on_open_with(gpointer data)$/;"	f	file:
_view_on_popup_menu	src/browser/browser.c	/^static gboolean _view_on_popup_menu(GtkWidget * widget, gpointer data)$/;"	f	file:
_view_on_properties	src/view.c	/^static void _view_on_properties(gpointer data)$/;"	f	file:
_view_open_with	src/view.c	/^static void _view_open_with(View * view, char const * program)$/;"	f	file:
_view_open_with_dialog	src/view.c	/^static void _view_open_with_dialog(View * view)$/;"	f	file:
_view_set_location	src/view.c	/^static int _view_set_location(View * view, char const * filename)$/;"	f	file:
_view_thumbnails	src/browser/browser.c	/^static void _view_thumbnails(Browser * browser)$/;"	f	file:
_volumes_can_eject	src/plugins/volumes.c	/^static int _volumes_can_eject(unsigned int flags)$/;"	f	file:
_volumes_can_mount	src/plugins/volumes.c	/^static int _volumes_can_mount(unsigned int flags)$/;"	f	file:
_volumes_can_unmount	src/plugins/volumes.c	/^static int _volumes_can_unmount(unsigned int flags)$/;"	f	file:
_volumes_destroy	src/plugins/volumes.c	/^static void _volumes_destroy(Volumes * volumes)$/;"	f	file:
_volumes_eject	src/plugins/volumes.c	/^static int _volumes_eject(Volumes * volumes, char const * mountpoint)$/;"	f	file:
_volumes_get_widget	src/plugins/volumes.c	/^static GtkWidget * _volumes_get_widget(Volumes * volumes)$/;"	f	file:
_volumes_init	src/plugins/volumes.c	/^static Volumes * _volumes_init(BrowserPluginHelper * helper)$/;"	f	file:
_volumes_list	src/plugins/volumes.c	/^static void _volumes_list(Volumes * volumes)$/;"	f	file:
_volumes_mount	src/plugins/volumes.c	/^static int _volumes_mount(Volumes * volumes, char const * mountpoint)$/;"	f	file:
_volumes_on_eject	src/plugins/volumes.c	/^static void _volumes_on_eject(GtkWidget * widget, gpointer data)$/;"	f	file:
_volumes_on_eject_selection	src/plugins/volumes.c	/^static void _volumes_on_eject_selection(gpointer data)$/;"	f	file:
_volumes_on_mount	src/plugins/volumes.c	/^static void _volumes_on_mount(GtkWidget * widget, gpointer data)$/;"	f	file:
_volumes_on_mount_selection	src/plugins/volumes.c	/^static void _volumes_on_mount_selection(gpointer data)$/;"	f	file:
_volumes_on_open	src/plugins/volumes.c	/^static void _volumes_on_open(GtkWidget * widget, gpointer data)$/;"	f	file:
_volumes_on_open_new_window	src/plugins/volumes.c	/^static void _volumes_on_open_new_window(GtkWidget * widget, gpointer data)$/;"	f	file:
_volumes_on_properties	src/plugins/volumes.c	/^static void _volumes_on_properties(GtkWidget * widget, gpointer data)$/;"	f	file:
_volumes_on_timeout	src/plugins/volumes.c	/^static gboolean _volumes_on_timeout(gpointer data)$/;"	f	file:
_volumes_on_unmount	src/plugins/volumes.c	/^static void _volumes_on_unmount(GtkWidget * widget, gpointer data)$/;"	f	file:
_volumes_on_unmount_selection	src/plugins/volumes.c	/^static void _volumes_on_unmount_selection(gpointer data)$/;"	f	file:
_volumes_on_view_button_press	src/plugins/volumes.c	/^static gboolean _volumes_on_view_button_press(GtkWidget * widget,$/;"	f	file:
_volumes_on_view_popup_menu	src/plugins/volumes.c	/^static gboolean _volumes_on_view_popup_menu(GtkWidget * widget, gpointer data)$/;"	f	file:
_volumes_on_view_row_activated	src/plugins/volumes.c	/^static void _volumes_on_view_row_activated(GtkWidget * widget,$/;"	f	file:
_volumes_on_view_row_changed	src/plugins/volumes.c	/^static void _volumes_on_view_row_changed(GtkTreeSelection * treesel,$/;"	f	file:
_volumes_refresh	src/plugins/volumes.c	/^static void _volumes_refresh(Volumes * volumes, GList * selection)$/;"	f	file:
_volumes_unmount	src/plugins/volumes.c	/^static int _volumes_unmount(Volumes * volumes, char const * mountpoint)$/;"	f	file:
_xmllint	tests/xmllint.sh	/^_xmllint()$/;"	f
ab_window	src/browser/browser.c	/^	GtkWidget * ab_window;$/;"	m	struct:_Browser	file:
ab_window	src/browser/window.c	/^	GtkWidget * ab_window;$/;"	m	struct:_BrowserWindow	file:
ab_window	src/view.c	/^	GtkWidget * ab_window;$/;"	m	struct:_Browser	file:
add	src/plugins/cvs.c	/^	GtkWidget * add;$/;"	m	struct:_BrowserPlugin	file:
add	src/plugins/subversion.c	/^	GtkWidget * add;$/;"	m	struct:_BrowserPlugin	file:
alignment	src/desktop/desktop.c	/^	DesktopAlignment alignment;$/;"	m	struct:_Desktop	file:
alignment	src/desktop/desktop.h	/^	int alignment;$/;"	m	struct:_DesktopPrefs
alternate_rows	src/browser/browser.h	/^	gboolean alternate_rows;$/;"	m	struct:_BrowserPrefs
api-index-full	doc/gtkdoc/html/api-index-full.html	/^<a name="api-index-full"><\/a>API Index<\/h1><\/div><\/div><\/div>$/;"	a
applications	src/desktop/handler.c	/^		DesktopHandlerApplications applications;$/;"	m	union:_DesktopHandler::__anon2	file:
apply	src/plugins/properties.c	/^	GtkWidget * apply;$/;"	m	struct:_BrowserPlugin	file:
apps	src/desktop/handler.c	/^	GSList * apps;$/;"	m	struct:_DesktopHandlerApplications	file:
apps	src/desktop/handler.c	/^	GSList * apps;$/;"	m	struct:_DesktopHandlerCategories	file:
atime	src/plugins/properties.c	/^	GtkWidget * atime;$/;"	m	struct:_BrowserPlugin	file:
autogensh	src/plugins/make.c	/^	GtkWidget * autogensh;$/;"	m	struct:_BrowserPlugin	file:
back	src/desktop/desktop.c	/^	GdkWindow * back;$/;"	m	struct:_Desktop	file:
background	src/desktop/desktop.c	/^	GdkColor background;$/;"	m	struct:_Desktop	file:
background	src/desktop/desktop.c	/^	GdkRGBA background;$/;"	m	struct:_Desktop	file:
backup_CFLAGS	src/plugins/Makefile	/^backup_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
backup_LDFLAGS	src/plugins/Makefile	/^backup_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
backup_OBJS	src/plugins/Makefile	/^backup_OBJS = $(OBJDIR)backup.o$/;"	m
browser	include/Browser/plugin.h	/^	Browser * browser;$/;"	m	struct:_BrowserPluginHelper
browser	src/browser/browser.c	/^	Browser * browser;$/;"	m	struct:_IconCallback	file:
browser	src/browser/window.c	/^	Browser * browser;$/;"	m	struct:_BrowserWindow	file:
browser	src/widget/widget.c	/^	Browser * browser;$/;"	m	struct:_DesktopWidgetPlugin	file:
browser-vfs-can-eject	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-can-eject"><\/a><h3>browser_vfs_can_eject ()<\/h3>$/;"	a
browser-vfs-can-mount	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-can-mount"><\/a><h3>browser_vfs_can_mount ()<\/h3>$/;"	a
browser-vfs-can-unmount	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-can-unmount"><\/a><h3>browser_vfs_can_unmount ()<\/h3>$/;"	a
browser-vfs-closedir	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-closedir"><\/a><h3>browser_vfs_closedir ()<\/h3>$/;"	a
browser-vfs-eject	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-eject"><\/a><h3>browser_vfs_eject ()<\/h3>$/;"	a
browser-vfs-is-mountpoint	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-is-mountpoint"><\/a><h3>browser_vfs_is_mountpoint ()<\/h3>$/;"	a
browser-vfs-lstat	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-lstat"><\/a><h3>browser_vfs_lstat ()<\/h3>$/;"	a
browser-vfs-mime-icon	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-mime-icon"><\/a><h3>browser_vfs_mime_icon ()<\/h3>$/;"	a
browser-vfs-mime-type	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-mime-type"><\/a><h3>browser_vfs_mime_type ()<\/h3>$/;"	a
browser-vfs-mkdir	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-mkdir"><\/a><h3>browser_vfs_mkdir ()<\/h3>$/;"	a
browser-vfs-mount	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-mount"><\/a><h3>browser_vfs_mount ()<\/h3>$/;"	a
browser-vfs-opendir	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-opendir"><\/a><h3>browser_vfs_opendir ()<\/h3>$/;"	a
browser-vfs-readdir	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-readdir"><\/a><h3>browser_vfs_readdir ()<\/h3>$/;"	a
browser-vfs-stat	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-stat"><\/a><h3>browser_vfs_stat ()<\/h3>$/;"	a
browser-vfs-unmount	doc/gtkdoc/html/Browser-vfs.html	/^<a name="browser-vfs-unmount"><\/a><h3>browser_vfs_unmount ()<\/h3>$/;"	a
browser_CFLAGS	src/browser/Makefile	/^browser_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
browser_CFLAGS	src/widget/Makefile	/^browser_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
browser_LDFLAGS	src/browser/Makefile	/^browser_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
browser_LDFLAGS	src/widget/Makefile	/^browser_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
browser_OBJS	src/browser/Makefile	/^browser_OBJS = $(OBJDIR)browser.o $(OBJDIR)callbacks.o $(OBJDIR)window.o $(OBJDIR)main.o$/;"	m
browser_OBJS	src/widget/Makefile	/^browser_OBJS = $(OBJDIR)browser.o $(OBJDIR)callbacks.o $(OBJDIR)widget.o $(OBJDIR)window.o$/;"	m
browser_config_load	src/browser/browser.c	/^int browser_config_load(Browser * browser)$/;"	f
browser_config_save	src/browser/browser.c	/^int browser_config_save(Browser * browser)$/;"	f
browser_copy	src/browser/browser.c	/^void browser_copy(Browser * browser)$/;"	f
browser_cut	src/browser/browser.c	/^void browser_cut(Browser * browser)$/;"	f
browser_delete	src/browser/browser.c	/^void browser_delete(Browser * browser)$/;"	f
browser_error	src/browser/browser.c	/^int browser_error(Browser * browser, char const * message, int ret)$/;"	f
browser_focus_location	src/browser/browser.c	/^void browser_focus_location(Browser * browser)$/;"	f
browser_get_location	src/browser/browser.c	/^char const * browser_get_location(Browser * browser)$/;"	f
browser_get_path_entry	src/browser/browser.c	/^char const * browser_get_path_entry(Browser * browser)$/;"	f
browser_get_view	src/browser/browser.c	/^BrowserView browser_get_view(Browser * browser)$/;"	f
browser_get_widget	src/browser/browser.c	/^GtkWidget * browser_get_widget(Browser * browser)$/;"	f
browser_get_window	src/browser/browser.c	/^GtkWidget * browser_get_window(Browser * browser)$/;"	f
browser_go_back	src/browser/browser.c	/^void browser_go_back(Browser * browser)$/;"	f
browser_go_forward	src/browser/browser.c	/^void browser_go_forward(Browser * browser)$/;"	f
browser_go_home	src/browser/browser.c	/^void browser_go_home(Browser * browser)$/;"	f
browser_load	src/browser/browser.c	/^int browser_load(Browser * browser, char const * plugin)$/;"	f
browser_new	src/browser/browser.c	/^Browser * browser_new(GtkWidget * window, GtkAccelGroup * group,$/;"	f
browser_new_copy	src/browser/browser.c	/^Browser * browser_new_copy(Browser * browser)$/;"	f
browser_open	src/browser/browser.c	/^void browser_open(Browser * browser, char const * path)$/;"	f
browser_open_with	src/browser/browser.c	/^void browser_open_with(Browser * browser, char const * path)$/;"	f
browser_paste	src/browser/browser.c	/^void browser_paste(Browser * browser)$/;"	f
browser_properties	src/browser/browser.c	/^void browser_properties(Browser * browser)$/;"	f
browser_refresh	src/browser/browser.c	/^void browser_refresh(Browser * browser)$/;"	f
browser_select_all	src/browser/browser.c	/^void browser_select_all(Browser * browser)$/;"	f
browser_selection_copy	src/browser/browser.c	/^GList * browser_selection_copy(Browser * browser)$/;"	f
browser_selection_delete	src/browser/browser.c	/^void browser_selection_delete(Browser * browser)$/;"	f
browser_selection_paste	src/browser/browser.c	/^void browser_selection_paste(Browser * browser)$/;"	f
browser_set_location	src/browser/browser.c	/^int browser_set_location(Browser * browser, char const * path)$/;"	f
browser_set_view	src/browser/browser.c	/^void browser_set_view(Browser * browser, BrowserView view)$/;"	f
browser_show_about	src/browser/browser.c	/^void browser_show_about(Browser * browser, gboolean show)$/;"	f
browser_show_preferences	src/browser/browser.c	/^void browser_show_preferences(Browser * browser, gboolean show)$/;"	f
browser_unload	src/browser/browser.c	/^int browser_unload(Browser * browser, char const * plugin)$/;"	f
browser_unselect_all	src/browser/browser.c	/^void browser_unselect_all(Browser * browser)$/;"	f
browser_vfs_can_eject	src/lib/vfs.c	/^int browser_vfs_can_eject(char const * mountpoint)$/;"	f
browser_vfs_can_mount	src/lib/vfs.c	/^int browser_vfs_can_mount(char const * mountpoint)$/;"	f
browser_vfs_can_unmount	src/lib/vfs.c	/^int browser_vfs_can_unmount(char const * mountpoint)$/;"	f
browser_vfs_closedir	src/lib/vfs.c	/^int browser_vfs_closedir(DIR * dir)$/;"	f
browser_vfs_eject	src/lib/vfs.c	/^int browser_vfs_eject(char const * mountpoint)$/;"	f
browser_vfs_is_mountpoint	src/lib/vfs.c	/^int browser_vfs_is_mountpoint(struct stat * lst, dev_t parent)$/;"	f
browser_vfs_lstat	src/lib/vfs.c	/^int browser_vfs_lstat(char const * filename, struct stat * st)$/;"	f
browser_vfs_mime_icon	src/lib/vfs.c	/^GdkPixbuf * browser_vfs_mime_icon(Mime * mime, char const * filename,$/;"	f
browser_vfs_mime_type	src/lib/vfs.c	/^char const * browser_vfs_mime_type(Mime * mime, char const * filename,$/;"	f
browser_vfs_mkdir	src/lib/vfs.c	/^int browser_vfs_mkdir(char const * path, mode_t mode)$/;"	f
browser_vfs_mount	src/lib/vfs.c	/^int browser_vfs_mount(char const * mountpoint)$/;"	f
browser_vfs_opendir	src/lib/vfs.c	/^DIR * browser_vfs_opendir(char const * filename, struct stat * st)$/;"	f
browser_vfs_readdir	src/lib/vfs.c	/^struct dirent * browser_vfs_readdir(DIR * dir)$/;"	f
browser_vfs_stat	src/lib/vfs.c	/^int browser_vfs_stat(char const * filename, struct stat * st)$/;"	f
browser_vfs_unmount	src/lib/vfs.c	/^int browser_vfs_unmount(char const * mountpoint)$/;"	f
browser_window_cnt	src/browser/window.c	/^unsigned int browser_window_cnt = 0;$/;"	v
browserwindow_about	src/browser/window.c	/^void browserwindow_about(BrowserWindow * browser, gboolean show)$/;"	f
browserwindow_delete	src/browser/window.c	/^void browserwindow_delete(BrowserWindow * browser)$/;"	f
browserwindow_get_browser	src/browser/window.c	/^Browser * browserwindow_get_browser(BrowserWindow * browser)$/;"	f
browserwindow_new	src/browser/window.c	/^BrowserWindow * browserwindow_new(String const * directory)$/;"	f
browserwindow_show_preferences	src/browser/window.c	/^void browserwindow_show_preferences(BrowserWindow * browser, gboolean show)$/;"	f
buf	src/copy.c	/^	char buf[65536];$/;"	m	struct:_Copy	file:
buf_cnt	src/copy.c	/^	size_t buf_cnt;$/;"	m	struct:_Copy	file:
cairo	src/desktop/desktop.c	/^	cairo_t * cairo;$/;"	m	struct:_Desktop	file:
callback	src/desktop/desktopicon.c	/^	DesktopIconCallback callback;$/;"	m	struct:_DesktopIcon	file:
callback	src/plugins/common.c	/^	CommonTaskCallback callback;$/;"	m	struct:_CommonTask	file:
callback_data	src/plugins/common.c	/^	void * callback_data;$/;"	m	struct:_CommonTask	file:
categories	src/desktop/handler.c	/^		DesktopHandlerCategories categories;$/;"	m	union:_DesktopHandler::__anon2	file:
category	src/desktop/handler.c	/^	DesktopCategory * category;$/;"	m	struct:_DesktopHandlerApplications	file:
category	src/desktop/handler.c	/^	char const * category;$/;"	m	struct:_DesktopCategory	file:
checkout	src/plugins/cvs.c	/^	GtkWidget * checkout;$/;"	m	struct:_BrowserPlugin	file:
cnt	src/copy.c	/^	size_t cnt;$/;"	m	struct:_Copy	file:
config	src/browser/browser.c	/^	Config * config;$/;"	m	struct:_Browser	file:
config	src/properties.c	/^	Config * config;$/;"	m	struct:_Browser	file:
config-get	doc/gtkdoc/html/Browser-plugin.html	/^<a name="config-get"><\/a><h3>config_get ()<\/h3>$/;"	a
config-set	doc/gtkdoc/html/Browser-plugin.html	/^<a name="config-set"><\/a><h3>config_set ()<\/h3>$/;"	a
config_get	include/Browser/plugin.h	/^	char const * (*config_get)(Browser * browser, char const * section,$/;"	m	struct:_BrowserPluginHelper
config_set	include/Browser/plugin.h	/^	int (*config_set)(Browser * browser, char const * section,$/;"	m	struct:_BrowserPluginHelper
configure	src/plugins/make.c	/^	GtkWidget * configure;$/;"	m	struct:_BrowserPlugin	file:
confirm	src/desktop/desktopicon.c	/^	gboolean confirm;$/;"	m	struct:_DesktopIcon	file:
confirm_before_delete	src/browser/browser.h	/^	gboolean confirm_before_delete;$/;"	m	struct:_BrowserPrefs
copy	src/plugins/preview.c	/^	GtkToolItem * copy;$/;"	m	struct:_BrowserPlugin	file:
copy_CFLAGS	src/Makefile	/^copy_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
copy_LDFLAGS	src/Makefile	/^copy_LDFLAGS = $(LDFLAGSF) $(LDFLAGS) -L$(OBJDIR)lib -Wl,-rpath,$(PREFIX)\/lib -lBrowser$/;"	m
copy_OBJS	src/Makefile	/^copy_OBJS = $(OBJDIR)copy.o$/;"	m
count_cnt	src/delete.c	/^	size_t count_cnt;$/;"	m	struct:_Delete	file:
count_cur	src/delete.c	/^	size_t count_cur;$/;"	m	struct:_Delete	file:
count_tv	src/delete.c	/^	struct timeval count_tv;$/;"	m	struct:_Delete	typeref:struct:_Delete::timeval	file:
ctime	src/plugins/properties.c	/^	GtkWidget * ctime;$/;"	m	struct:_BrowserPlugin	file:
cur	src/copy.c	/^	unsigned int cur;$/;"	m	struct:_Copy	file:
cur	src/move.c	/^	unsigned int cur;$/;"	m	struct:_Move	file:
current	src/browser/browser.c	/^	GList * current;$/;"	m	struct:_Browser	file:
cvs_CFLAGS	src/plugins/Makefile	/^cvs_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
cvs_LDFLAGS	src/plugins/Makefile	/^cvs_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
cvs_OBJS	src/plugins/Makefile	/^cvs_OBJS = $(OBJDIR)cvs.o$/;"	m
d_ino	src/plugins/undelete.c	/^	unsigned long d_ino;$/;"	m	struct:_UndeleteDirent	file:
d_name	src/plugins/undelete.c	/^	char d_name[0];$/;"	m	struct:_UndeleteDirent	file:
d_off	src/plugins/undelete.c	/^	unsigned long d_off;$/;"	m	struct:_UndeleteDirent	file:
d_reclen	src/plugins/undelete.c	/^	unsigned short d_reclen;$/;"	m	struct:_UndeleteDirent	file:
d_repository	src/plugins/cvs.c	/^	GtkWidget * d_repository;$/;"	m	struct:_BrowserPlugin	file:
d_root	src/plugins/cvs.c	/^	GtkWidget * d_root;$/;"	m	struct:_BrowserPlugin	file:
d_tag	src/plugins/cvs.c	/^	GtkWidget * d_tag;$/;"	m	struct:_BrowserPlugin	file:
data	src/desktop/desktopicon.c	/^	gpointer data;$/;"	m	struct:_DesktopIcon	file:
datadir	src/desktop/handler/mimeapp.c	/^	String * datadir;$/;"	m	struct:_MimeApp	file:
de	src/delete.c	/^	struct dirent * de;$/;"	m	struct:_Delete	typeref:struct:_Delete::dirent	file:
default_view	src/browser/browser.h	/^	int default_view;$/;"	m	struct:_BrowserPrefs
delete_CFLAGS	src/Makefile	/^delete_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
delete_LDFLAGS	src/Makefile	/^delete_LDFLAGS = $(LDFLAGSF) $(LDFLAGS) -L$(OBJDIR)lib -Wl,-rpath,$(PREFIX)\/lib -lBrowser$/;"	m
delete_OBJS	src/Makefile	/^delete_OBJS = $(OBJDIR)delete.o$/;"	m
deprecated-api-index	doc/gtkdoc/html/deprecated-api-index.html	/^<a name="deprecated-api-index"><\/a>Index of deprecated API<\/h1><\/div><\/div><\/div>$/;"	a
description	include/Browser/plugin.h	/^	char const * description;$/;"	m	struct:_BrowserPluginDefinition
desktop	include/Browser/desktop.h	/^	Desktop * desktop;$/;"	m	struct:_DesktopHandlerHelper
desktop	src/desktop/desktop.c	/^	GtkWidget * desktop;$/;"	m	struct:_Desktop	file:
desktop	src/desktop/desktopicon.c	/^	Desktop * desktop;$/;"	m	struct:_DesktopIcon	file:
desktop	src/desktop/handler.c	/^	Desktop * desktop;$/;"	m	struct:_DesktopHandler	file:
desktop_CFLAGS	src/desktop/Makefile	/^desktop_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS) `pkg-config --cflags x11 xrandr`$/;"	m
desktop_LDFLAGS	src/desktop/Makefile	/^desktop_LDFLAGS = $(LDFLAGSF) $(LDFLAGS) `pkg-config --libs x11 xrandr` -L$(OBJDIR)..\/lib -Wl,-rpath,$(PREFIX)\/lib -lBrowser $(OBJDIR)handler\/mimeapp.o$/;"	m
desktop_OBJS	src/desktop/Makefile	/^desktop_OBJS = $(OBJDIR)desktop.o $(OBJDIR)desktopicon.o $(OBJDIR)desktopiconwindow.o $(OBJDIR)handler.o $(OBJDIR)main.o$/;"	m
desktop_delete	src/desktop/desktop.c	/^void desktop_delete(Desktop * desktop)$/;"	f
desktop_error	src/desktop/desktop.c	/^int desktop_error(Desktop * desktop, char const * message, char const * error,$/;"	f
desktop_get_drag_data	src/desktop/desktop.c	/^int desktop_get_drag_data(Desktop * desktop, GtkSelectionData * seldata)$/;"	f
desktop_get_file	src/desktop/desktop.c	/^GdkPixbuf * desktop_get_file(Desktop * desktop)$/;"	f
desktop_get_folder	src/desktop/desktop.c	/^GdkPixbuf * desktop_get_folder(Desktop * desktop)$/;"	f
desktop_get_handler	src/desktop/desktop.c	/^DesktopHandler * desktop_get_handler(Desktop * desktop)$/;"	f
desktop_get_home	src/desktop/desktop.c	/^String const * desktop_get_home(Desktop * desktop)$/;"	f
desktop_get_icon_size	src/desktop/desktop.c	/^void desktop_get_icon_size(Desktop * desktop, unsigned int * width,$/;"	f
desktop_get_icons_selected	src/desktop/desktop.c	/^DesktopIcon ** desktop_get_icons_selected(Desktop * desktop)$/;"	f
desktop_get_mime	src/desktop/desktop.c	/^Mime * desktop_get_mime(Desktop * desktop)$/;"	f
desktop_get_theme	src/desktop/desktop.c	/^GtkIconTheme * desktop_get_theme(Desktop * desktop)$/;"	f
desktop_get_window	src/desktop/desktop.c	/^GtkWidget * desktop_get_window(Desktop * desktop)$/;"	f
desktop_icon_add	src/desktop/desktop.c	/^void desktop_icon_add(Desktop * desktop, DesktopIcon * icon, gboolean align)$/;"	f
desktop_icon_remove	src/desktop/desktop.c	/^int desktop_icon_remove(Desktop * desktop, DesktopIcon * icon, gboolean align)$/;"	f
desktop_icons_align	src/desktop/desktop.c	/^void desktop_icons_align(Desktop * desktop)$/;"	f
desktop_icons_cleanup	src/desktop/desktop.c	/^void desktop_icons_cleanup(Desktop * desktop, gboolean align)$/;"	f
desktop_icons_lookup	src/desktop/desktop.c	/^DesktopIcon * desktop_icons_lookup(Desktop * desktop, String const * name)$/;"	f
desktop_icons_remove_all	src/desktop/desktop.c	/^void desktop_icons_remove_all(Desktop * desktop)$/;"	f
desktop_new	src/desktop/desktop.c	/^Desktop * desktop_new(DesktopPrefs * prefs)$/;"	f
desktop_perror	src/desktop/desktop.c	/^int desktop_perror(Desktop * desktop, char const * message, int ret)$/;"	f
desktop_refresh	src/desktop/desktop.c	/^void desktop_refresh(Desktop * desktop)$/;"	f
desktop_reset	src/desktop/desktop.c	/^void desktop_reset(Desktop * desktop)$/;"	f
desktop_select_above	src/desktop/desktop.c	/^void desktop_select_above(Desktop * desktop, DesktopIcon * icon)$/;"	f
desktop_select_all	src/desktop/desktop.c	/^void desktop_select_all(Desktop * desktop)$/;"	f
desktop_select_under	src/desktop/desktop.c	/^void desktop_select_under(Desktop * desktop, DesktopIcon * icon)$/;"	f
desktop_serror	src/desktop/desktop.c	/^int desktop_serror(Desktop * desktop, char const * message, int ret)$/;"	f
desktop_set_alignment	src/desktop/desktop.c	/^void desktop_set_alignment(Desktop * desktop, DesktopAlignment alignment)$/;"	f
desktop_set_icons	src/desktop/desktop.c	/^void desktop_set_icons(Desktop * desktop, DesktopIcons icons)$/;"	f
desktop_set_layout	src/desktop/desktop.c	/^int desktop_set_layout(Desktop * desktop, DesktopLayout layout)$/;"	f
desktop_show_preferences	src/desktop/desktop.c	/^void desktop_show_preferences(Desktop * desktop)$/;"	f
desktop_unselect_all	src/desktop/desktop.c	/^void desktop_unselect_all(Desktop * desktop)$/;"	f
desktopctl_CFLAGS	src/desktop/Makefile	/^desktopctl_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
desktopctl_LDFLAGS	src/desktop/Makefile	/^desktopctl_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
desktopctl_OBJS	src/desktop/Makefile	/^desktopctl_OBJS = $(OBJDIR)desktopctl.o$/;"	m
desktophandler_delete	src/desktop/handler.c	/^void desktophandler_delete(DesktopHandler * handler)$/;"	f
desktophandler_new	src/desktop/handler.c	/^DesktopHandler * desktophandler_new(Desktop * desktop, DesktopIcons icons)$/;"	f
desktophandler_popup	src/desktop/handler.c	/^void desktophandler_popup(DesktopHandler * handler, XButtonEvent * xbev)$/;"	f
desktophandler_refresh	src/desktop/handler.c	/^void desktophandler_refresh(DesktopHandler * handler)$/;"	f
desktophandler_set_icons	src/desktop/handler.c	/^void desktophandler_set_icons(DesktopHandler * handler, DesktopIcons icons)$/;"	f
desktopicon_delete	src/desktop/desktopicon.c	/^void desktopicon_delete(DesktopIcon * desktopicon)$/;"	f
desktopicon_get_desktop	src/desktop/desktopicon.c	/^Desktop * desktopicon_get_desktop(DesktopIcon * desktopicon)$/;"	f
desktopicon_get_first	src/desktop/desktopicon.c	/^gboolean desktopicon_get_first(DesktopIcon * desktopicon)$/;"	f
desktopicon_get_immutable	src/desktop/desktopicon.c	/^gboolean desktopicon_get_immutable(DesktopIcon * desktopicon)$/;"	f
desktopicon_get_isdir	src/desktop/desktopicon.c	/^gboolean desktopicon_get_isdir(DesktopIcon * desktopicon)$/;"	f
desktopicon_get_name	src/desktop/desktopicon.c	/^char const * desktopicon_get_name(DesktopIcon * desktopicon)$/;"	f
desktopicon_get_path	src/desktop/desktopicon.c	/^char const * desktopicon_get_path(DesktopIcon * desktopicon)$/;"	f
desktopicon_get_selected	src/desktop/desktopicon.c	/^gboolean desktopicon_get_selected(DesktopIcon * desktopicon)$/;"	f
desktopicon_get_updated	src/desktop/desktopicon.c	/^gboolean desktopicon_get_updated(DesktopIcon * desktopicon)$/;"	f
desktopicon_get_widget	src/desktop/desktopicon.c	/^GtkWidget * desktopicon_get_widget(DesktopIcon * desktopicon)$/;"	f
desktopicon_new	src/desktop/desktopicon.c	/^DesktopIcon * desktopicon_new(Desktop * desktop, char const * name,$/;"	f
desktopicon_new_application	src/desktop/desktopicon.c	/^DesktopIcon * desktopicon_new_application(Desktop * desktop, char const * path,$/;"	f
desktopicon_new_category	src/desktop/desktopicon.c	/^DesktopIcon * desktopicon_new_category(Desktop * desktop, char const * name,$/;"	f
desktopicon_set_background	src/desktop/desktopicon.c	/^void desktopicon_set_background(DesktopIcon * desktopicon, GdkRGBA * color)$/;"	f
desktopicon_set_callback	src/desktop/desktopicon.c	/^void desktopicon_set_callback(DesktopIcon * desktopicon,$/;"	f
desktopicon_set_confirm	src/desktop/desktopicon.c	/^void desktopicon_set_confirm(DesktopIcon * desktopicon, gboolean confirm)$/;"	f
desktopicon_set_executable	src/desktop/desktopicon.c	/^void desktopicon_set_executable(DesktopIcon * desktopicon, gboolean executable)$/;"	f
desktopicon_set_first	src/desktop/desktopicon.c	/^void desktopicon_set_first(DesktopIcon * desktopicon, gboolean first)$/;"	f
desktopicon_set_font	src/desktop/desktopicon.c	/^void desktopicon_set_font(DesktopIcon * desktopicon,$/;"	f
desktopicon_set_foreground	src/desktop/desktopicon.c	/^void desktopicon_set_foreground(DesktopIcon * desktopicon, GdkRGBA * color)$/;"	f
desktopicon_set_icon	src/desktop/desktopicon.c	/^void desktopicon_set_icon(DesktopIcon * desktopicon, GdkPixbuf * icon)$/;"	f
desktopicon_set_immutable	src/desktop/desktopicon.c	/^void desktopicon_set_immutable(DesktopIcon * desktopicon, gboolean immutable)$/;"	f
desktopicon_set_name	src/desktop/desktopicon.c	/^int desktopicon_set_name(DesktopIcon * desktopicon, char const * name)$/;"	f
desktopicon_set_selected	src/desktop/desktopicon.c	/^void desktopicon_set_selected(DesktopIcon * desktopicon, gboolean selected)$/;"	f
desktopicon_set_updated	src/desktop/desktopicon.c	/^void desktopicon_set_updated(DesktopIcon * desktopicon, gboolean updated)$/;"	f
desktopicon_set_window	src/desktop/desktopicon.c	/^void desktopicon_set_window(DesktopIcon * desktopicon, GtkWidget * window)$/;"	f
desktopiconwindow_delete	src/desktop/desktopiconwindow.c	/^void desktopiconwindow_delete(DesktopIconWindow * window)$/;"	f
desktopiconwindow_get_icon	src/desktop/desktopiconwindow.c	/^DesktopIcon * desktopiconwindow_get_icon(DesktopIconWindow * window)$/;"	f
desktopiconwindow_move	src/desktop/desktopiconwindow.c	/^void desktopiconwindow_move(DesktopIconWindow * window, int x, int y)$/;"	f
desktopiconwindow_new	src/desktop/desktopiconwindow.c	/^DesktopIconWindow * desktopiconwindow_new(DesktopIcon * icon)$/;"	f
desktopiconwindow_show	src/desktop/desktopiconwindow.c	/^void desktopiconwindow_show(DesktopIconWindow * window)$/;"	f
destroy	doc/gtkdoc/html/Browser-plugin.html	/^<a name="destroy"><\/a><h3>destroy ()<\/h3>$/;"	a
destroy	include/Browser/plugin.h	/^	void (*destroy)(BrowserPlugin * plugin);$/;"	m	struct:_BrowserPluginDefinition
detailview	src/browser/browser.c	/^	GtkWidget * detailview;$/;"	m	struct:_Browser	file:
dir	src/delete.c	/^	DIR * dir;$/;"	m	struct:_DeleteDir	file:
directory	src/plugins/cvs.c	/^	GtkWidget * directory;$/;"	m	struct:_BrowserPlugin	file:
directory	src/plugins/git.c	/^	GtkWidget * directory;$/;"	m	struct:_BrowserPlugin	file:
directory	src/plugins/make.c	/^	GtkWidget * directory;$/;"	m	struct:_BrowserPlugin	file:
directory	src/plugins/subversion.c	/^	GtkWidget * directory;$/;"	m	struct:_BrowserPlugin	file:
dirtree_CFLAGS	src/plugins/Makefile	/^dirtree_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
dirtree_CFLAGS	tools/Makefile	/^dirtree_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
dirtree_LDFLAGS	src/plugins/Makefile	/^dirtree_LDFLAGS = $(LDFLAGSF) $(LDFLAGS) -L$(OBJDIR)..\/lib -Wl,-rpath,$(LIBDIR) -lBrowser$/;"	m
dirtree_LDFLAGS	tools/Makefile	/^dirtree_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
dirtree_OBJS	src/plugins/Makefile	/^dirtree_OBJS = $(OBJDIR)dirtree.o$/;"	m
dirtree_OBJS	tools/Makefile	/^dirtree_OBJS = $(OBJDIR)dirtree.o$/;"	m
dirv	src/delete.c	/^	DeleteDir ** dirv;$/;"	m	struct:_Delete	file:
dirv_cnt	src/delete.c	/^	size_t dirv_cnt;$/;"	m	struct:_Delete	file:
display	src/desktop/desktop.c	/^	GdkDisplay * display;$/;"	m	struct:_Desktop	file:
e_channel	src/plugins/common.c	/^	GIOChannel * e_channel;$/;"	m	struct:_CommonTask	file:
e_fd	src/plugins/common.c	/^	gint e_fd;$/;"	m	struct:_CommonTask	file:
e_source	src/plugins/common.c	/^	guint e_source;$/;"	m	struct:_CommonTask	file:
e_tag	src/plugins/common.c	/^	GtkTextTag * e_tag;$/;"	m	struct:_CommonTask	file:
edit	src/plugins/preview.c	/^	GtkToolItem * edit;$/;"	m	struct:_BrowserPlugin	file:
entry	src/delete.c	/^	GtkWidget * entry;$/;"	m	struct:_Delete	file:
eof	src/copy.c	/^	int eof;$/;"	m	struct:_Copy	file:
error	doc/gtkdoc/html/Browser-plugin.html	/^<a name="error"><\/a><h3>error ()<\/h3>$/;"	a
error	include/Browser/plugin.h	/^	int (*error)(Browser * browser, char const * message, int ret);$/;"	m	struct:_BrowserPluginHelper
event	src/desktop/desktopicon.c	/^	GtkWidget * event;$/;"	m	struct:_DesktopIcon	file:
expanding	src/plugins/dirtree.c	/^	gboolean expanding;$/;"	m	struct:_BrowserPlugin	file:
f_revision	src/plugins/cvs.c	/^	GtkWidget * f_revision;$/;"	m	struct:_BrowserPlugin	file:
favorites_CFLAGS	src/plugins/Makefile	/^favorites_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
favorites_LDFLAGS	src/plugins/Makefile	/^favorites_LDFLAGS = $(LDFLAGSF) $(LDFLAGS) -L$(OBJDIR)..\/lib -Wl,-rpath,$(LIBDIR) -lBrowser$/;"	m
favorites_OBJS	src/plugins/Makefile	/^favorites_OBJS = $(OBJDIR)favorites.o$/;"	m
fd	src/plugins/undelete.c	/^	int fd;$/;"	m	struct:_BrowserPlugin	file:
file	src/desktop/desktop.c	/^	GdkPixbuf * file;$/;"	m	struct:_Desktop	file:
file	src/plugins/cvs.c	/^	GtkWidget * file;$/;"	m	struct:_BrowserPlugin	file:
file	src/plugins/git.c	/^	GtkWidget * file;$/;"	m	struct:_BrowserPlugin	file:
file	src/plugins/make.c	/^	GtkWidget * file;$/;"	m	struct:_BrowserPlugin	file:
file	src/plugins/subversion.c	/^	GtkWidget * file;$/;"	m	struct:_BrowserPlugin	file:
file_cur	src/delete.c	/^	unsigned int file_cur;$/;"	m	struct:_Delete	file:
filec	src/copy.c	/^	unsigned int filec;$/;"	m	struct:_Copy	file:
filec	src/delete.c	/^	unsigned int filec;$/;"	m	struct:_Delete	file:
filec	src/move.c	/^	unsigned int filec;$/;"	m	struct:_Move	file:
filename	src/copy.c	/^	GtkWidget * filename;$/;"	m	struct:_Copy	file:
filename	src/delete.c	/^	char * filename;$/;"	m	struct:_DeleteDir	file:
filename	src/plugins/cvs.c	/^	char * filename;$/;"	m	struct:_BrowserPlugin	file:
filename	src/plugins/git.c	/^	char * filename;$/;"	m	struct:_BrowserPlugin	file:
filename	src/plugins/make.c	/^	char * filename;$/;"	m	struct:_BrowserPlugin	file:
filename	src/plugins/properties.c	/^	char * filename;$/;"	m	struct:_BrowserPlugin	file:
filename	src/plugins/subversion.c	/^	char * filename;$/;"	m	struct:_BrowserPlugin	file:
filename	src/properties.c	/^	char * filename;$/;"	m	struct:_Browser	file:
filename	src/view.c	/^	char * filename;$/;"	m	struct:_Browser	file:
files	src/desktop/handler.c	/^		DesktopHandlerFiles files;$/;"	m	union:_DesktopHandler::__anon2	file:
filev	src/copy.c	/^	char ** filev;$/;"	m	struct:_Copy	file:
filev	src/delete.c	/^	char ** filev;$/;"	m	struct:_Delete	file:
filev	src/move.c	/^	char ** filev;$/;"	m	struct:_Move	file:
flabel	src/copy.c	/^	GtkWidget * flabel;$/;"	m	struct:_Copy	file:
flags	tools/iconlist.c	/^	int flags;$/;"	m	struct:_Prefs	file:
folder	src/desktop/desktop.c	/^	GdkPixbuf * folder;$/;"	m	struct:_Desktop	file:
folder	src/plugins/dirtree.c	/^	GdkPixbuf * folder;$/;"	m	struct:_BrowserPlugin	file:
folder	src/plugins/favorites.c	/^	GdkPixbuf * folder;$/;"	m	struct:_BrowserPlugin	file:
font	src/desktop/desktop.c	/^	PangoFontDescription * font;$/;"	m	struct:_Desktop	file:
foreground	src/desktop/desktop.c	/^	GdkColor foreground;$/;"	m	struct:_Desktop	file:
foreground	src/desktop/desktop.c	/^	GdkRGBA foreground;$/;"	m	struct:_Desktop	file:
fprogress	src/copy.c	/^	GtkWidget * fprogress;$/;"	m	struct:_Copy	file:
fpulse	src/copy.c	/^	int fpulse;			\/* tells when to pulse *\/$/;"	m	struct:_Copy	file:
fremaining	src/copy.c	/^	GtkWidget * fremaining;$/;"	m	struct:_Copy	file:
fspeed	src/copy.c	/^	GtkWidget * fspeed;$/;"	m	struct:_Copy	file:
get-icon	doc/gtkdoc/html/Browser-plugin.html	/^<a name="get-icon"><\/a><h3>get_icon ()<\/h3>$/;"	a
get-mime	doc/gtkdoc/html/Browser-plugin.html	/^<a name="get-mime"><\/a><h3>get_mime ()<\/h3>$/;"	a
get-type	doc/gtkdoc/html/Browser-plugin.html	/^<a name="get-type"><\/a><h3>get_type ()<\/h3>$/;"	a
get-widget	doc/gtkdoc/html/Browser-plugin.html	/^<a name="get-widget"><\/a><h3>get_widget ()<\/h3>$/;"	a
get_icon	include/Browser/plugin.h	/^	GdkPixbuf * (*get_icon)(Browser * browser, char const * filename,$/;"	m	struct:_BrowserPluginHelper
get_icon_size	include/Browser/plugin.h	/^	int (*get_icon_size)(Browser * browser, BrowserView view);$/;"	m	struct:_BrowserPluginHelper
get_mime	include/Browser/plugin.h	/^	Mime * (*get_mime)(Browser * browser);$/;"	m	struct:_BrowserPluginHelper
get_type	include/Browser/plugin.h	/^	char const * (*get_type)(Browser * browser, char const * filename,$/;"	m	struct:_BrowserPluginHelper
get_widget	include/Browser/plugin.h	/^	GtkWidget * (*get_widget)(BrowserPlugin * plugin);$/;"	m	struct:_BrowserPluginDefinition
getdents	src/plugins/undelete.c	/^static int getdents(int fd, char * buf, unsigned int count)$/;"	f	file:
gid	src/plugins/properties.c	/^	gid_t gid;$/;"	m	struct:_BrowserPlugin	file:
git_CFLAGS	src/plugins/Makefile	/^git_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
git_LDFLAGS	src/plugins/Makefile	/^git_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
git_OBJS	src/plugins/Makefile	/^git_OBJS = $(OBJDIR)git.o$/;"	m
gnuconfigure	src/plugins/make.c	/^	GtkWidget * gnuconfigure;$/;"	m	struct:_BrowserPlugin	file:
group	src/plugins/properties.c	/^	GtkWidget * group;$/;"	m	struct:_BrowserPlugin	file:
handler	src/desktop/desktop.c	/^	DesktopHandler * handler;$/;"	m	struct:_Desktop	file:
hbox	src/delete.c	/^	GtkWidget * hbox;$/;"	m	struct:_Delete	file:
height	src/plugins/volumes.c	/^	gint height;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/cvs.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/dirtree.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/favorites.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/git.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/make.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/places.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/preview.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/properties.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/selection.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/subversion.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/template.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/trash.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/undelete.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/plugins/volumes.c	/^	BrowserPluginHelper * helper;$/;"	m	struct:_BrowserPlugin	file:
helper	src/properties.c	/^	BrowserPluginHelper helper;$/;"	m	struct:_Browser	file:
helper	src/view.c	/^	BrowserPluginHelper helper;$/;"	m	struct:_Browser	file:
history	src/browser/browser.c	/^	GList * history;$/;"	m	struct:_Browser	file:
home	src/desktop/desktop.c	/^	char const * home;$/;"	m	struct:_Desktop	file:
icon	include/Browser/plugin.h	/^	char const * icon;$/;"	m	struct:_BrowserPluginDefinition
icon	src/desktop/desktopiconwindow.c	/^	DesktopIcon * icon;$/;"	m	struct:_DesktopIconWindow	file:
icon	src/desktop/handler.c	/^	char const * icon;$/;"	m	struct:_DesktopCategory	file:
iconlist_CFLAGS	tools/Makefile	/^iconlist_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
iconlist_LDFLAGS	tools/Makefile	/^iconlist_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
iconlist_OBJS	tools/Makefile	/^iconlist_OBJS = $(OBJDIR)iconlist.o$/;"	m
icons	src/desktop/desktop.c	/^	DesktopIconWindow ** icons;$/;"	m	struct:_Desktop	file:
icons	src/desktop/desktop.h	/^	int icons;$/;"	m	struct:_DesktopPrefs
icons	src/desktop/handler.c	/^	DesktopIcons icons;$/;"	m	struct:_DesktopHandler	file:
icons	src/plugins/volumes.c	/^	GdkPixbuf * icons[DP_COUNT];$/;"	m	struct:_BrowserPlugin	file:
icons_cnt	src/desktop/desktop.c	/^	size_t icons_cnt;$/;"	m	struct:_Desktop	file:
icons_size	src/desktop/desktop.c	/^	unsigned int icons_size;$/;"	m	struct:_Desktop	file:
iconsize	src/plugins/properties.c	/^	int iconsize;$/;"	m	struct:_BrowserPlugin	file:
iconview	src/browser/browser.c	/^	GtkWidget * iconview;$/;"	m	struct:_Browser	file:
id-1.2	doc/gtkdoc/html/ch01.html	/^<a name="id-1.2"><\/a>Desktop Browser<\/h1><\/div><\/div><\/div>$/;"	a
idle	src/delete.c	/^	guint idle;$/;"	m	struct:_Delete	file:
idx	doc/gtkdoc/html/api-index-full.html	/^<a name="idx"><\/a><a name="idxB"><\/a><h3 class="title">B<\/h3>$/;"	a
idx	doc/gtkdoc/html/deprecated-api-index.html	/^<a name="idx"><\/a>$/;"	a
idxC	doc/gtkdoc/html/api-index-full.html	/^<a name="idxC"><\/a><h3 class="title">C<\/h3>$/;"	a
idxD	doc/gtkdoc/html/api-index-full.html	/^<a name="idxD"><\/a><h3 class="title">D<\/h3>$/;"	a
idxE	doc/gtkdoc/html/api-index-full.html	/^<a name="idxE"><\/a><h3 class="title">E<\/h3>$/;"	a
idxG	doc/gtkdoc/html/api-index-full.html	/^<a name="idxG"><\/a><h3 class="title">G<\/h3>$/;"	a
idxI	doc/gtkdoc/html/api-index-full.html	/^<a name="idxI"><\/a><h3 class="title">I<\/h3>$/;"	a
idxP	doc/gtkdoc/html/api-index-full.html	/^<a name="idxP"><\/a><h3 class="title">P<\/h3>$/;"	a
idxR	doc/gtkdoc/html/api-index-full.html	/^<a name="idxR"><\/a><h3 class="title">R<\/h3>$/;"	a
idxS	doc/gtkdoc/html/api-index-full.html	/^<a name="idxS"><\/a><h3 class="title">S<\/h3>$/;"	a
idxV	doc/gtkdoc/html/api-index-full.html	/^<a name="idxV"><\/a><h3 class="title">V<\/h3>$/;"	a
image	src/desktop/desktopicon.c	/^	GtkWidget * image;$/;"	m	struct:_DesktopIcon	file:
image	src/plugins/properties.c	/^	GtkWidget * image;$/;"	m	struct:_BrowserPlugin	file:
immutable	src/desktop/desktopicon.c	/^	gboolean immutable;		\/* cannot be deleted *\/$/;"	m	struct:_DesktopIcon	file:
in_channel	src/copy.c	/^	GIOChannel * in_channel;$/;"	m	struct:_Copy	file:
in_id	src/copy.c	/^	guint in_id;$/;"	m	struct:_Copy	file:
infobar	src/browser/browser.c	/^	GtkWidget * infobar;$/;"	m	struct:_Browser	file:
infobar	src/plugins/common.c	/^	GtkWidget * infobar;$/;"	m	struct:_CommonTask	file:
infobar_label	src/browser/browser.c	/^	GtkWidget * infobar_label;$/;"	m	struct:_Browser	file:
infobar_label	src/plugins/common.c	/^	GtkWidget * infobar_label;$/;"	m	struct:_CommonTask	file:
init	doc/gtkdoc/html/Browser-plugin.html	/^<a name="init"><\/a><h3>init ()<\/h3>$/;"	a
init	include/Browser/plugin.h	/^	BrowserPlugin * (*init)(BrowserPluginHelper * helper);$/;"	m	struct:_BrowserPluginDefinition
init	src/plugins/git.c	/^	GtkWidget * init;$/;"	m	struct:_BrowserPlugin	file:
isdir	src/browser/browser.c	/^	int isdir;$/;"	m	struct:_IconCallback	file:
isdir	src/desktop/desktopicon.c	/^	gboolean isdir;$/;"	m	struct:_DesktopIcon	file:
isexec	src/browser/browser.c	/^	int isexec;$/;"	m	struct:_IconCallback	file:
isexec	src/desktop/desktopicon.c	/^	gboolean isexec;$/;"	m	struct:_DesktopIcon	file:
isfirst	src/desktop/desktopicon.c	/^	gboolean isfirst;$/;"	m	struct:_DesktopIcon	file:
ismnt	src/browser/browser.c	/^	int ismnt;$/;"	m	struct:_IconCallback	file:
label	src/delete.c	/^	GtkWidget * label;$/;"	m	struct:_Delete	file:
label	src/desktop/desktopicon.c	/^	GtkWidget * label;$/;"	m	struct:_DesktopIcon	file:
label	src/move.c	/^	GtkWidget * label;$/;"	m	struct:_Move	file:
libBrowser_CFLAGS	src/lib/Makefile	/^libBrowser_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
libBrowser_LDFLAGS	src/lib/Makefile	/^libBrowser_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
libBrowser_OBJS	src/lib/Makefile	/^libBrowser_OBJS = $(OBJDIR)vfs.o$/;"	m
loading	src/browser/browser.c	/^	GdkPixbuf * loading;$/;"	m	struct:_Browser	file:
main	src/browser/main.c	/^int main(int argc, char * argv[])$/;"	f
main	src/copy.c	/^int main(int argc, char * argv[])$/;"	f
main	src/delete.c	/^int main(int argc, char * argv[])$/;"	f
main	src/desktop/desktopctl.c	/^int main(int argc, char * argv[])$/;"	f
main	src/desktop/main.c	/^int main(int argc, char * argv[])$/;"	f
main	src/move.c	/^int main(int argc, char * argv[])$/;"	f
main	src/open.c	/^int main(int argc, char * argv[])$/;"	f
main	src/properties.c	/^int main(int argc, char * argv[])$/;"	f
main	src/view.c	/^int main(int argc, char * argv[])$/;"	f
main	tests/plugins.c	/^int main(void)$/;"	f
main	tests/vfs.c	/^int main(int argc, char * argv[])$/;"	f
main	tools/dirtree.c	/^int main(int argc, char * argv[])$/;"	f
main	tools/iconlist.c	/^int main(int argc, char * argv[])$/;"	f
make_CFLAGS	src/plugins/Makefile	/^make_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
make_LDFLAGS	src/plugins/Makefile	/^make_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
make_OBJS	src/plugins/Makefile	/^make_OBJS = $(OBJDIR)make.o$/;"	m
max	src/plugins/preview.c	/^# define max(/;"	d	file:
menu	src/desktop/handler.c	/^	GtkWidget * menu;$/;"	m	struct:_DesktopHandlerFiles	file:
mime	src/browser/browser.c	/^	Mime * mime;$/;"	m	struct:_Browser	file:
mime	src/desktop/desktop.c	/^	Mime * mime;$/;"	m	struct:_Desktop	file:
mime	src/desktop/desktopicon.c	/^	MimeHandler * mime;$/;"	m	struct:_DesktopIcon	file:
mime	src/desktop/handler/mimeapp.c	/^	MimeHandler * mime;$/;"	m	struct:_MimeApp	file:
mime	src/plugins/dirtree.c	/^	Mime * mime;$/;"	m	struct:_BrowserPlugin	file:
mime	src/plugins/favorites.c	/^	Mime * mime;$/;"	m	struct:_BrowserPlugin	file:
mime	src/properties.c	/^	Mime * mime;$/;"	m	struct:_Browser	file:
mime	src/view.c	/^	Mime * mime;$/;"	m	struct:_Browser	file:
mimeapp.o_CFLAGS	src/desktop/Makefile	/^handler\/mimeapp.o_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
mimeapp.o_OBJS	src/desktop/Makefile	/^handler\/mimeapp.o_OBJS = $(OBJDIR)handler\/mimeapp.o$/;"	m
mimeapp_compare	src/desktop/handler/mimeapp.c	/^int mimeapp_compare(MimeApp const * mime, MimeApp const * to)$/;"	f
mimeapp_delete	src/desktop/handler/mimeapp.c	/^void mimeapp_delete(MimeApp * mimeapp)$/;"	f
mimeapp_get_datadir	src/desktop/handler/mimeapp.c	/^String const * mimeapp_get_datadir(MimeApp const * mimeapp)$/;"	f
mimeapp_get_mime	src/desktop/handler/mimeapp.c	/^MimeHandler * mimeapp_get_mime(MimeApp const * mimeapp)$/;"	f
mimeapp_new	src/desktop/handler/mimeapp.c	/^MimeApp * mimeapp_new(MimeHandler * mime, String const * datadir)$/;"	f
mimetype	src/desktop/desktopicon.c	/^	char const * mimetype;$/;"	m	struct:_DesktopIcon	file:
min	src/common.c	/^#define min(/;"	d	file:
min	src/plugins/preview.c	/^# define min(/;"	d	file:
mode	src/delete.c	/^	DeleteMode mode;$/;"	m	struct:_Delete	file:
mode	src/plugins/properties.c	/^	GtkWidget * mode[9];$/;"	m	struct:_BrowserPlugin	file:
monitor	src/desktop/desktop.h	/^	int monitor;$/;"	m	struct:_DesktopPrefs
move_CFLAGS	src/Makefile	/^move_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
move_LDFLAGS	src/Makefile	/^move_LDFLAGS = $(LDFLAGSF) $(LDFLAGS) -L$(OBJDIR)lib -Wl,-rpath,$(PREFIX)\/lib -lBrowser$/;"	m
move_OBJS	src/Makefile	/^move_OBJS = $(OBJDIR)move.o$/;"	m
mtime	src/plugins/properties.c	/^	GtkWidget * mtime;$/;"	m	struct:_BrowserPlugin	file:
name	include/Browser/plugin.h	/^	char const * name;$/;"	m	struct:_BrowserPluginDefinition
name	src/desktop/desktopicon.c	/^	char * name;$/;"	m	struct:_DesktopIcon	file:
name	src/desktop/handler.c	/^	char const * name;$/;"	m	struct:_DesktopCategory	file:
name	src/plugins/cvs.c	/^	GtkWidget * name;$/;"	m	struct:_BrowserPlugin	file:
name	src/plugins/git.c	/^	GtkWidget * name;$/;"	m	struct:_BrowserPlugin	file:
name	src/plugins/make.c	/^	GtkWidget * name;$/;"	m	struct:_BrowserPlugin	file:
name	src/plugins/preview.c	/^	GtkWidget * name;$/;"	m	struct:_BrowserPlugin	file:
name	src/plugins/properties.c	/^	GtkWidget * name;$/;"	m	struct:_BrowserPlugin	file:
name	src/plugins/subversion.c	/^	GtkWidget * name;$/;"	m	struct:_BrowserPlugin	file:
notebook	src/properties.c	/^	GtkWidget * notebook;$/;"	m	struct:_Browser	file:
o_channel	src/plugins/common.c	/^	GIOChannel * o_channel;$/;"	m	struct:_CommonTask	file:
o_fd	src/plugins/common.c	/^	gint o_fd;$/;"	m	struct:_CommonTask	file:
o_source	src/plugins/common.c	/^	guint o_source;$/;"	m	struct:_CommonTask	file:
on_back	src/browser/callbacks.c	/^void on_back(gpointer data)$/;"	f
on_copy	src/browser/callbacks.c	/^void on_copy(gpointer data)$/;"	f
on_cut	src/browser/callbacks.c	/^void on_cut(gpointer data)$/;"	f
on_delete	src/browser/callbacks.c	/^void on_delete(gpointer data)$/;"	f
on_forward	src/browser/callbacks.c	/^void on_forward(gpointer data)$/;"	f
on_home	src/browser/callbacks.c	/^void on_home(gpointer data)$/;"	f
on_location	src/browser/callbacks.c	/^void on_location(gpointer data)$/;"	f
on_new_folder	src/browser/callbacks.c	/^void on_new_folder(gpointer data)$/;"	f
on_new_symlink	src/browser/callbacks.c	/^void on_new_symlink(gpointer data)$/;"	f
on_new_window	src/browser/callbacks.c	/^void on_new_window(gpointer data)$/;"	f
on_open_file	src/browser/callbacks.c	/^void on_open_file(gpointer data)$/;"	f
on_paste	src/browser/callbacks.c	/^void on_paste(gpointer data)$/;"	f
on_path_activate	src/browser/callbacks.c	/^void on_path_activate(gpointer data)$/;"	f
on_preferences	src/browser/callbacks.c	/^void on_preferences(gpointer data)$/;"	f
on_properties	src/browser/callbacks.c	/^void on_properties(gpointer data)$/;"	f
on_refresh	src/browser/callbacks.c	/^void on_refresh(gpointer data)$/;"	f
on_updir	src/browser/callbacks.c	/^void on_updir(gpointer data)$/;"	f
on_view_as	src/browser/callbacks.c	/^void on_view_as(gpointer data)$/;"	f
on_view_details	src/browser/callbacks.c	/^void on_view_details(gpointer data)$/;"	f
on_view_icons	src/browser/callbacks.c	/^void on_view_icons(gpointer data)$/;"	f
on_view_list	src/browser/callbacks.c	/^void on_view_list(gpointer data)$/;"	f
on_view_thumbnails	src/browser/callbacks.c	/^void on_view_thumbnails(gpointer data)$/;"	f
open	src/plugins/preview.c	/^	GtkToolItem * open;$/;"	m	struct:_BrowserPlugin	file:
open_CFLAGS	src/Makefile	/^open_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
open_LDFLAGS	src/Makefile	/^open_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
open_OBJS	src/Makefile	/^open_OBJS = $(OBJDIR)open.o$/;"	m
out_channel	src/copy.c	/^	GIOChannel * out_channel;$/;"	m	struct:_Copy	file:
out_id	src/copy.c	/^	guint out_id;$/;"	m	struct:_Copy	file:
owner	src/plugins/properties.c	/^	GtkWidget * owner;$/;"	m	struct:_BrowserPlugin	file:
path	src/browser/browser.c	/^	char * path;$/;"	m	struct:_IconCallback	file:
path	src/desktop/desktopicon.c	/^	char * path;$/;"	m	struct:_DesktopIcon	file:
path	src/desktop/handler.c	/^	char * path;$/;"	m	struct:_DesktopHandlerFiles	file:
path	src/plugins/preview.c	/^	char * path;$/;"	m	struct:_BrowserPlugin	file:
pid	src/plugins/common.c	/^	GPid pid;$/;"	m	struct:_CommonTask	file:
pixmap	src/desktop/desktop.c	/^	GdkPixmap * pixmap;$/;"	m	struct:_Desktop	file:
pl_box	src/browser/browser.c	/^	GtkWidget * pl_box;$/;"	m	struct:_Browser	file:
pl_combo	src/browser/browser.c	/^	GtkWidget * pl_combo;$/;"	m	struct:_Browser	file:
pl_helper	src/browser/browser.c	/^	BrowserPluginHelper pl_helper;$/;"	m	struct:_Browser	file:
pl_store	src/browser/browser.c	/^	GtkListStore * pl_store;$/;"	m	struct:_Browser	file:
pl_view	src/browser/browser.c	/^	GtkWidget * pl_view;$/;"	m	struct:_Browser	file:
places_CFLAGS	src/plugins/Makefile	/^places_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
places_LDFLAGS	src/plugins/Makefile	/^places_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
places_OBJS	src/plugins/Makefile	/^places_OBJS = $(OBJDIR)places.o$/;"	m
plugin	src/plugins/cvs.c	/^BrowserPluginDefinition plugin =$/;"	v
plugin	src/plugins/dirtree.c	/^BrowserPluginDefinition plugin =$/;"	v
plugin	src/plugins/favorites.c	/^BrowserPluginDefinition plugin =$/;"	v
plugin	src/plugins/git.c	/^BrowserPluginDefinition plugin =$/;"	v
plugin	src/plugins/make.c	/^BrowserPluginDefinition plugin =$/;"	v
plugin	src/plugins/places.c	/^BrowserPluginDefinition plugin =$/;"	v
plugin	src/plugins/preview.c	/^BrowserPluginDefinition plugin =$/;"	v
plugin	src/plugins/properties.c	/^BrowserPluginDefinition plugin =$/;"	v
plugin	src/plugins/selection.c	/^BrowserPluginDefinition plugin =$/;"	v
plugin	src/plugins/subversion.c	/^BrowserPluginDefinition plugin =$/;"	v
plugin	src/plugins/template.c	/^BrowserPluginDefinition plugin =$/;"	v
plugin	src/plugins/trash.c	/^BrowserPluginDefinition plugin =$/;"	v
plugin	src/plugins/undelete.c	/^BrowserPluginDefinition plugin =$/;"	v
plugin	src/plugins/volumes.c	/^BrowserPluginDefinition plugin =$/;"	v
plugins_CFLAGS	tests/Makefile	/^plugins_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
plugins_LDFLAGS	tests/Makefile	/^plugins_LDFLAGS = $(LDFLAGSF) $(LDFLAGS) -ldl$/;"	m
plugins_OBJS	tests/Makefile	/^plugins_OBJS = $(OBJDIR)plugins.o$/;"	m
popup	src/desktop/desktop.h	/^	int popup;$/;"	m	struct:_DesktopPrefs
pr_alternate	src/browser/browser.c	/^	GtkWidget * pr_alternate;$/;"	m	struct:_Browser	file:
pr_alternate	src/browser/window.c	/^	GtkWidget * pr_alternate;$/;"	m	struct:_BrowserWindow	file:
pr_background	src/desktop/desktop.c	/^	GtkWidget * pr_background;$/;"	m	struct:_Desktop	file:
pr_background_extend	src/desktop/desktop.c	/^	GtkWidget * pr_background_extend;$/;"	m	struct:_Desktop	file:
pr_background_how	src/desktop/desktop.c	/^	GtkWidget * pr_background_how;$/;"	m	struct:_Desktop	file:
pr_color	src/desktop/desktop.c	/^	GtkWidget * pr_color;$/;"	m	struct:_Desktop	file:
pr_confirm	src/browser/browser.c	/^	GtkWidget * pr_confirm;$/;"	m	struct:_Browser	file:
pr_confirm	src/browser/window.c	/^	GtkWidget * pr_confirm;$/;"	m	struct:_BrowserWindow	file:
pr_hidden	src/browser/browser.c	/^	GtkWidget * pr_hidden;$/;"	m	struct:_Browser	file:
pr_hidden	src/browser/window.c	/^	GtkWidget * pr_hidden;$/;"	m	struct:_BrowserWindow	file:
pr_ibcolor	src/desktop/desktop.c	/^	GtkWidget * pr_ibcolor;$/;"	m	struct:_Desktop	file:
pr_ifcolor	src/desktop/desktop.c	/^	GtkWidget * pr_ifcolor;$/;"	m	struct:_Desktop	file:
pr_ifont	src/desktop/desktop.c	/^	GtkWidget * pr_ifont;$/;"	m	struct:_Desktop	file:
pr_ilayout	src/desktop/desktop.c	/^	GtkWidget * pr_ilayout;$/;"	m	struct:_Desktop	file:
pr_imonitor	src/desktop/desktop.c	/^	GtkWidget * pr_imonitor;$/;"	m	struct:_Desktop	file:
pr_isize	src/desktop/desktop.c	/^	GtkWidget * pr_isize;$/;"	m	struct:_Desktop	file:
pr_mime_store	src/browser/browser.c	/^	GtkListStore * pr_mime_store;$/;"	m	struct:_Browser	file:
pr_mime_store	src/browser/window.c	/^	GtkListStore * pr_mime_store;$/;"	m	struct:_BrowserWindow	file:
pr_mime_view	src/browser/browser.c	/^	GtkWidget * pr_mime_view;$/;"	m	struct:_Browser	file:
pr_mime_view	src/browser/window.c	/^	GtkWidget * pr_mime_view;$/;"	m	struct:_BrowserWindow	file:
pr_monitors	src/desktop/desktop.c	/^	GtkWidget * pr_monitors;$/;"	m	struct:_Desktop	file:
pr_monitors_res	src/desktop/desktop.c	/^	GtkWidget * pr_monitors_res;$/;"	m	struct:_Desktop	file:
pr_monitors_size	src/desktop/desktop.c	/^	GtkWidget * pr_monitors_size;$/;"	m	struct:_Desktop	file:
pr_plugin_store	src/browser/browser.c	/^	GtkListStore * pr_plugin_store;$/;"	m	struct:_Browser	file:
pr_plugin_store	src/browser/window.c	/^	GtkListStore * pr_plugin_store;$/;"	m	struct:_BrowserWindow	file:
pr_plugin_view	src/browser/browser.c	/^	GtkWidget * pr_plugin_view;$/;"	m	struct:_Browser	file:
pr_plugin_view	src/browser/window.c	/^	GtkWidget * pr_plugin_view;$/;"	m	struct:_BrowserWindow	file:
pr_sort	src/browser/browser.c	/^	GtkWidget * pr_sort;$/;"	m	struct:_Browser	file:
pr_sort	src/browser/window.c	/^	GtkWidget * pr_sort;$/;"	m	struct:_BrowserWindow	file:
pr_view	src/browser/browser.c	/^	GtkWidget * pr_view;$/;"	m	struct:_Browser	file:
pr_view	src/browser/window.c	/^	GtkWidget * pr_view;$/;"	m	struct:_BrowserWindow	file:
pr_window	src/browser/browser.c	/^	GtkWidget * pr_window;$/;"	m	struct:_Browser	file:
pr_window	src/browser/window.c	/^	GtkWidget * pr_window;$/;"	m	struct:_BrowserWindow	file:
pr_window	src/desktop/desktop.c	/^	GtkWidget * pr_window;$/;"	m	struct:_Desktop	file:
prefs	src/browser/browser.c	/^	BrowserPrefs prefs;$/;"	m	struct:_Browser	file:
prefs	src/copy.c	/^	Prefs * prefs;$/;"	m	struct:_Copy	file:
prefs	src/delete.c	/^	Prefs * prefs;$/;"	m	struct:_Delete	file:
prefs	src/desktop/desktop.c	/^	DesktopPrefs prefs;$/;"	m	struct:_Desktop	file:
prefs	src/move.c	/^	Prefs * prefs;$/;"	m	struct:_Move	file:
preview_CFLAGS	src/plugins/Makefile	/^preview_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
preview_LDFLAGS	src/plugins/Makefile	/^preview_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
preview_OBJS	src/plugins/Makefile	/^preview_OBJS = $(OBJDIR)preview.o$/;"	m
progress	src/copy.c	/^	GtkWidget * progress;$/;"	m	struct:_Copy	file:
progress	src/delete.c	/^	GtkWidget * progress;$/;"	m	struct:_Delete	file:
progress	src/move.c	/^	GtkWidget * progress;$/;"	m	struct:_Move	file:
properties_CFLAGS	src/Makefile	/^properties_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
properties_CFLAGS	src/plugins/Makefile	/^properties_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
properties_LDFLAGS	src/Makefile	/^properties_LDFLAGS = $(LDFLAGSF) $(LDFLAGS) -L$(OBJDIR)lib -Wl,-rpath,$(PREFIX)\/lib -lBrowser$/;"	m
properties_LDFLAGS	src/plugins/Makefile	/^properties_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
properties_OBJS	src/Makefile	/^properties_OBJS = $(OBJDIR)properties.o$/;"	m
properties_OBJS	src/plugins/Makefile	/^properties_OBJS = $(OBJDIR)properties.o$/;"	m
refresh	doc/gtkdoc/html/Browser-plugin.html	/^<a name="refresh"><\/a><h3>refresh ()<\/h3>$/;"	a
refresh	include/Browser/plugin.h	/^	void (*refresh)(Browser * browser);$/;"	m	struct:_BrowserPluginHelper
refresh	include/Browser/plugin.h	/^	void (*refresh)(BrowserPlugin * plugin, GList * selection);$/;"	m	struct:_BrowserPluginDefinition
refresh_cnt	src/browser/browser.c	/^	unsigned int refresh_cnt;$/;"	m	struct:_Browser	file:
refresh_dev	src/browser/browser.c	/^	dev_t refresh_dev;$/;"	m	struct:_Browser	file:
refresh_dir	src/browser/browser.c	/^	DIR * refresh_dir;$/;"	m	struct:_Browser	file:
refresh_dir	src/desktop/handler.c	/^	DIR * refresh_dir;$/;"	m	struct:_DesktopHandlerApplications	file:
refresh_dir	src/desktop/handler.c	/^	DIR * refresh_dir;$/;"	m	struct:_DesktopHandlerCategories	file:
refresh_dir	src/desktop/handler.c	/^	DIR * refresh_dir;$/;"	m	struct:_DesktopHandlerFiles	file:
refresh_hid	src/browser/browser.c	/^	unsigned int refresh_hid;$/;"	m	struct:_Browser	file:
refresh_id	src/browser/browser.c	/^	guint refresh_id;$/;"	m	struct:_Browser	file:
refresh_ino	src/browser/browser.c	/^	ino_t refresh_ino;$/;"	m	struct:_Browser	file:
refresh_iter	src/browser/browser.c	/^	GtkTreeIter refresh_iter;$/;"	m	struct:_Browser	file:
refresh_mti	src/browser/browser.c	/^	time_t refresh_mti;$/;"	m	struct:_Browser	file:
refresh_mtime	src/desktop/handler.c	/^	time_t refresh_mtime;$/;"	m	struct:_DesktopHandlerApplications	file:
refresh_mtime	src/desktop/handler.c	/^	time_t refresh_mtime;$/;"	m	struct:_DesktopHandlerCategories	file:
refresh_mtime	src/desktop/handler.c	/^	time_t refresh_mtime;$/;"	m	struct:_DesktopHandlerFiles	file:
refresh_source	src/desktop/desktop.c	/^	guint refresh_source;$/;"	m	struct:_Desktop	file:
refresh_source	src/desktop/handler.c	/^	guint refresh_source;$/;"	m	struct:_DesktopHandlerApplications	file:
refresh_source	src/desktop/handler.c	/^	guint refresh_source;$/;"	m	struct:_DesktopHandlerCategories	file:
refresh_source	src/desktop/handler.c	/^	guint refresh_source;$/;"	m	struct:_DesktopHandlerFiles	file:
root	src/desktop/desktop.c	/^	GdkWindow * root;$/;"	m	struct:_Desktop	file:
screen	src/desktop/desktop.c	/^	GdkScreen * screen;$/;"	m	struct:_Desktop	file:
scrolled	src/browser/browser.c	/^	GtkWidget * scrolled;$/;"	m	struct:_Browser	file:
select_all	src/plugins/preview.c	/^	GtkToolItem * select_all;$/;"	m	struct:_BrowserPlugin	file:
selected	src/desktop/desktopicon.c	/^	gboolean selected;$/;"	m	struct:_DesktopIcon	file:
selection	src/browser/browser.c	/^	GList * selection;$/;"	m	struct:_Browser	file:
selection	src/plugins/favorites.c	/^	GList * selection;$/;"	m	struct:_BrowserPlugin	file:
selection	src/plugins/undelete.c	/^	char * selection;$/;"	m	struct:_BrowserPlugin	file:
selection_CFLAGS	src/plugins/Makefile	/^selection_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
selection_LDFLAGS	src/plugins/Makefile	/^selection_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
selection_OBJS	src/plugins/Makefile	/^selection_OBJS = $(OBJDIR)selection.o$/;"	m
selection_cut	src/browser/browser.c	/^	gboolean selection_cut;$/;"	m	struct:_Browser	file:
set-location	doc/gtkdoc/html/Browser-plugin.html	/^<a name="set-location"><\/a><h3>set_location ()<\/h3>$/;"	a
set_location	include/Browser/plugin.h	/^	int (*set_location)(Browser * browser, char const * path);$/;"	m	struct:_BrowserPluginHelper
show	src/desktop/handler.c	/^	gboolean show;$/;"	m	struct:_DesktopCategory	file:
show_hidden	src/desktop/handler.c	/^	gboolean show_hidden;$/;"	m	struct:_DesktopHandlerFiles	file:
show_hidden_files	src/browser/browser.h	/^	gboolean show_hidden_files;$/;"	m	struct:_BrowserPrefs
size	src/copy.c	/^	size_t size;$/;"	m	struct:_Copy	file:
size	src/plugins/properties.c	/^	GtkWidget * size;$/;"	m	struct:_BrowserPlugin	file:
sort_folders_first	src/browser/browser.h	/^	gboolean sort_folders_first;$/;"	m	struct:_BrowserPrefs
sorted	src/plugins/dirtree.c	/^	GtkTreeModel * sorted;$/;"	m	struct:_BrowserPlugin	file:
source	src/browser/browser.c	/^	guint source;$/;"	m	struct:_Browser	file:
source	src/plugins/common.c	/^	guint source;$/;"	m	struct:_CommonTask	file:
source	src/plugins/cvs.c	/^	guint source;$/;"	m	struct:_BrowserPlugin	file:
source	src/plugins/dirtree.c	/^	guint source;$/;"	m	struct:_BrowserPlugin	file:
source	src/plugins/git.c	/^	guint source;$/;"	m	struct:_BrowserPlugin	file:
source	src/plugins/make.c	/^	guint source;$/;"	m	struct:_BrowserPlugin	file:
source	src/plugins/preview.c	/^	guint source;$/;"	m	struct:_BrowserPlugin	file:
source	src/plugins/subversion.c	/^	guint source;$/;"	m	struct:_BrowserPlugin	file:
source	src/plugins/trash.c	/^	guint source;$/;"	m	struct:_BrowserPlugin	file:
source	src/plugins/undelete.c	/^	guint source;$/;"	m	struct:_BrowserPlugin	file:
source	src/plugins/volumes.c	/^	guint source;$/;"	m	struct:_BrowserPlugin	file:
status	src/plugins/cvs.c	/^	GtkWidget * status;$/;"	m	struct:_BrowserPlugin	file:
status	src/plugins/git.c	/^	GtkWidget * status;$/;"	m	struct:_BrowserPlugin	file:
status	src/plugins/make.c	/^	GtkWidget * status;$/;"	m	struct:_BrowserPlugin	file:
status	src/plugins/selection.c	/^	GtkWidget * status;$/;"	m	struct:_BrowserPlugin	file:
status	src/plugins/subversion.c	/^	GtkWidget * status;$/;"	m	struct:_BrowserPlugin	file:
statusbar	src/browser/browser.c	/^	GtkWidget * statusbar;$/;"	m	struct:_Browser	file:
statusbar	src/plugins/common.c	/^	GtkWidget * statusbar;$/;"	m	struct:_CommonTask	file:
statusbar_id	src/browser/browser.c	/^	guint statusbar_id;$/;"	m	struct:_Browser	file:
statusbar_id	src/plugins/common.c	/^	guint statusbar_id;$/;"	m	struct:_CommonTask	file:
store	src/browser/browser.c	/^	GtkListStore * store;$/;"	m	struct:_Browser	file:
store	src/plugins/dirtree.c	/^	GtkTreeStore * store;$/;"	m	struct:_BrowserPlugin	file:
store	src/plugins/favorites.c	/^	GtkListStore * store;$/;"	m	struct:_BrowserPlugin	file:
store	src/plugins/selection.c	/^	GtkListStore * store;$/;"	m	struct:_BrowserPlugin	file:
store	src/plugins/trash.c	/^	GtkListStore * store;$/;"	m	struct:_BrowserPlugin	file:
store	src/plugins/undelete.c	/^	GtkListStore * store;$/;"	m	struct:_BrowserPlugin	file:
store	src/plugins/volumes.c	/^	GtkListStore * store;$/;"	m	struct:_BrowserPlugin	file:
subversion_CFLAGS	src/plugins/Makefile	/^subversion_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
subversion_LDFLAGS	src/plugins/Makefile	/^subversion_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
subversion_OBJS	src/plugins/Makefile	/^subversion_OBJS = $(OBJDIR)subversion.o$/;"	m
tasks	src/plugins/cvs.c	/^	CVSTask ** tasks;$/;"	m	struct:_BrowserPlugin	file:
tasks	src/plugins/git.c	/^	GitTask ** tasks;$/;"	m	struct:_BrowserPlugin	file:
tasks	src/plugins/make.c	/^	MakeTask ** tasks;$/;"	m	struct:_BrowserPlugin	file:
tasks	src/plugins/subversion.c	/^	SVNTask ** tasks;$/;"	m	struct:_BrowserPlugin	file:
tasks_cnt	src/plugins/cvs.c	/^	size_t tasks_cnt;$/;"	m	struct:_BrowserPlugin	file:
tasks_cnt	src/plugins/git.c	/^	size_t tasks_cnt;$/;"	m	struct:_BrowserPlugin	file:
tasks_cnt	src/plugins/make.c	/^	size_t tasks_cnt;$/;"	m	struct:_BrowserPlugin	file:
tasks_cnt	src/plugins/subversion.c	/^	size_t tasks_cnt;$/;"	m	struct:_BrowserPlugin	file:
tb_back	src/browser/browser.c	/^	GtkToolItem * tb_back;$/;"	m	struct:_Browser	file:
tb_delete	src/plugins/trash.c	/^	GtkToolItem * tb_delete;$/;"	m	struct:_BrowserPlugin	file:
tb_eject	src/plugins/volumes.c	/^	GtkToolItem * tb_eject;$/;"	m	struct:_BrowserPlugin	file:
tb_forward	src/browser/browser.c	/^	GtkToolItem * tb_forward;$/;"	m	struct:_Browser	file:
tb_mount	src/plugins/volumes.c	/^	GtkToolItem * tb_mount;$/;"	m	struct:_BrowserPlugin	file:
tb_path	src/browser/browser.c	/^	GtkWidget * tb_path;$/;"	m	struct:_Browser	file:
tb_restore	src/plugins/trash.c	/^	GtkToolItem * tb_restore;$/;"	m	struct:_BrowserPlugin	file:
tb_unmount	src/plugins/volumes.c	/^	GtkToolItem * tb_unmount;$/;"	m	struct:_BrowserPlugin	file:
tb_updir	src/browser/browser.c	/^	GtkToolItem * tb_updir;$/;"	m	struct:_Browser	file:
template_CFLAGS	src/plugins/Makefile	/^template_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
template_LDFLAGS	src/plugins/Makefile	/^template_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
template_OBJS	src/plugins/Makefile	/^template_OBJS = $(OBJDIR)template.o$/;"	m
theme	src/browser/browser.c	/^	GtkIconTheme * theme;$/;"	m	struct:_Browser	file:
theme	src/desktop/desktop.c	/^	GtkIconTheme * theme;$/;"	m	struct:_Desktop	file:
theme	src/plugins/properties.c	/^	GtkIconTheme * theme;$/;"	m	struct:_BrowserPlugin	file:
theme	src/properties.c	/^	GtkIconTheme * theme;$/;"	m	struct:_Browser	file:
theme	tools/iconlist.c	/^	char * theme;$/;"	m	struct:_Prefs	file:
timeout	src/delete.c	/^	guint timeout;$/;"	m	struct:_Delete	file:
toolbar	src/plugins/preview.c	/^	GtkWidget * toolbar;$/;"	m	struct:_BrowserPlugin	file:
trash	src/plugins/backup.c	/^#define trash	/;"	d	file:
trash_CFLAGS	src/plugins/Makefile	/^trash_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
trash_LDFLAGS	src/plugins/Makefile	/^trash_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
trash_OBJS	src/plugins/Makefile	/^trash_OBJS = $(OBJDIR)trash.o$/;"	m
tv	src/copy.c	/^	struct timeval tv;$/;"	m	struct:_Copy	typeref:struct:_Copy::timeval	file:
type	src/plugins/properties.c	/^	GtkWidget * type;$/;"	m	struct:_BrowserPlugin	file:
u	src/desktop/handler.c	/^	} u;$/;"	m	struct:_DesktopHandler	typeref:union:_DesktopHandler::__anon2	file:
uid	src/plugins/properties.c	/^	uid_t uid;$/;"	m	struct:_BrowserPlugin	file:
undelete_CFLAGS	src/plugins/Makefile	/^undelete_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
undelete_LDFLAGS	src/plugins/Makefile	/^undelete_LDFLAGS = $(LDFLAGSF) $(LDFLAGS)$/;"	m
undelete_OBJS	src/plugins/Makefile	/^undelete_OBJS = $(OBJDIR)undelete.o$/;"	m
unmount	src/browser/callbacks.c	/^#  define unmount /;"	d	file:
unmount	src/browser/callbacks.c	/^#  define unmount(/;"	d	file:
unmount	src/lib/vfs.c	/^#  define unmount /;"	d	file:
unmount	src/lib/vfs.c	/^#  define unmount(/;"	d	file:
updated	src/desktop/desktopicon.c	/^	gboolean updated;		\/* XXX for desktop refresh *\/$/;"	m	struct:_DesktopIcon	file:
vfs_CFLAGS	tests/Makefile	/^vfs_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
vfs_LDFLAGS	tests/Makefile	/^vfs_LDFLAGS = $(LDFLAGSF) $(LDFLAGS) -L$(OBJDIR)..\/src\/lib -Wl,-rpath,..\/src -lBrowser$/;"	m
vfs_OBJS	tests/Makefile	/^vfs_OBJS = $(OBJDIR)vfs.o$/;"	m
view	src/browser/browser.c	/^	BrowserView view;$/;"	m	struct:_Browser	file:
view	src/plugins/common.c	/^	GtkWidget * view;$/;"	m	struct:_CommonTask	file:
view	src/plugins/dirtree.c	/^	GtkWidget * view;$/;"	m	struct:_BrowserPlugin	file:
view	src/plugins/favorites.c	/^	GtkWidget * view;$/;"	m	struct:_BrowserPlugin	file:
view	src/plugins/properties.c	/^	GtkWidget * view;$/;"	m	struct:_BrowserPlugin	file:
view	src/plugins/selection.c	/^	GtkWidget * view;$/;"	m	struct:_BrowserPlugin	file:
view	src/plugins/trash.c	/^	GtkWidget * view;$/;"	m	struct:_BrowserPlugin	file:
view	src/plugins/undelete.c	/^	GtkWidget * view;$/;"	m	struct:_BrowserPlugin	file:
view	src/plugins/volumes.c	/^	GtkWidget * view;$/;"	m	struct:_BrowserPlugin	file:
view_CFLAGS	src/Makefile	/^view_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
view_LDFLAGS	src/Makefile	/^view_LDFLAGS = $(LDFLAGSF) $(LDFLAGS) -L$(OBJDIR)lib -Wl,-rpath,$(PREFIX)\/lib -lBrowser$/;"	m
view_OBJS	src/Makefile	/^view_OBJS = $(OBJDIR)view.o$/;"	m
view_image	src/plugins/preview.c	/^	GtkWidget * view_image;$/;"	m	struct:_BrowserPlugin	file:
view_image_height	src/plugins/preview.c	/^	gint view_image_height;$/;"	m	struct:_BrowserPlugin	file:
view_image_how	src/plugins/preview.c	/^	PreviewImageHow view_image_how;$/;"	m	struct:_BrowserPlugin	file:
view_image_image	src/plugins/preview.c	/^	GtkWidget * view_image_image;$/;"	m	struct:_BrowserPlugin	file:
view_image_scale	src/plugins/preview.c	/^	gdouble view_image_scale;$/;"	m	struct:_BrowserPlugin	file:
view_image_width	src/plugins/preview.c	/^	gint view_image_width;$/;"	m	struct:_BrowserPlugin	file:
view_text	src/plugins/preview.c	/^	GtkWidget * view_text;$/;"	m	struct:_BrowserPlugin	file:
view_text_tbuf	src/plugins/preview.c	/^	GtkTextBuffer * view_text_tbuf;$/;"	m	struct:_BrowserPlugin	file:
volumes_CFLAGS	src/plugins/Makefile	/^volumes_CFLAGS = $(CPPFLAGSF) $(CPPFLAGS) $(CFLAGSF) $(CFLAGS)$/;"	m
volumes_LDFLAGS	src/plugins/Makefile	/^volumes_LDFLAGS = $(LDFLAGSF) $(LDFLAGS) -L$(OBJDIR)..\/lib -Wl,-rpath,$(LIBDIR) -lBrowser$/;"	m
volumes_OBJS	src/plugins/Makefile	/^volumes_OBJS = $(OBJDIR)volumes.o$/;"	m
widget	src/browser/browser.c	/^	GtkWidget * widget;$/;"	m	struct:_Browser	file:
widget	src/desktop/desktopiconwindow.c	/^	GtkWidget * widget;$/;"	m	struct:_DesktopIconWindow	file:
widget	src/plugins/cvs.c	/^	GtkWidget * widget;$/;"	m	struct:_BrowserPlugin	file:
widget	src/plugins/dirtree.c	/^	GtkWidget * widget;$/;"	m	struct:_BrowserPlugin	file:
widget	src/plugins/favorites.c	/^	GtkWidget * widget;$/;"	m	struct:_BrowserPlugin	file:
widget	src/plugins/git.c	/^	GtkWidget * widget;$/;"	m	struct:_BrowserPlugin	file:
widget	src/plugins/make.c	/^	GtkWidget * widget;$/;"	m	struct:_BrowserPlugin	file:
widget	src/plugins/places.c	/^	GtkWidget * widget;$/;"	m	struct:_BrowserPlugin	file:
widget	src/plugins/preview.c	/^	GtkWidget * widget;$/;"	m	struct:_BrowserPlugin	file:
widget	src/plugins/selection.c	/^	GtkWidget * widget;$/;"	m	struct:_BrowserPlugin	file:
widget	src/plugins/subversion.c	/^	GtkWidget * widget;$/;"	m	struct:_BrowserPlugin	file:
widget	src/plugins/template.c	/^	GtkWidget * widget;$/;"	m	struct:_BrowserPlugin	file:
widget	src/plugins/trash.c	/^	GtkWidget * widget;$/;"	m	struct:_BrowserPlugin	file:
widget	src/plugins/volumes.c	/^	GtkWidget * widget;$/;"	m	struct:_BrowserPlugin	file:
widget	src/widget/widget.c	/^DesktopWidgetDefinition widget =$/;"	v
width	src/plugins/volumes.c	/^	gint width;$/;"	m	struct:_BrowserPlugin	file:
window	src/browser/browser.c	/^	GtkWidget * window;$/;"	m	struct:_Browser	file:
window	src/browser/window.c	/^	GtkWidget * window;$/;"	m	struct:_BrowserWindow	file:
window	src/copy.c	/^	GtkWidget * window;$/;"	m	struct:_Copy	file:
window	src/delete.c	/^	GtkWidget * window;$/;"	m	struct:_Delete	file:
window	src/desktop/desktop.c	/^	GdkRectangle window;$/;"	m	struct:_Desktop	file:
window	src/desktop/desktop.h	/^	int window;$/;"	m	struct:_DesktopPrefs
window	src/desktop/desktopicon.c	/^	GtkWidget * window;		\/* XXX for transparency *\/$/;"	m	struct:_DesktopIcon	file:
window	src/move.c	/^	GtkWidget * window;$/;"	m	struct:_Move	file:
window	src/plugins/common.c	/^	GtkWidget * window;$/;"	m	struct:_CommonTask	file:
window	src/plugins/undelete.c	/^	GtkWidget * window;$/;"	m	struct:_BrowserPlugin	file:
window	src/plugins/volumes.c	/^	GtkWidget * window;$/;"	m	struct:_BrowserPlugin	file:
window	src/properties.c	/^	GtkWidget * window;$/;"	m	struct:_Browser	file:
window	src/view.c	/^	GtkWidget * window;$/;"	m	struct:_Browser	file:
workarea	src/desktop/desktop.c	/^	GdkRectangle workarea;$/;"	m	struct:_Desktop	file:
zoom_100	src/plugins/preview.c	/^	GtkToolItem * zoom_100;$/;"	m	struct:_BrowserPlugin	file:
zoom_fit	src/plugins/preview.c	/^	GtkToolItem * zoom_fit;$/;"	m	struct:_BrowserPlugin	file:
zoom_in	src/plugins/preview.c	/^	GtkToolItem * zoom_in;$/;"	m	struct:_BrowserPlugin	file:
zoom_out	src/plugins/preview.c	/^	GtkToolItem * zoom_out;$/;"	m	struct:_BrowserPlugin	file:
